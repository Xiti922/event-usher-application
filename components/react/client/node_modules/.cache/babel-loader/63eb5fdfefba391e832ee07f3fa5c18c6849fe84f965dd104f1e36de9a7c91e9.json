{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StoreUtils = void 0;\nconst unit_1 = require(\"@keplr-wallet/unit\");\nclass StoreUtils {\n  static getBalancesFromCurrencies(currenciesMap, bals) {\n    const result = [];\n    for (const bal of bals) {\n      const currency = currenciesMap[bal.denom];\n      if (currency) {\n        const amount = new unit_1.Dec(bal.amount);\n        if (amount.truncate().gt(new unit_1.Int(0))) {\n          result.push(new unit_1.CoinPretty(currency, amount));\n        }\n      }\n    }\n    return result;\n  }\n  static getBalanceFromCurrency(currency, bals) {\n    const result = StoreUtils.getBalancesFromCurrencies({\n      [currency.coinMinimalDenom]: currency\n    }, bals);\n    if (result.length === 1) {\n      return result[0];\n    }\n    return new unit_1.CoinPretty(currency, new unit_1.Int(0)).ready(false);\n  }\n}\nexports.StoreUtils = StoreUtils;","map":{"version":3,"mappings":";;;;;;AAEA;AAEA,MAAaA,UAAU;EACd,OAAOC,yBAAyB,CACrCC,aAEC,EACDC,IAAqB;IAErB,MAAMC,MAAM,GAAiB,EAAE;IAC/B,KAAK,MAAMC,GAAG,IAAIF,IAAI,EAAE;MACtB,MAAMG,QAAQ,GAAGJ,aAAa,CAACG,GAAG,CAACE,KAAK,CAAC;MACzC,IAAID,QAAQ,EAAE;QACZ,MAAME,MAAM,GAAG,IAAIC,UAAG,CAACJ,GAAG,CAACG,MAAM,CAAC;QAClC,IAAIA,MAAM,CAACE,QAAQ,EAAE,CAACC,EAAE,CAAC,IAAIF,UAAG,CAAC,CAAC,CAAC,CAAC,EAAE;UACpCL,MAAM,CAACQ,IAAI,CAAC,IAAIH,iBAAU,CAACH,QAAQ,EAAEE,MAAM,CAAC,CAAC;;;;IAKnD,OAAOJ,MAAM;EACf;EAEO,OAAOS,sBAAsB,CAClCP,QAAkB,EAClBH,IAAqB;IAErB,MAAMC,MAAM,GAAGJ,UAAU,CAACC,yBAAyB,CACjD;MACE,CAACK,QAAQ,CAACQ,gBAAgB,GAAGR;KAC9B,EACDH,IAAI,CACL;IAED,IAAIC,MAAM,CAACW,MAAM,KAAK,CAAC,EAAE;MACvB,OAAOX,MAAM,CAAC,CAAC,CAAC;;IAGlB,OAAO,IAAIK,iBAAU,CAACH,QAAQ,EAAE,IAAIG,UAAG,CAAC,CAAC,CAAC,CAAC,CAACO,KAAK,CAAC,KAAK,CAAC;EAC1D;;AArCFC","names":["StoreUtils","getBalancesFromCurrencies","currenciesMap","bals","result","bal","currency","denom","amount","unit_1","truncate","gt","push","getBalanceFromCurrency","coinMinimalDenom","length","ready","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/common/utils/index.ts"],"sourcesContent":["import { Currency } from \"@keplr-wallet/types\";\nimport { CoinPrimitive } from \"../types\";\nimport { CoinPretty, Dec, Int } from \"@keplr-wallet/unit\";\n\nexport class StoreUtils {\n  public static getBalancesFromCurrencies(\n    currenciesMap: {\n      [denom: string]: Currency;\n    },\n    bals: CoinPrimitive[]\n  ): CoinPretty[] {\n    const result: CoinPretty[] = [];\n    for (const bal of bals) {\n      const currency = currenciesMap[bal.denom];\n      if (currency) {\n        const amount = new Dec(bal.amount);\n        if (amount.truncate().gt(new Int(0))) {\n          result.push(new CoinPretty(currency, amount));\n        }\n      }\n    }\n\n    return result;\n  }\n\n  public static getBalanceFromCurrency(\n    currency: Currency,\n    bals: CoinPrimitive[]\n  ): CoinPretty {\n    const result = StoreUtils.getBalancesFromCurrencies(\n      {\n        [currency.coinMinimalDenom]: currency,\n      },\n      bals\n    );\n\n    if (result.length === 1) {\n      return result[0];\n    }\n\n    return new CoinPretty(currency, new Int(0)).ready(false);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}