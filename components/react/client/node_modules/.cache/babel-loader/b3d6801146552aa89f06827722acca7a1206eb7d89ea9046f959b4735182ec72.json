{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = void 0;\nconst messages_1 = require(\"./messages\");\nconst constants_1 = require(\"./constants\");\nconst handler_1 = require(\"./handler\");\nfunction init(router, service) {\n  router.registerMessage(messages_1.RestoreKeyRingMsg);\n  router.registerMessage(messages_1.DeleteKeyRingMsg);\n  router.registerMessage(messages_1.UpdateNameKeyRingMsg);\n  router.registerMessage(messages_1.ShowKeyRingMsg);\n  router.registerMessage(messages_1.CreateMnemonicKeyMsg);\n  router.registerMessage(messages_1.AddMnemonicKeyMsg);\n  router.registerMessage(messages_1.CreatePrivateKeyMsg);\n  router.registerMessage(messages_1.AddPrivateKeyMsg);\n  router.registerMessage(messages_1.CreateLedgerKeyMsg);\n  router.registerMessage(messages_1.AddLedgerKeyMsg);\n  router.registerMessage(messages_1.LockKeyRingMsg);\n  router.registerMessage(messages_1.UnlockKeyRingMsg);\n  router.registerMessage(messages_1.GetKeyMsg);\n  router.registerMessage(messages_1.RequestSignAminoMsg);\n  router.registerMessage(messages_1.RequestVerifyADR36AminoSignDoc);\n  router.registerMessage(messages_1.RequestSignDirectMsg);\n  router.registerMessage(messages_1.GetMultiKeyStoreInfoMsg);\n  router.registerMessage(messages_1.ChangeKeyRingMsg);\n  router.registerMessage(messages_1.GetIsKeyStoreCoinTypeSetMsg);\n  router.registerMessage(messages_1.SetKeyStoreCoinTypeMsg);\n  router.registerMessage(messages_1.CheckPasswordMsg);\n  router.registerMessage(messages_1.ExportKeyRingDatasMsg);\n  router.addHandler(constants_1.ROUTE, handler_1.getHandler(service));\n}\nexports.init = init;","map":{"version":3,"mappings":";;;;;;AACA;AAwBA;AACA;AAGA,SAAgBA,IAAI,CAACC,MAAc,EAAEC,OAAuB;EAC1DD,MAAM,CAACE,eAAe,CAACC,4BAAiB,CAAC;EACzCH,MAAM,CAACE,eAAe,CAACC,2BAAgB,CAAC;EACxCH,MAAM,CAACE,eAAe,CAACC,+BAAoB,CAAC;EAC5CH,MAAM,CAACE,eAAe,CAACC,yBAAc,CAAC;EACtCH,MAAM,CAACE,eAAe,CAACC,+BAAoB,CAAC;EAC5CH,MAAM,CAACE,eAAe,CAACC,4BAAiB,CAAC;EACzCH,MAAM,CAACE,eAAe,CAACC,8BAAmB,CAAC;EAC3CH,MAAM,CAACE,eAAe,CAACC,2BAAgB,CAAC;EACxCH,MAAM,CAACE,eAAe,CAACC,6BAAkB,CAAC;EAC1CH,MAAM,CAACE,eAAe,CAACC,0BAAe,CAAC;EACvCH,MAAM,CAACE,eAAe,CAACC,yBAAc,CAAC;EACtCH,MAAM,CAACE,eAAe,CAACC,2BAAgB,CAAC;EACxCH,MAAM,CAACE,eAAe,CAACC,oBAAS,CAAC;EACjCH,MAAM,CAACE,eAAe,CAACC,8BAAmB,CAAC;EAC3CH,MAAM,CAACE,eAAe,CAACC,yCAA8B,CAAC;EACtDH,MAAM,CAACE,eAAe,CAACC,+BAAoB,CAAC;EAC5CH,MAAM,CAACE,eAAe,CAACC,kCAAuB,CAAC;EAC/CH,MAAM,CAACE,eAAe,CAACC,2BAAgB,CAAC;EACxCH,MAAM,CAACE,eAAe,CAACC,sCAA2B,CAAC;EACnDH,MAAM,CAACE,eAAe,CAACC,iCAAsB,CAAC;EAC9CH,MAAM,CAACE,eAAe,CAACC,2BAAgB,CAAC;EACxCH,MAAM,CAACE,eAAe,CAACC,gCAAqB,CAAC;EAE7CH,MAAM,CAACI,UAAU,CAACC,iBAAK,EAAEC,oBAAU,CAACL,OAAO,CAAC,CAAC;AAC/C;AAzBAM","names":["init","router","service","registerMessage","messages_1","addHandler","constants_1","handler_1","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/keyring/init.ts"],"sourcesContent":["import { Router } from \"@keplr-wallet/router\";\nimport {\n  CreateMnemonicKeyMsg,\n  CreatePrivateKeyMsg,\n  GetKeyMsg,\n  UnlockKeyRingMsg,\n  RequestSignAminoMsg,\n  RequestSignDirectMsg,\n  LockKeyRingMsg,\n  DeleteKeyRingMsg,\n  UpdateNameKeyRingMsg,\n  ShowKeyRingMsg,\n  AddMnemonicKeyMsg,\n  AddPrivateKeyMsg,\n  GetMultiKeyStoreInfoMsg,\n  ChangeKeyRingMsg,\n  CreateLedgerKeyMsg,\n  AddLedgerKeyMsg,\n  GetIsKeyStoreCoinTypeSetMsg,\n  SetKeyStoreCoinTypeMsg,\n  RestoreKeyRingMsg,\n  CheckPasswordMsg,\n  ExportKeyRingDatasMsg,\n  RequestVerifyADR36AminoSignDoc,\n} from \"./messages\";\nimport { ROUTE } from \"./constants\";\nimport { getHandler } from \"./handler\";\nimport { KeyRingService } from \"./service\";\n\nexport function init(router: Router, service: KeyRingService): void {\n  router.registerMessage(RestoreKeyRingMsg);\n  router.registerMessage(DeleteKeyRingMsg);\n  router.registerMessage(UpdateNameKeyRingMsg);\n  router.registerMessage(ShowKeyRingMsg);\n  router.registerMessage(CreateMnemonicKeyMsg);\n  router.registerMessage(AddMnemonicKeyMsg);\n  router.registerMessage(CreatePrivateKeyMsg);\n  router.registerMessage(AddPrivateKeyMsg);\n  router.registerMessage(CreateLedgerKeyMsg);\n  router.registerMessage(AddLedgerKeyMsg);\n  router.registerMessage(LockKeyRingMsg);\n  router.registerMessage(UnlockKeyRingMsg);\n  router.registerMessage(GetKeyMsg);\n  router.registerMessage(RequestSignAminoMsg);\n  router.registerMessage(RequestVerifyADR36AminoSignDoc);\n  router.registerMessage(RequestSignDirectMsg);\n  router.registerMessage(GetMultiKeyStoreInfoMsg);\n  router.registerMessage(ChangeKeyRingMsg);\n  router.registerMessage(GetIsKeyStoreCoinTypeSetMsg);\n  router.registerMessage(SetKeyStoreCoinTypeMsg);\n  router.registerMessage(CheckPasswordMsg);\n  router.registerMessage(ExportKeyRingDatasMsg);\n\n  router.addHandler(ROUTE, getHandler(service));\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}