{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst long_1 = __importDefault(require(\"long\"));\nconst multisig_1 = require(\"../../../../cosmos/crypto/multisig/v1beta1/multisig\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"cosmos.tx.signing.v1beta1\";\n/** SignMode represents a signing mode with its own security guarantees. */\nvar SignMode;\n(function (SignMode) {\n  /**\n   * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n   * rejected\n   */\n  SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n  /**\n   * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n   * verified with raw bytes from Tx\n   */\n  SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n  /**\n   * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n   * human-readable textual representation on top of the binary representation\n   * from SIGN_MODE_DIRECT\n   */\n  SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n  /**\n   * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n   * Amino JSON and will be removed in the future\n   */\n  SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n  SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignMode = exports.SignMode || (exports.SignMode = {}));\nfunction signModeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return SignMode.SIGN_MODE_TEXTUAL;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignMode.UNRECOGNIZED;\n  }\n}\nexports.signModeFromJSON = signModeFromJSON;\nfunction signModeToJSON(object) {\n  switch (object) {\n    case SignMode.SIGN_MODE_UNSPECIFIED:\n      return \"SIGN_MODE_UNSPECIFIED\";\n    case SignMode.SIGN_MODE_DIRECT:\n      return \"SIGN_MODE_DIRECT\";\n    case SignMode.SIGN_MODE_TEXTUAL:\n      return \"SIGN_MODE_TEXTUAL\";\n    case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n      return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\nexports.signModeToJSON = signModeToJSON;\nconst baseSignatureDescriptors = {};\nexports.SignatureDescriptors = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptors);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptors);\n    message.signatures = [];\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptors);\n    message.signatures = [];\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor = {\n  sequence: long_1.default.UZERO\n};\nexports.SignatureDescriptor = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor);\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromJSON(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n    if (object.data !== undefined && object.data !== null) {\n      message.data = exports.SignatureDescriptor_Data.fromJSON(object.data);\n    } else {\n      message.data = undefined;\n    }\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = long_1.default.fromString(object.sequence);\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.data !== undefined && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor);\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromPartial(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n    if (object.data !== undefined && object.data !== null) {\n      message.data = exports.SignatureDescriptor_Data.fromPartial(object.data);\n    } else {\n      message.data = undefined;\n    }\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = object.sequence;\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor_Data = {};\nexports.SignatureDescriptor_Data = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.single !== undefined) {\n      exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor_Data);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data);\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.SignatureDescriptor_Data_Single.fromJSON(object.single);\n    } else {\n      message.single = undefined;\n    }\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data);\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.SignatureDescriptor_Data_Single.fromPartial(object.single);\n    } else {\n      message.single = undefined;\n    }\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor_Data_Single = {\n  mode: 0\n};\nexports.SignatureDescriptor_Data_Single = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Single);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Single);\n    if (object.mode !== undefined && object.mode !== null) {\n      message.mode = signModeFromJSON(object.mode);\n    } else {\n      message.mode = 0;\n    }\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = bytesFromBase64(object.signature);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Single);\n    if (object.mode !== undefined && object.mode !== null) {\n      message.mode = object.mode;\n    } else {\n      message.mode = 0;\n    }\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = object.signature;\n    } else {\n      message.signature = new Uint8Array();\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor_Data_Multi = {};\nexports.SignatureDescriptor_Data_Multi = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Multi);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Multi);\n    message.signatures = [];\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor_Data.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Multi);\n    message.signatures = [];\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor_Data.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n  return btoa(bin.join(\"\"));\n}","map":{"version":3,"mappings":"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","names":["exports","SignMode","signModeFromJSON","object","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_LEGACY_AMINO_JSON","UNRECOGNIZED","signModeToJSON","baseSignatureDescriptors","encode","message","writer","minimal_1","Writer","create","v","signatures","uint32","fork","ldelim","decode","input","length","reader","Uint8Array","Reader","end","undefined","len","pos","Object","tag","push","skipType","fromJSON","e","toJSON","obj","map","fromPartial","baseSignatureDescriptor","sequence","long_1","UZERO","publicKey","any_1","data","isZero","uint64","fromString","toString","baseSignatureDescriptor_Data","single","multi","baseSignatureDescriptor_Data_Single","mode","int32","signature","bytes","bytesFromBase64","base64FromBytes","baseSignatureDescriptor_Data_Multi","bitarray","multisig_1","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byteLength","String","fromCharCode","join"],"sources":["../../../../../../src/codec/cosmos/tx/signing/v1beta1/signing.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}