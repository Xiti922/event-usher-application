{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultProtoCodec = exports.ProtoCodec = void 0;\nconst proto_1 = require(\"../proto\");\nconst proto_2 = require(\"../proto\");\nconst unknown_1 = require(\"./unknown\");\n__exportStar(require(\"./unknown\"), exports);\nclass ProtoCodec {\n  constructor() {\n    this.typeUrlMap = new Map();\n  }\n  /**\n   * Unpack the any to the registered message.\n   * NOTE: If there is no matched message, it will not throw an error but return the `UnknownMessage` class.\n   * @param iAny\n   */\n  unpackAny(iAny) {\n    const any = new proto_1.google.protobuf.Any(iAny);\n    if (!this.typeUrlMap.has(any.type_url)) {\n      return new unknown_1.UnknownMessage(any.type_url, any.value);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.typeUrlMap.get(any.type_url).decode(any.value);\n  }\n  registerAny(typeUrl, message) {\n    this.typeUrlMap.set(typeUrl, message);\n  }\n}\nexports.ProtoCodec = ProtoCodec;\nexports.defaultProtoCodec = new ProtoCodec();\nexports.defaultProtoCodec.registerAny(\"/cosmos.bank.v1beta1.MsgSend\", proto_2.cosmos.bank.v1beta1.MsgSend);\nexports.defaultProtoCodec.registerAny(\"/cosmos.staking.v1beta1.MsgDelegate\", proto_2.cosmos.staking.v1beta1.MsgDelegate);\nexports.defaultProtoCodec.registerAny(\"/cosmos.staking.v1beta1.MsgUndelegate\", proto_2.cosmos.staking.v1beta1.MsgUndelegate);\nexports.defaultProtoCodec.registerAny(\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", proto_2.cosmos.staking.v1beta1.MsgBeginRedelegate);\nexports.defaultProtoCodec.registerAny(\"/cosmwasm.wasm.v1.MsgExecuteContract\", proto_2.cosmwasm.wasm.v1.MsgExecuteContract);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AAEAA;AAEA,MAAaC,UAAU;EAAvBC;IACY,eAAU,GAKhB,IAAIC,GAAG,EAAE;EA0Bf;EAxBE;;;;;EAKAC,SAAS,CAACC,IAA0B;IAClC,MAAMC,GAAG,GAAG,IAAIC,cAAM,CAACC,QAAQ,CAACC,GAAG,CAACJ,IAAI,CAAC;IAEzC,IAAI,CAAC,IAAI,CAACK,UAAU,CAACC,GAAG,CAACL,GAAG,CAACM,QAAQ,CAAC,EAAE;MACtC,OAAO,IAAIC,wBAAc,CAACP,GAAG,CAACM,QAAQ,EAAEN,GAAG,CAACQ,KAAK,CAAC;;IAGpD;IACA,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAACT,GAAG,CAACM,QAAQ,CAAE,CAACI,MAAM,CAACV,GAAG,CAACQ,KAAK,CAAC;EAC7D;EAEAG,WAAW,CACTC,OAAe,EACfC,OAEC;IAED,IAAI,CAACT,UAAU,CAACU,GAAG,CAACF,OAAO,EAAEC,OAAO,CAAC;EACvC;;AA/BFE;AAkCaA,yBAAiB,GAAG,IAAIpB,UAAU,EAAE;AACjDoB,yBAAiB,CAACJ,WAAW,CAC3B,8BAA8B,EAC9BK,cAAM,CAACC,IAAI,CAACC,OAAO,CAACC,OAAO,CAC5B;AACDJ,yBAAiB,CAACJ,WAAW,CAC3B,qCAAqC,EACrCK,cAAM,CAACI,OAAO,CAACF,OAAO,CAACG,WAAW,CACnC;AACDN,yBAAiB,CAACJ,WAAW,CAC3B,uCAAuC,EACvCK,cAAM,CAACI,OAAO,CAACF,OAAO,CAACI,aAAa,CACrC;AACDP,yBAAiB,CAACJ,WAAW,CAC3B,4CAA4C,EAC5CK,cAAM,CAACI,OAAO,CAACF,OAAO,CAACK,kBAAkB,CAC1C;AACDR,yBAAiB,CAACJ,WAAW,CAC3B,sCAAsC,EACtCK,gBAAQ,CAACQ,IAAI,CAACC,EAAE,CAACC,kBAAkB,CACpC","names":["__exportStar","ProtoCodec","constructor","Map","unpackAny","iAny","any","proto_1","protobuf","Any","typeUrlMap","has","type_url","unknown_1","value","get","decode","registerAny","typeUrl","message","set","exports","proto_2","bank","v1beta1","MsgSend","staking","MsgDelegate","MsgUndelegate","MsgBeginRedelegate","wasm","v1","MsgExecuteContract"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/cosmos/src/stargate/codec/index.ts"],"sourcesContent":["import { google } from \"../proto\";\nimport * as $protobuf from \"protobufjs\";\n\nimport { cosmos, cosmwasm } from \"../proto\";\nimport { UnknownMessage } from \"./unknown\";\n\nexport * from \"./unknown\";\n\nexport class ProtoCodec {\n  protected typeUrlMap: Map<\n    string,\n    {\n      decode: (r: $protobuf.Reader | Uint8Array, l?: number) => any;\n    }\n  > = new Map();\n\n  /**\n   * Unpack the any to the registered message.\n   * NOTE: If there is no matched message, it will not throw an error but return the `UnknownMessage` class.\n   * @param iAny\n   */\n  unpackAny(iAny: google.protobuf.IAny): any {\n    const any = new google.protobuf.Any(iAny);\n\n    if (!this.typeUrlMap.has(any.type_url)) {\n      return new UnknownMessage(any.type_url, any.value);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.typeUrlMap.get(any.type_url)!.decode(any.value);\n  }\n\n  registerAny(\n    typeUrl: string,\n    message: {\n      decode: (r: $protobuf.Reader | Uint8Array, l?: number) => any;\n    }\n  ): void {\n    this.typeUrlMap.set(typeUrl, message);\n  }\n}\n\nexport const defaultProtoCodec = new ProtoCodec();\ndefaultProtoCodec.registerAny(\n  \"/cosmos.bank.v1beta1.MsgSend\",\n  cosmos.bank.v1beta1.MsgSend\n);\ndefaultProtoCodec.registerAny(\n  \"/cosmos.staking.v1beta1.MsgDelegate\",\n  cosmos.staking.v1beta1.MsgDelegate\n);\ndefaultProtoCodec.registerAny(\n  \"/cosmos.staking.v1beta1.MsgUndelegate\",\n  cosmos.staking.v1beta1.MsgUndelegate\n);\ndefaultProtoCodec.registerAny(\n  \"/cosmos.staking.v1beta1.MsgBeginRedelegate\",\n  cosmos.staking.v1beta1.MsgBeginRedelegate\n);\ndefaultProtoCodec.registerAny(\n  \"/cosmwasm.wasm.v1.MsgExecuteContract\",\n  cosmwasm.wasm.v1.MsgExecuteContract\n);\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}