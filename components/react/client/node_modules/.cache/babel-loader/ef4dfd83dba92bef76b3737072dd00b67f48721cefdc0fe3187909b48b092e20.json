{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"tendermint.crypto\";\nfunction createBaseProof() {\n  return {\n    total: long_1.default.ZERO,\n    index: long_1.default.ZERO,\n    leafHash: new Uint8Array(),\n    aunts: []\n  };\n}\nexports.Proof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.total.isZero()) {\n      writer.uint32(8).int64(message.total);\n    }\n    if (!message.index.isZero()) {\n      writer.uint32(16).int64(message.index);\n    }\n    if (message.leafHash.length !== 0) {\n      writer.uint32(26).bytes(message.leafHash);\n    }\n    for (const v of message.aunts) {\n      writer.uint32(34).bytes(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.int64();\n          break;\n        case 2:\n          message.index = reader.int64();\n          break;\n        case 3:\n          message.leafHash = reader.bytes();\n          break;\n        case 4:\n          message.aunts.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      total: isSet(object.total) ? long_1.default.fromValue(object.total) : long_1.default.ZERO,\n      index: isSet(object.index) ? long_1.default.fromValue(object.index) : long_1.default.ZERO,\n      leafHash: isSet(object.leafHash) ? bytesFromBase64(object.leafHash) : new Uint8Array(),\n      aunts: Array.isArray(object === null || object === void 0 ? void 0 : object.aunts) ? object.aunts.map(e => bytesFromBase64(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.total !== undefined && (obj.total = (message.total || long_1.default.ZERO).toString());\n    message.index !== undefined && (obj.index = (message.index || long_1.default.ZERO).toString());\n    message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n    if (message.aunts) {\n      obj.aunts = message.aunts.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.aunts = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseProof();\n    message.total = object.total !== undefined && object.total !== null ? long_1.default.fromValue(object.total) : long_1.default.ZERO;\n    message.index = object.index !== undefined && object.index !== null ? long_1.default.fromValue(object.index) : long_1.default.ZERO;\n    message.leafHash = (_a = object.leafHash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.aunts = ((_b = object.aunts) === null || _b === void 0 ? void 0 : _b.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseValueOp() {\n  return {\n    key: new Uint8Array(),\n    proof: undefined\n  };\n}\nexports.ValueOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.proof !== undefined) {\n      exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseValueOp();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.proof = exports.Proof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      proof: isSet(object.proof) ? exports.Proof.fromJSON(object.proof) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseValueOp();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proof = object.proof !== undefined && object.proof !== null ? exports.Proof.fromPartial(object.proof) : undefined;\n    return message;\n  }\n};\nfunction createBaseDominoOp() {\n  return {\n    key: \"\",\n    input: \"\",\n    output: \"\"\n  };\n}\nexports.DominoOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.input !== \"\") {\n      writer.uint32(18).string(message.input);\n    }\n    if (message.output !== \"\") {\n      writer.uint32(26).string(message.output);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDominoOp();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.input = reader.string();\n          break;\n        case 3:\n          message.output = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      input: isSet(object.input) ? String(object.input) : \"\",\n      output: isSet(object.output) ? String(object.output) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.input !== undefined && (obj.input = message.input);\n    message.output !== undefined && (obj.output = message.output);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseDominoOp();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : \"\";\n    message.input = (_b = object.input) !== null && _b !== void 0 ? _b : \"\";\n    message.output = (_c = object.output) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nfunction createBaseProofOp() {\n  return {\n    type: \"\",\n    key: new Uint8Array(),\n    data: new Uint8Array()\n  };\n}\nexports.ProofOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    if (message.key.length !== 0) {\n      writer.uint32(18).bytes(message.key);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(26).bytes(message.data);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProofOp();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.key = reader.bytes();\n          break;\n        case 3:\n          message.data = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      type: isSet(object.type) ? String(object.type) : \"\",\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseProofOp();\n    message.type = (_a = object.type) !== null && _a !== void 0 ? _a : \"\";\n    message.key = (_b = object.key) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.data = (_c = object.data) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseProofOps() {\n  return {\n    ops: []\n  };\n}\nexports.ProofOps = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.ops) {\n      exports.ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProofOps();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      ops: Array.isArray(object === null || object === void 0 ? void 0 : object.ops) ? object.ops.map(e => exports.ProofOp.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.ops) {\n      obj.ops = message.ops.map(e => e ? exports.ProofOp.toJSON(e) : undefined);\n    } else {\n      obj.ops = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseProofOps();\n    message.ops = ((_a = object.ops) === null || _a === void 0 ? void 0 : _a.map(e => exports.ProofOp.fromPartial(e))) || [];\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"mappings":"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","names":["exports","createBaseProof","total","long_1","ZERO","index","leafHash","Uint8Array","aunts","encode","message","writer","minimal_1","Writer","create","isZero","uint32","int64","length","bytes","v","decode","input","reader","Reader","end","undefined","len","pos","tag","push","skipType","fromJSON","object","isSet","fromValue","bytesFromBase64","Array","isArray","map","e","toJSON","obj","toString","base64FromBytes","fromPartial","createBaseValueOp","key","proof","fork","ldelim","createBaseDominoOp","output","string","String","createBaseProofOp","type","data","createBaseProofOps","ops","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../src/tendermint/crypto/proof.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}