{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQueryRPCStatus = void 0;\nconst chain_rpc_query_1 = require(\"../../chain-rpc-query\");\nconst unit_1 = require(\"@keplr-wallet/unit\");\nclass ObservableQueryRPCStatus extends chain_rpc_query_1.ObservableChainQueryRPC {\n  constructor(kvStore, chainId, chainGetter) {\n    super(kvStore, chainId, chainGetter, \"/status\");\n  }\n  get network() {\n    if (!this.response) {\n      return undefined;\n    }\n    return this.response.data.result.node_info.network;\n  }\n  get latestBlockHeight() {\n    if (!this.response) {\n      return undefined;\n    }\n    return new unit_1.Int(this.response.data.result.sync_info.latest_block_height);\n  }\n}\nexports.ObservableQueryRPCStatus = ObservableQueryRPCStatus;","map":{"version":3,"mappings":";;;;;;AAEA;AACA;AAEA,MAAaA,wBAAyB,SAAQC,yCAyC5C;EACAC,YAAYC,OAAgB,EAAEC,OAAe,EAAEC,WAAwB;IACrE,KAAK,CAACF,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAE,SAAS,CAAC;EACjD;EAEA,IAAIC,OAAO;IACT,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAClB,OAAOC,SAAS;;IAGlB,OAAO,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,SAAS,CAACL,OAAO;EACpD;EAEA,IAAIM,iBAAiB;IACnB,IAAI,CAAC,IAAI,CAACL,QAAQ,EAAE;MAClB,OAAOC,SAAS;;IAGlB,OAAO,IAAIK,UAAG,CAAC,IAAI,CAACN,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACI,SAAS,CAACC,mBAAmB,CAAC;EACzE;;AA5DFC","names":["ObservableQueryRPCStatus","chain_rpc_query_1","constructor","kvStore","chainId","chainGetter","network","response","undefined","data","result","node_info","latestBlockHeight","unit_1","sync_info","latest_block_height","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmos/status/index.ts"],"sourcesContent":["import { KVStore } from \"@keplr-wallet/common\";\nimport { ChainGetter } from \"../../../common\";\nimport { ObservableChainQueryRPC } from \"../../chain-rpc-query\";\nimport { Int } from \"@keplr-wallet/unit\";\n\nexport class ObservableQueryRPCStatus extends ObservableChainQueryRPC<{\n  jsonrpc: \"2.0\";\n  id: number;\n  result: {\n    node_info: {\n      protocol_version: {\n        p2p: string;\n        block: string;\n        app: string;\n      };\n      id: string;\n      listen_addr: string;\n      network: string;\n      version: string;\n      channels: string;\n      moniker: string;\n      other: {\n        tx_index: \"on\" | \"off\";\n        rpc_address: string;\n      };\n    };\n    sync_info: {\n      latest_block_hash: string;\n      latest_app_hash: string;\n      latest_block_height: string;\n      latest_block_time: string;\n      earliest_block_hash: string;\n      earliest_app_hash: string;\n      earliest_block_height: string;\n      earliest_block_time: string;\n      catching_up: boolean;\n    };\n    validator_info: {\n      address: string;\n      pub_key: {\n        type: string;\n        value: string;\n      };\n      voting_power: string;\n    };\n  };\n}> {\n  constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter) {\n    super(kvStore, chainId, chainGetter, \"/status\");\n  }\n\n  get network(): string | undefined {\n    if (!this.response) {\n      return undefined;\n    }\n\n    return this.response.data.result.node_info.network;\n  }\n\n  get latestBlockHeight(): Int | undefined {\n    if (!this.response) {\n      return undefined;\n    }\n\n    return new Int(this.response.data.result.sync_info.latest_block_height);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}