{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst multisig_1 = require(\"../../../crypto/multisig/v1beta1/multisig\");\nexports.protobufPackage = \"cosmos.tx.signing.v1beta1\";\n/** SignMode represents a signing mode with its own security guarantees. */\nvar SignMode;\n(function (SignMode) {\n  /**\n   * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n   * rejected\n   */\n  SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n  /**\n   * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n   * verified with raw bytes from Tx\n   */\n  SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n  /**\n   * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n   * human-readable textual representation on top of the binary representation\n   * from SIGN_MODE_DIRECT\n   */\n  SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n  /**\n   * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n   * Amino JSON and will be removed in the future\n   */\n  SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n  /**\n   * SIGN_MODE_EIP_191 - SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos\n   * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n   *\n   * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\n   * but is not implemented on the SDK by default. To enable EIP-191, you need\n   * to pass a custom `TxConfig` that has an implementation of\n   * `SignModeHandler` for EIP-191. The SDK may decide to fully support\n   * EIP-191 in the future.\n   *\n   * Since: cosmos-sdk 0.45.2\n   */\n  SignMode[SignMode[\"SIGN_MODE_EIP_191\"] = 191] = \"SIGN_MODE_EIP_191\";\n  SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignMode = exports.SignMode || (exports.SignMode = {}));\nfunction signModeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return SignMode.SIGN_MODE_TEXTUAL;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case 191:\n    case \"SIGN_MODE_EIP_191\":\n      return SignMode.SIGN_MODE_EIP_191;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignMode.UNRECOGNIZED;\n  }\n}\nexports.signModeFromJSON = signModeFromJSON;\nfunction signModeToJSON(object) {\n  switch (object) {\n    case SignMode.SIGN_MODE_UNSPECIFIED:\n      return \"SIGN_MODE_UNSPECIFIED\";\n    case SignMode.SIGN_MODE_DIRECT:\n      return \"SIGN_MODE_DIRECT\";\n    case SignMode.SIGN_MODE_TEXTUAL:\n      return \"SIGN_MODE_TEXTUAL\";\n    case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n      return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    case SignMode.SIGN_MODE_EIP_191:\n      return \"SIGN_MODE_EIP_191\";\n    case SignMode.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.signModeToJSON = signModeToJSON;\nfunction createBaseSignatureDescriptors() {\n  return {\n    signatures: []\n  };\n}\nexports.SignatureDescriptors = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptors();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(e => exports.SignatureDescriptor.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseSignatureDescriptors();\n    message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map(e => exports.SignatureDescriptor.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor() {\n  return {\n    publicKey: undefined,\n    data: undefined,\n    sequence: long_1.default.UZERO\n  };\n}\nexports.SignatureDescriptor = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      publicKey: isSet(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : undefined,\n      data: isSet(object.data) ? exports.SignatureDescriptor_Data.fromJSON(object.data) : undefined,\n      sequence: isSet(object.sequence) ? long_1.default.fromValue(object.sequence) : long_1.default.UZERO\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.data !== undefined && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor();\n    message.publicKey = object.publicKey !== undefined && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : undefined;\n    message.data = object.data !== undefined && object.data !== null ? exports.SignatureDescriptor_Data.fromPartial(object.data) : undefined;\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? long_1.default.fromValue(object.sequence) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data() {\n  return {\n    single: undefined,\n    multi: undefined\n  };\n}\nexports.SignatureDescriptor_Data = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.single !== undefined) {\n      exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      single: isSet(object.single) ? exports.SignatureDescriptor_Data_Single.fromJSON(object.single) : undefined,\n      multi: isSet(object.multi) ? exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor_Data();\n    message.single = object.single !== undefined && object.single !== null ? exports.SignatureDescriptor_Data_Single.fromPartial(object.single) : undefined;\n    message.multi = object.multi !== undefined && object.multi !== null ? exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi) : undefined;\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Single() {\n  return {\n    mode: 0,\n    signature: new Uint8Array()\n  };\n}\nexports.SignatureDescriptor_Data_Single = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      mode: isSet(object.mode) ? signModeFromJSON(object.mode) : 0,\n      signature: isSet(object.signature) ? bytesFromBase64(object.signature) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;\n    message.signature = (_b = object.signature) !== null && _b !== void 0 ? _b : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Multi() {\n  return {\n    bitarray: undefined,\n    signatures: []\n  };\n}\nexports.SignatureDescriptor_Data_Multi = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      bitarray: isSet(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : undefined,\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(e => exports.SignatureDescriptor_Data.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    message.bitarray = object.bitarray !== undefined && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : undefined;\n    message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map(e => exports.SignatureDescriptor_Data.fromPartial(e))) || [];\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"mappings":"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","names":["exports","SignMode","signModeFromJSON","object","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_LEGACY_AMINO_JSON","SIGN_MODE_EIP_191","UNRECOGNIZED","signModeToJSON","createBaseSignatureDescriptors","signatures","encode","message","writer","minimal_1","Writer","create","v","uint32","fork","ldelim","decode","input","length","reader","Reader","end","undefined","len","pos","tag","push","skipType","fromJSON","Array","isArray","map","e","toJSON","obj","fromPartial","createBaseSignatureDescriptor","publicKey","data","sequence","long_1","UZERO","any_1","isZero","uint64","isSet","fromValue","toString","createBaseSignatureDescriptor_Data","single","multi","createBaseSignatureDescriptor_Data_Single","mode","signature","Uint8Array","int32","bytes","bytesFromBase64","base64FromBytes","createBaseSignatureDescriptor_Data_Multi","bitarray","multisig_1","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","String","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../../../src/cosmos/tx/signing/v1beta1/signing.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}