{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SendTxMsg = void 0;\nconst router_1 = require(\"@keplr-wallet/router\");\nconst constants_1 = require(\"./constants\");\n// Return the tx hash\nclass SendTxMsg extends router_1.Message {\n  constructor(chainId, tx, mode) {\n    super();\n    this.chainId = chainId;\n    this.tx = tx;\n    this.mode = mode;\n  }\n  static type() {\n    return \"send-tx-to-background\";\n  }\n  validateBasic() {\n    if (!this.chainId) {\n      throw new router_1.KeplrError(\"tx\", 100, \"chain id is empty\");\n    }\n    if (!this.tx) {\n      throw new router_1.KeplrError(\"tx\", 101, \"tx is empty\");\n    }\n    if (!this.mode || this.mode !== \"sync\" && this.mode !== \"async\" && this.mode !== \"block\") {\n      throw new router_1.KeplrError(\"tx\", 120, \"invalid mode\");\n    }\n  }\n  approveExternal() {\n    return true;\n  }\n  route() {\n    return constants_1.ROUTE;\n  }\n  type() {\n    return SendTxMsg.type();\n  }\n}\nexports.SendTxMsg = SendTxMsg;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAEA;AACA,MAAaA,SAAU,SAAQC,gBAAmB;EAKhDC,YACkBC,OAAe,EACfC,EAAW,EACXC,IAAgC;IAEhD,KAAK,EAAE;IAJS,YAAO,GAAPF,OAAO;IACP,OAAE,GAAFC,EAAE;IACF,SAAI,GAAJC,IAAI;EAGtB;EAVO,OAAOC,IAAI;IAChB,OAAO,uBAAuB;EAChC;EAUAC,aAAa;IACX,IAAI,CAAC,IAAI,CAACJ,OAAO,EAAE;MACjB,MAAM,IAAIF,mBAAU,CAAC,IAAI,EAAE,GAAG,EAAE,mBAAmB,CAAC;;IAGtD,IAAI,CAAC,IAAI,CAACG,EAAE,EAAE;MACZ,MAAM,IAAIH,mBAAU,CAAC,IAAI,EAAE,GAAG,EAAE,aAAa,CAAC;;IAGhD,IACE,CAAC,IAAI,CAACI,IAAI,IACT,IAAI,CAACA,IAAI,KAAK,MAAM,IAAI,IAAI,CAACA,IAAI,KAAK,OAAO,IAAI,IAAI,CAACA,IAAI,KAAK,OAAQ,EACxE;MACA,MAAM,IAAIJ,mBAAU,CAAC,IAAI,EAAE,GAAG,EAAE,cAAc,CAAC;;EAEnD;EAEAO,eAAe;IACb,OAAO,IAAI;EACb;EAEAC,KAAK;IACH,OAAOC,iBAAK;EACd;EAEAJ,IAAI;IACF,OAAON,SAAS,CAACM,IAAI,EAAE;EACzB;;AAxCFK","names":["SendTxMsg","router_1","constructor","chainId","tx","mode","type","validateBasic","approveExternal","route","constants_1","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/tx/messages.ts"],"sourcesContent":["import { KeplrError, Message } from \"@keplr-wallet/router\";\nimport { ROUTE } from \"./constants\";\n\n// Return the tx hash\nexport class SendTxMsg extends Message<Uint8Array> {\n  public static type() {\n    return \"send-tx-to-background\";\n  }\n\n  constructor(\n    public readonly chainId: string,\n    public readonly tx: unknown,\n    public readonly mode: \"async\" | \"sync\" | \"block\"\n  ) {\n    super();\n  }\n\n  validateBasic(): void {\n    if (!this.chainId) {\n      throw new KeplrError(\"tx\", 100, \"chain id is empty\");\n    }\n\n    if (!this.tx) {\n      throw new KeplrError(\"tx\", 101, \"tx is empty\");\n    }\n\n    if (\n      !this.mode ||\n      (this.mode !== \"sync\" && this.mode !== \"async\" && this.mode !== \"block\")\n    ) {\n      throw new KeplrError(\"tx\", 120, \"invalid mode\");\n    }\n  }\n\n  approveExternal(): boolean {\n    return true;\n  }\n\n  route(): string {\n    return ROUTE;\n  }\n\n  type(): string {\n    return SendTxMsg.type();\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}