{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * AES-CTR using a WebCrypto (or similar) API\n */\nclass WebCryptoAesCtr {\n  constructor(key, crypto) {\n    this.key = key;\n    this.crypto = crypto;\n  }\n  static importKey(crypto, keyData) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Only AES-128 and AES-256 supported. AES-192 is not.\n      if (keyData.length !== 16 && keyData.length !== 32) {\n        throw new Error(`Miscreant: invalid key length: ${keyData.length} (expected 16 or 32 bytes)`);\n      }\n      const key = yield crypto.subtle.importKey(\"raw\", keyData, \"AES-CTR\", false, [\"encrypt\"]);\n      return new WebCryptoAesCtr(key, crypto);\n    });\n  }\n  encryptCtr(iv, plaintext) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const ciphertext = yield this.crypto.subtle.encrypt({\n        name: \"AES-CTR\",\n        counter: iv,\n        length: 16\n      }, this.key, plaintext);\n      return new Uint8Array(ciphertext);\n    });\n  }\n  clear() {\n    // TODO: actually clear something. Do we need to?\n    return this;\n  }\n}\nexports.default = WebCryptoAesCtr;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","WebCryptoAesCtr","constructor","key","crypto","importKey","keyData","length","Error","subtle","encryptCtr","iv","plaintext","ciphertext","encrypt","name","counter","Uint8Array","clear","default"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/miscreant/release/providers/webcrypto/aes_ctr.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * AES-CTR using a WebCrypto (or similar) API\n */\nclass WebCryptoAesCtr {\n    constructor(key, crypto) {\n        this.key = key;\n        this.crypto = crypto;\n    }\n    static importKey(crypto, keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Only AES-128 and AES-256 supported. AES-192 is not.\n            if (keyData.length !== 16 && keyData.length !== 32) {\n                throw new Error(`Miscreant: invalid key length: ${keyData.length} (expected 16 or 32 bytes)`);\n            }\n            const key = yield crypto.subtle.importKey(\"raw\", keyData, \"AES-CTR\", false, [\"encrypt\"]);\n            return new WebCryptoAesCtr(key, crypto);\n        });\n    }\n    encryptCtr(iv, plaintext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ciphertext = yield this.crypto.subtle.encrypt({ name: \"AES-CTR\", counter: iv, length: 16 }, this.key, plaintext);\n            return new Uint8Array(ciphertext);\n        });\n    }\n    clear() {\n        // TODO: actually clear something. Do we need to?\n        return this;\n    }\n}\nexports.default = WebCryptoAesCtr;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,OAAO,KAAKD,CAAC,KAAKA,CAAC,GAAGE,OAAO,CAAC,EAAE,UAAUC,OAAO,EAAEC,MAAM,EAAE;IACvD,SAASC,SAAS,CAACC,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAACO,IAAI,CAACF,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQ,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAAC,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAI,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC,GAAG,IAAIN,CAAC,CAAC,UAAUG,OAAO,EAAE;QAAEA,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC;MAAE,CAAC,CAAC,CAACO,IAAI,CAACR,SAAS,EAAEK,QAAQ,CAAC;IAAE;IAC9IH,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACa,KAAK,CAAChB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAES,IAAI,EAAE,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACDO,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEX,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA,MAAMY,eAAe,CAAC;EAClBC,WAAW,CAACC,GAAG,EAAEC,MAAM,EAAE;IACrB,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACA,OAAOC,SAAS,CAACD,MAAM,EAAEE,OAAO,EAAE;IAC9B,OAAO1B,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD;MACA,IAAI0B,OAAO,CAACC,MAAM,KAAK,EAAE,IAAID,OAAO,CAACC,MAAM,KAAK,EAAE,EAAE;QAChD,MAAM,IAAIC,KAAK,CAAE,kCAAiCF,OAAO,CAACC,MAAO,4BAA2B,CAAC;MACjG;MACA,MAAMJ,GAAG,GAAG,MAAMC,MAAM,CAACK,MAAM,CAACJ,SAAS,CAAC,KAAK,EAAEC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC;MACxF,OAAO,IAAIL,eAAe,CAACE,GAAG,EAAEC,MAAM,CAAC;IAC3C,CAAC,CAAC;EACN;EACAM,UAAU,CAACC,EAAE,EAAEC,SAAS,EAAE;IACtB,OAAOhC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMiC,UAAU,GAAG,MAAM,IAAI,CAACT,MAAM,CAACK,MAAM,CAACK,OAAO,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAEL,EAAE;QAAEJ,MAAM,EAAE;MAAG,CAAC,EAAE,IAAI,CAACJ,GAAG,EAAES,SAAS,CAAC;MACtH,OAAO,IAAIK,UAAU,CAACJ,UAAU,CAAC;IACrC,CAAC,CAAC;EACN;EACAK,KAAK,GAAG;IACJ;IACA,OAAO,IAAI;EACf;AACJ;AACAlB,OAAO,CAACmB,OAAO,GAAGlB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}