{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"cosmos.crypto.secp256k1\";\nconst basePubKey = {};\nexports.PubKey = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePubKey);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePubKey);\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, basePubKey);\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = new Uint8Array();\n    }\n    return message;\n  }\n};\nconst basePrivKey = {};\nexports.PrivKey = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePrivKey);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePrivKey);\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, basePrivKey);\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = new Uint8Array();\n    }\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n  return btoa(bin.join(\"\"));\n}","map":{"version":3,"mappings":"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","names":["exports","basePubKey","encode","message","writer","minimal_1","Writer","create","key","length","uint32","bytes","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","Object","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","basePrivKey","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","String","fromCharCode","join"],"sources":["../../../../../src/codec/cosmos/crypto/secp256k1/keys.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}