{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQueryProposal = void 0;\nconst chain_query_1 = require(\"../../chain-query\");\nconst types_1 = require(\"./types\");\nconst mobx_1 = require(\"mobx\");\nconst unit_1 = require(\"@keplr-wallet/unit\");\nclass ObservableQueryProposal extends chain_query_1.ObservableChainQuery {\n  constructor(kvStore, chainId, chainGetter, _raw, governance) {\n    super(kvStore, chainId, chainGetter, `/cosmos/gov/v1beta1/proposals/${_raw.proposal_id}/tally`);\n    this._raw = _raw;\n    this.governance = governance;\n    mobx_1.makeObservable(this);\n  }\n  canFetch() {\n    return this.proposalStatus === types_1.ProposalStatus.VOTING_PERIOD;\n  }\n  get raw() {\n    return this._raw;\n  }\n  get proposalStatus() {\n    switch (this.raw.status) {\n      case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n        return types_1.ProposalStatus.DEPOSIT_PERIOD;\n      case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n        return types_1.ProposalStatus.VOTING_PERIOD;\n      case \"PROPOSAL_STATUS_PASSED\":\n        return types_1.ProposalStatus.PASSED;\n      case \"PROPOSAL_STATUS_REJECTED\":\n        return types_1.ProposalStatus.REJECTED;\n      case \"PROPOSAL_STATUS_FAILED\":\n        return types_1.ProposalStatus.FAILED;\n      default:\n        return types_1.ProposalStatus.UNSPECIFIED;\n    }\n  }\n  get id() {\n    return this.raw.proposal_id;\n  }\n  get title() {\n    return this.raw.content.title;\n  }\n  get description() {\n    return this.raw.content.description;\n  }\n  get turnout() {\n    const pool = this.governance.getQueryPool();\n    const bondedTokenDec = pool.bondedTokens.toDec();\n    if (!pool.response || bondedTokenDec.equals(new unit_1.Dec(0))) {\n      return new unit_1.IntPretty(new unit_1.Dec(0)).ready(false);\n    }\n    const tally = this.tally;\n    const tallySum = tally.yes.add(tally.no).add(tally.abstain).add(tally.noWithVeto);\n    // TODO: Use `RatePretty`\n    return new unit_1.IntPretty(tallySum.toDec().quoTruncate(bondedTokenDec).mulTruncate(unit_1.DecUtils.getPrecisionDec(2))).ready(tally.yes.isReady);\n  }\n  /**\n   * Return the voting tally.\n   * If the proposal status is passed or rejected, it returns the final tally of the proposal.\n   * If the proposal status is in voting period, it queries the tally to the rest endpoint.\n   * If the querying of tally is not completed, it return the tally with all 0 with not ready option.\n   */\n  get tally() {\n    const stakeCurrency = this.chainGetter.getChain(this.chainId).stakeCurrency;\n    if (this.proposalStatus !== types_1.ProposalStatus.VOTING_PERIOD) {\n      return {\n        yes: new unit_1.IntPretty(new unit_1.Int(this.raw.final_tally_result.yes)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n        no: new unit_1.IntPretty(new unit_1.Int(this.raw.final_tally_result.no)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n        abstain: new unit_1.IntPretty(new unit_1.Int(this.raw.final_tally_result.abstain)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n        noWithVeto: new unit_1.IntPretty(new unit_1.Int(this.raw.final_tally_result.no_with_veto)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals)\n      };\n    }\n    if (!this.response) {\n      return {\n        yes: new unit_1.IntPretty(new unit_1.Int(0)).ready(false).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n        no: new unit_1.IntPretty(new unit_1.Int(0)).ready(false).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n        abstain: new unit_1.IntPretty(new unit_1.Int(0)).ready(false).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n        noWithVeto: new unit_1.IntPretty(new unit_1.Int(0)).ready(false).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals)\n      };\n    }\n    return {\n      yes: new unit_1.IntPretty(new unit_1.Int(this.response.data.tally.yes)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n      no: new unit_1.IntPretty(new unit_1.Int(this.response.data.tally.no)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n      abstain: new unit_1.IntPretty(new unit_1.Int(this.response.data.tally.abstain)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals),\n      noWithVeto: new unit_1.IntPretty(new unit_1.Int(this.response.data.tally.no_with_veto)).moveDecimalPointLeft(stakeCurrency.coinDecimals).maxDecimals(stakeCurrency.coinDecimals)\n    };\n  }\n  get total() {\n    const tally = this.tally;\n    const tallySum = tally.yes.add(tally.no).add(tally.abstain).add(tally.noWithVeto);\n    const stakeCurrency = this.chainGetter.getChain(this.chainId).stakeCurrency;\n    return new unit_1.CoinPretty(stakeCurrency, tallySum);\n  }\n  get tallyRatio() {\n    const tally = this.tally;\n    const tallySum = tally.yes.add(tally.no).add(tally.abstain).add(tally.noWithVeto);\n    if (tallySum.toDec().equals(new unit_1.Dec(0))) {\n      return {\n        yes: new unit_1.IntPretty(new unit_1.Int(0)).ready(false),\n        no: new unit_1.IntPretty(new unit_1.Int(0)).ready(false),\n        abstain: new unit_1.IntPretty(new unit_1.Int(0)).ready(false),\n        noWithVeto: new unit_1.IntPretty(new unit_1.Int(0)).ready(false)\n      };\n    }\n    // TODO: Use `RatePretty`\n    return {\n      yes: new unit_1.IntPretty(tally.yes.toDec().quoTruncate(tallySum.toDec()).mulTruncate(unit_1.DecUtils.getPrecisionDec(2))).ready(tally.yes.isReady),\n      no: new unit_1.IntPretty(tally.no.toDec().quoTruncate(tallySum.toDec()).mulTruncate(unit_1.DecUtils.getPrecisionDec(2))).ready(tally.no.isReady),\n      abstain: new unit_1.IntPretty(tally.abstain.toDec().quoTruncate(tallySum.toDec()).mulTruncate(unit_1.DecUtils.getPrecisionDec(2))).ready(tally.abstain.isReady),\n      noWithVeto: new unit_1.IntPretty(tally.noWithVeto.toDec().quoTruncate(tallySum.toDec()).mulTruncate(unit_1.DecUtils.getPrecisionDec(2))).ready(tally.noWithVeto.isReady)\n    };\n  }\n}\n__decorate([mobx_1.computed], ObservableQueryProposal.prototype, \"turnout\", null);\n__decorate([mobx_1.computed], ObservableQueryProposal.prototype, \"tally\", null);\n__decorate([mobx_1.computed], ObservableQueryProposal.prototype, \"total\", null);\n__decorate([mobx_1.computed], ObservableQueryProposal.prototype, \"tallyRatio\", null);\nexports.ObservableQueryProposal = ObservableQueryProposal;","map":{"version":3,"mappings":"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","names":["ObservableQueryProposal","chain_query_1","constructor","kvStore","chainId","chainGetter","_raw","governance","proposal_id","mobx_1","canFetch","proposalStatus","types_1","VOTING_PERIOD","raw","status","DEPOSIT_PERIOD","PASSED","REJECTED","FAILED","UNSPECIFIED","id","title","content","description","turnout","pool","getQueryPool","bondedTokenDec","bondedTokens","toDec","response","equals","unit_1","ready","tally","tallySum","yes","add","no","abstain","noWithVeto","quoTruncate","mulTruncate","getPrecisionDec","isReady","stakeCurrency","getChain","final_tally_result","moveDecimalPointLeft","coinDecimals","maxDecimals","no_with_veto","data","total","tallyRatio","__decorate","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmos/governance/proposal.ts"],"sourcesContent":["import { ObservableChainQuery } from \"../../chain-query\";\nimport { Proposal, ProposalStatus, ProposalTally } from \"./types\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport { ChainGetter } from \"../../../common\";\nimport { computed, makeObservable } from \"mobx\";\nimport { DeepReadonly } from \"utility-types\";\nimport { CoinPretty, Dec, DecUtils, Int, IntPretty } from \"@keplr-wallet/unit\";\nimport { ObservableQueryGovernance } from \"./proposals\";\n\nexport class ObservableQueryProposal extends ObservableChainQuery<ProposalTally> {\n  constructor(\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter,\n    protected readonly _raw: Proposal,\n    protected readonly governance: ObservableQueryGovernance\n  ) {\n    super(\n      kvStore,\n      chainId,\n      chainGetter,\n      `/cosmos/gov/v1beta1/proposals/${_raw.proposal_id}/tally`\n    );\n    makeObservable(this);\n  }\n\n  protected canFetch(): boolean {\n    return this.proposalStatus === ProposalStatus.VOTING_PERIOD;\n  }\n\n  get raw(): DeepReadonly<Proposal> {\n    return this._raw;\n  }\n\n  get proposalStatus(): ProposalStatus {\n    switch (this.raw.status) {\n      case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n        return ProposalStatus.DEPOSIT_PERIOD;\n      case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n        return ProposalStatus.VOTING_PERIOD;\n      case \"PROPOSAL_STATUS_PASSED\":\n        return ProposalStatus.PASSED;\n      case \"PROPOSAL_STATUS_REJECTED\":\n        return ProposalStatus.REJECTED;\n      case \"PROPOSAL_STATUS_FAILED\":\n        return ProposalStatus.FAILED;\n      default:\n        return ProposalStatus.UNSPECIFIED;\n    }\n  }\n\n  get id(): string {\n    return this.raw.proposal_id;\n  }\n\n  get title(): string {\n    return this.raw.content.title;\n  }\n\n  get description(): string {\n    return this.raw.content.description;\n  }\n\n  @computed\n  get turnout(): IntPretty {\n    const pool = this.governance.getQueryPool();\n\n    const bondedTokenDec = pool.bondedTokens.toDec();\n\n    if (!pool.response || bondedTokenDec.equals(new Dec(0))) {\n      return new IntPretty(new Dec(0)).ready(false);\n    }\n\n    const tally = this.tally;\n    const tallySum = tally.yes\n      .add(tally.no)\n      .add(tally.abstain)\n      .add(tally.noWithVeto);\n\n    // TODO: Use `RatePretty`\n    return new IntPretty(\n      tallySum\n        .toDec()\n        .quoTruncate(bondedTokenDec)\n        .mulTruncate(DecUtils.getPrecisionDec(2))\n    ).ready(tally.yes.isReady);\n  }\n\n  /**\n   * Return the voting tally.\n   * If the proposal status is passed or rejected, it returns the final tally of the proposal.\n   * If the proposal status is in voting period, it queries the tally to the rest endpoint.\n   * If the querying of tally is not completed, it return the tally with all 0 with not ready option.\n   */\n  @computed\n  get tally(): {\n    yes: IntPretty;\n    abstain: IntPretty;\n    no: IntPretty;\n    noWithVeto: IntPretty;\n  } {\n    const stakeCurrency = this.chainGetter.getChain(this.chainId).stakeCurrency;\n\n    if (this.proposalStatus !== ProposalStatus.VOTING_PERIOD) {\n      return {\n        yes: new IntPretty(new Int(this.raw.final_tally_result.yes))\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n        no: new IntPretty(new Int(this.raw.final_tally_result.no))\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n        abstain: new IntPretty(new Int(this.raw.final_tally_result.abstain))\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n        noWithVeto: new IntPretty(\n          new Int(this.raw.final_tally_result.no_with_veto)\n        )\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n      };\n    }\n\n    if (!this.response) {\n      return {\n        yes: new IntPretty(new Int(0))\n          .ready(false)\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n        no: new IntPretty(new Int(0))\n          .ready(false)\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n        abstain: new IntPretty(new Int(0))\n          .ready(false)\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n        noWithVeto: new IntPretty(new Int(0))\n          .ready(false)\n          .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n          .maxDecimals(stakeCurrency.coinDecimals),\n      };\n    }\n\n    return {\n      yes: new IntPretty(new Int(this.response.data.tally.yes))\n        .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n        .maxDecimals(stakeCurrency.coinDecimals),\n      no: new IntPretty(new Int(this.response.data.tally.no))\n        .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n        .maxDecimals(stakeCurrency.coinDecimals),\n      abstain: new IntPretty(new Int(this.response.data.tally.abstain))\n        .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n        .maxDecimals(stakeCurrency.coinDecimals),\n      noWithVeto: new IntPretty(new Int(this.response.data.tally.no_with_veto))\n        .moveDecimalPointLeft(stakeCurrency.coinDecimals)\n        .maxDecimals(stakeCurrency.coinDecimals),\n    };\n  }\n\n  @computed\n  get total(): CoinPretty {\n    const tally = this.tally;\n    const tallySum = tally.yes\n      .add(tally.no)\n      .add(tally.abstain)\n      .add(tally.noWithVeto);\n\n    const stakeCurrency = this.chainGetter.getChain(this.chainId).stakeCurrency;\n\n    return new CoinPretty(stakeCurrency, tallySum);\n  }\n\n  @computed\n  get tallyRatio(): {\n    yes: IntPretty;\n    abstain: IntPretty;\n    no: IntPretty;\n    noWithVeto: IntPretty;\n  } {\n    const tally = this.tally;\n    const tallySum = tally.yes\n      .add(tally.no)\n      .add(tally.abstain)\n      .add(tally.noWithVeto);\n\n    if (tallySum.toDec().equals(new Dec(0))) {\n      return {\n        yes: new IntPretty(new Int(0)).ready(false),\n        no: new IntPretty(new Int(0)).ready(false),\n        abstain: new IntPretty(new Int(0)).ready(false),\n        noWithVeto: new IntPretty(new Int(0)).ready(false),\n      };\n    }\n\n    // TODO: Use `RatePretty`\n    return {\n      yes: new IntPretty(\n        tally.yes\n          .toDec()\n          .quoTruncate(tallySum.toDec())\n          .mulTruncate(DecUtils.getPrecisionDec(2))\n      ).ready(tally.yes.isReady),\n      no: new IntPretty(\n        tally.no\n          .toDec()\n          .quoTruncate(tallySum.toDec())\n          .mulTruncate(DecUtils.getPrecisionDec(2))\n      ).ready(tally.no.isReady),\n      abstain: new IntPretty(\n        tally.abstain\n          .toDec()\n          .quoTruncate(tallySum.toDec())\n          .mulTruncate(DecUtils.getPrecisionDec(2))\n      ).ready(tally.abstain.isReady),\n      noWithVeto: new IntPretty(\n        tally.noWithVeto\n          .toDec()\n          .quoTruncate(tallySum.toDec())\n          .mulTruncate(DecUtils.getPrecisionDec(2))\n      ).ready(tally.noWithVeto.isReady),\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}