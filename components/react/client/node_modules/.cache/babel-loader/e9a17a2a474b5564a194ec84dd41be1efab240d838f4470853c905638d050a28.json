{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst multisig_1 = require(\"../../../../cosmos/crypto/multisig/v1beta1/multisig\");\nexports.protobufPackage = \"cosmos.tx.signing.v1beta1\";\n/** SignMode represents a signing mode with its own security guarantees. */\nvar SignMode;\n(function (SignMode) {\n  /**\n   * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n   * rejected\n   */\n  SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n  /**\n   * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n   * verified with raw bytes from Tx\n   */\n  SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n  /**\n   * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n   * human-readable textual representation on top of the binary representation\n   * from SIGN_MODE_DIRECT\n   */\n  SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n  /**\n   * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n   * Amino JSON and will be removed in the future\n   */\n  SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n  SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignMode = exports.SignMode || (exports.SignMode = {}));\nfunction signModeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return SignMode.SIGN_MODE_TEXTUAL;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignMode.UNRECOGNIZED;\n  }\n}\nexports.signModeFromJSON = signModeFromJSON;\nfunction signModeToJSON(object) {\n  switch (object) {\n    case SignMode.SIGN_MODE_UNSPECIFIED:\n      return \"SIGN_MODE_UNSPECIFIED\";\n    case SignMode.SIGN_MODE_DIRECT:\n      return \"SIGN_MODE_DIRECT\";\n    case SignMode.SIGN_MODE_TEXTUAL:\n      return \"SIGN_MODE_TEXTUAL\";\n    case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n      return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\nexports.signModeToJSON = signModeToJSON;\nfunction createBaseSignatureDescriptors() {\n  return {\n    signatures: []\n  };\n}\nexports.SignatureDescriptors = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptors();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(e => exports.SignatureDescriptor.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseSignatureDescriptors();\n    message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map(e => exports.SignatureDescriptor.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor() {\n  return {\n    publicKey: undefined,\n    data: undefined,\n    sequence: \"0\"\n  };\n}\nexports.SignatureDescriptor = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.sequence !== \"0\") {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = longToString(reader.uint64());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      publicKey: isSet(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : undefined,\n      data: isSet(object.data) ? exports.SignatureDescriptor_Data.fromJSON(object.data) : undefined,\n      sequence: isSet(object.sequence) ? String(object.sequence) : \"0\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.data !== undefined && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);\n    message.sequence !== undefined && (obj.sequence = message.sequence);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseSignatureDescriptor();\n    message.publicKey = object.publicKey !== undefined && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : undefined;\n    message.data = object.data !== undefined && object.data !== null ? exports.SignatureDescriptor_Data.fromPartial(object.data) : undefined;\n    message.sequence = (_a = object.sequence) !== null && _a !== void 0 ? _a : \"0\";\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data() {\n  return {\n    single: undefined,\n    multi: undefined\n  };\n}\nexports.SignatureDescriptor_Data = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.single !== undefined) {\n      exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      single: isSet(object.single) ? exports.SignatureDescriptor_Data_Single.fromJSON(object.single) : undefined,\n      multi: isSet(object.multi) ? exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor_Data();\n    message.single = object.single !== undefined && object.single !== null ? exports.SignatureDescriptor_Data_Single.fromPartial(object.single) : undefined;\n    message.multi = object.multi !== undefined && object.multi !== null ? exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi) : undefined;\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Single() {\n  return {\n    mode: 0,\n    signature: new Uint8Array()\n  };\n}\nexports.SignatureDescriptor_Data_Single = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      mode: isSet(object.mode) ? signModeFromJSON(object.mode) : 0,\n      signature: isSet(object.signature) ? bytesFromBase64(object.signature) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;\n    message.signature = (_b = object.signature) !== null && _b !== void 0 ? _b : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Multi() {\n  return {\n    bitarray: undefined,\n    signatures: []\n  };\n}\nexports.SignatureDescriptor_Data_Multi = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      bitarray: isSet(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : undefined,\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(e => exports.SignatureDescriptor_Data.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    message.bitarray = object.bitarray !== undefined && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : undefined;\n    message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map(e => exports.SignatureDescriptor_Data.fromPartial(e))) || [];\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nfunction longToString(long) {\n  return long.toString();\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"mappings":"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","names":["exports","SignMode","signModeFromJSON","object","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_LEGACY_AMINO_JSON","UNRECOGNIZED","signModeToJSON","createBaseSignatureDescriptors","signatures","encode","message","writer","minimal_1","Writer","create","v","uint32","fork","ldelim","decode","input","length","reader","Reader","end","undefined","len","pos","tag","push","skipType","fromJSON","Array","isArray","map","e","toJSON","obj","fromPartial","createBaseSignatureDescriptor","publicKey","data","sequence","any_1","uint64","longToString","isSet","String","createBaseSignatureDescriptor_Data","single","multi","createBaseSignatureDescriptor_Data_Single","mode","signature","Uint8Array","int32","bytes","bytesFromBase64","base64FromBytes","createBaseSignatureDescriptor_Data_Multi","bitarray","multisig_1","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","long","util","Long","long_1","configure","value"],"sources":["../../../../../src/cosmos/tx/signing/v1beta1/signing.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}