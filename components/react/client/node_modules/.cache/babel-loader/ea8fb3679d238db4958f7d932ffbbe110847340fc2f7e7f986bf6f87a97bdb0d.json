{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst webcrypto_1 = require(\"./providers/webcrypto\");\nconst siv_1 = require(\"./siv\");\n/** AEAD interface provider for ISIVLike types */\nclass AEAD {\n  /** Create a new AEAD instance with the given key */\n  static importKey(keyData, alg) {\n    let provider = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new webcrypto_1.WebCryptoProvider();\n    return __awaiter(this, void 0, void 0, function* () {\n      return new AEAD(yield siv_1.SIV.importKey(keyData, alg, provider));\n    });\n  }\n  constructor(siv) {\n    this._siv = siv;\n  }\n  /** Encrypt and authenticate data using AES-SIV */\n  seal(plaintext, nonce) {\n    let associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._siv.seal(plaintext, [associatedData, nonce]);\n    });\n  }\n  /** Decrypt and authenticate data using AES-SIV */\n  open(ciphertext, nonce) {\n    let associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._siv.open(ciphertext, [associatedData, nonce]);\n    });\n  }\n  /** Make a best effort to wipe memory used by this instance */\n  clear() {\n    this._siv.clear();\n    return this;\n  }\n}\nexports.AEAD = AEAD;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","webcrypto_1","require","siv_1","AEAD","importKey","keyData","alg","provider","WebCryptoProvider","SIV","constructor","siv","_siv","seal","plaintext","nonce","associatedData","Uint8Array","open","ciphertext","clear"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/miscreant/release/aead.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst webcrypto_1 = require(\"./providers/webcrypto\");\nconst siv_1 = require(\"./siv\");\n/** AEAD interface provider for ISIVLike types */\nclass AEAD {\n    /** Create a new AEAD instance with the given key */\n    static importKey(keyData, alg, provider = new webcrypto_1.WebCryptoProvider()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AEAD(yield siv_1.SIV.importKey(keyData, alg, provider));\n        });\n    }\n    constructor(siv) {\n        this._siv = siv;\n    }\n    /** Encrypt and authenticate data using AES-SIV */\n    seal(plaintext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.seal(plaintext, [associatedData, nonce]);\n        });\n    }\n    /** Decrypt and authenticate data using AES-SIV */\n    open(ciphertext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.open(ciphertext, [associatedData, nonce]);\n        });\n    }\n    /** Make a best effort to wipe memory used by this instance */\n    clear() {\n        this._siv.clear();\n        return this;\n    }\n}\nexports.AEAD = AEAD;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}