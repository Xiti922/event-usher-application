{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamingSocket = void 0;\nconst xstream_1 = require(\"xstream\");\nconst socketwrapper_1 = require(\"./socketwrapper\");\n/**\n * A WebSocket wrapper that exposes all events as a stream.\n *\n * This underlying socket will not be closed when the stream has no listeners\n */\nclass StreamingSocket {\n  constructor(url) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10000;\n    this.socket = new socketwrapper_1.SocketWrapper(url, event => {\n      if (this.eventProducerListener) {\n        this.eventProducerListener.next(event);\n      }\n    }, errorEvent => {\n      if (this.eventProducerListener) {\n        this.eventProducerListener.error(errorEvent);\n      }\n    }, () => {\n      // socket opened\n    }, closeEvent => {\n      if (this.eventProducerListener) {\n        if (closeEvent.wasClean) {\n          this.eventProducerListener.complete();\n        } else {\n          this.eventProducerListener.error(\"Socket was closed unclean\");\n        }\n      }\n    }, timeout);\n    this.connected = this.socket.connected;\n    const eventProducer = {\n      start: listener => this.eventProducerListener = listener,\n      stop: () => this.eventProducerListener = undefined\n    };\n    this.events = xstream_1.Stream.create(eventProducer);\n  }\n  connect() {\n    this.socket.connect();\n  }\n  disconnect() {\n    this.socket.disconnect();\n  }\n  async send(data) {\n    return this.socket.send(data);\n  }\n}\nexports.StreamingSocket = StreamingSocket;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;AAEA;;;;;AAKA,MAAaA,eAAe;EAM1BC,YAAmBC,GAAW,EAAkB;IAAA,IAAhBC,OAAO,uEAAG,KAAM;IAC9C,IAAI,CAACC,MAAM,GAAG,IAAIC,6BAAa,CAC7BH,GAAG,EACFI,KAAK,IAAI;MACR,IAAI,IAAI,CAACC,qBAAqB,EAAE;QAC9B,IAAI,CAACA,qBAAqB,CAACC,IAAI,CAACF,KAAK,CAAC;;IAE1C,CAAC,EACAG,UAAU,IAAI;MACb,IAAI,IAAI,CAACF,qBAAqB,EAAE;QAC9B,IAAI,CAACA,qBAAqB,CAACG,KAAK,CAACD,UAAU,CAAC;;IAEhD,CAAC,EACD,MAAK;MACH;IAAA,CACD,EACAE,UAAU,IAAI;MACb,IAAI,IAAI,CAACJ,qBAAqB,EAAE;QAC9B,IAAII,UAAU,CAACC,QAAQ,EAAE;UACvB,IAAI,CAACL,qBAAqB,CAACM,QAAQ,EAAE;SACtC,MAAM;UACL,IAAI,CAACN,qBAAqB,CAACG,KAAK,CAAC,2BAA2B,CAAC;;;IAGnE,CAAC,EACDP,OAAO,CACR;IACD,IAAI,CAACW,SAAS,GAAG,IAAI,CAACV,MAAM,CAACU,SAAS;IAEtC,MAAMC,aAAa,GAAkB;MACnCC,KAAK,EAAGC,QAAQ,IAAM,IAAI,CAACV,qBAAqB,GAAGU,QAAS;MAC5DC,IAAI,EAAE,MAAO,IAAI,CAACX,qBAAqB,GAAGY;KAC3C;IACD,IAAI,CAACC,MAAM,GAAGC,gBAAM,CAACC,MAAM,CAACP,aAAa,CAAC;EAC5C;EAEOQ,OAAO;IACZ,IAAI,CAACnB,MAAM,CAACmB,OAAO,EAAE;EACvB;EAEOC,UAAU;IACf,IAAI,CAACpB,MAAM,CAACoB,UAAU,EAAE;EAC1B;EAEO,MAAMC,IAAI,CAACC,IAAY;IAC5B,OAAO,IAAI,CAACtB,MAAM,CAACqB,IAAI,CAACC,IAAI,CAAC;EAC/B;;AApDFC","names":["StreamingSocket","constructor","url","timeout","socket","socketwrapper_1","event","eventProducerListener","next","errorEvent","error","closeEvent","wasClean","complete","connected","eventProducer","start","listener","stop","undefined","events","xstream_1","create","connect","disconnect","send","data","exports"],"sources":["../src/streamingsocket.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}