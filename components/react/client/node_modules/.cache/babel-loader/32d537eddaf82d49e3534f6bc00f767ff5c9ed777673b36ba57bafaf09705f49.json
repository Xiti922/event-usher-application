{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHandler = void 0;\nconst router_1 = require(\"@keplr-wallet/router\");\nconst messages_1 = require(\"./messages\");\nconst getHandler = service => {\n  return (env, msg) => {\n    switch (msg.constructor) {\n      case messages_1.ApproveInteractionMsg:\n        return handleApproveInteractionMsg(service)(env, msg);\n      case messages_1.RejectInteractionMsg:\n        return handleRejectInteractionMsg(service)(env, msg);\n      default:\n        throw new router_1.KeplrError(\"interaction\", 100, \"Unknown msg type\");\n    }\n  };\n};\nexports.getHandler = getHandler;\nconst handleApproveInteractionMsg = service => {\n  return (_, msg) => {\n    return service.approve(msg.id, msg.result);\n  };\n};\nconst handleRejectInteractionMsg = service => {\n  return (_, msg) => {\n    return service.reject(msg.id);\n  };\n};","map":{"version":3,"mappings":";;;;;;AAAA;AAOA;AAGO,MAAMA,UAAU,GACrBC,OAA2B,IACzB;EACF,OAAO,CAACC,GAAQ,EAAEC,GAAqB,KAAI;IACzC,QAAQA,GAAG,CAACC,WAAW;MACrB,KAAKC,gCAAqB;QACxB,OAAOC,2BAA2B,CAACL,OAAO,CAAC,CACzCC,GAAG,EACHC,GAA4B,CAC7B;MACH,KAAKE,+BAAoB;QACvB,OAAOE,0BAA0B,CAACN,OAAO,CAAC,CACxCC,GAAG,EACHC,GAA2B,CAC5B;MACH;QACE,MAAM,IAAIK,mBAAU,CAAC,aAAa,EAAE,GAAG,EAAE,kBAAkB,CAAC;IAAC;EAEnE,CAAC;AACH,CAAC;AAnBYC,kBAAU;AAqBvB,MAAMH,2BAA2B,GAEcL,OAAO,IAAI;EACxD,OAAO,CAACS,CAAC,EAAEP,GAAG,KAAI;IAChB,OAAOF,OAAO,CAACU,OAAO,CAACR,GAAG,CAACS,EAAE,EAAET,GAAG,CAACU,MAAM,CAAC;EAC5C,CAAC;AACH,CAAC;AAED,MAAMN,0BAA0B,GAEcN,OAAO,IAAI;EACvD,OAAO,CAACS,CAAC,EAAEP,GAAG,KAAI;IAChB,OAAOF,OAAO,CAACa,MAAM,CAACX,GAAG,CAACS,EAAE,CAAC;EAC/B,CAAC;AACH,CAAC","names":["getHandler","service","env","msg","constructor","messages_1","handleApproveInteractionMsg","handleRejectInteractionMsg","router_1","exports","_","approve","id","result","reject"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/interaction/handler.ts"],"sourcesContent":["import {\n  Env,\n  Handler,\n  InternalHandler,\n  KeplrError,\n  Message,\n} from \"@keplr-wallet/router\";\nimport { ApproveInteractionMsg, RejectInteractionMsg } from \"./messages\";\nimport { InteractionService } from \"./service\";\n\nexport const getHandler: (service: InteractionService) => Handler = (\n  service: InteractionService\n) => {\n  return (env: Env, msg: Message<unknown>) => {\n    switch (msg.constructor) {\n      case ApproveInteractionMsg:\n        return handleApproveInteractionMsg(service)(\n          env,\n          msg as ApproveInteractionMsg\n        );\n      case RejectInteractionMsg:\n        return handleRejectInteractionMsg(service)(\n          env,\n          msg as RejectInteractionMsg\n        );\n      default:\n        throw new KeplrError(\"interaction\", 100, \"Unknown msg type\");\n    }\n  };\n};\n\nconst handleApproveInteractionMsg: (\n  service: InteractionService\n) => InternalHandler<ApproveInteractionMsg> = (service) => {\n  return (_, msg) => {\n    return service.approve(msg.id, msg.result);\n  };\n};\n\nconst handleRejectInteractionMsg: (\n  service: InteractionService\n) => InternalHandler<RejectInteractionMsg> = (service) => {\n  return (_, msg) => {\n    return service.reject(msg.id);\n  };\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}