{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccountStore = void 0;\nconst common_1 = require(\"../common\");\nconst base_1 = require(\"./base\");\nclass AccountStore extends common_1.HasMapStore {\n  constructor(eventListener, chainGetter, storeOptsCreator) {\n    super(chainId => {\n      const accountSetBase = new base_1.AccountSetBaseSuper(eventListener, chainGetter, chainId, storeOptsCreator(chainId));\n      return common_1.mergeStores(accountSetBase, [this.chainGetter, chainId], ...this.accountSetCreators);\n    });\n    this.eventListener = eventListener;\n    this.chainGetter = chainGetter;\n    this.storeOptsCreator = storeOptsCreator;\n    for (var _len = arguments.length, accountSetCreators = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      accountSetCreators[_key - 3] = arguments[_key];\n    }\n    this.accountSetCreators = accountSetCreators;\n  }\n  getAccount(chainId) {\n    return this.get(chainId);\n  }\n  hasAccount(chainId) {\n    return this.has(chainId);\n  }\n}\nexports.AccountStore = AccountStore;","map":{"version":3,"mappings":";;;;;;AAAA;AAOA;AAQA,MAAaA,YAGX,SAAQC,oBAA6B;EASrCC,YACqBC,aAGlB,EACkBC,WAAwB,EACxBC,gBAAqD,EAOvE;IAED,KAAK,CAAEC,OAAe,IAAI;MACxB,MAAMC,cAAc,GAAG,IAAIC,0BAAmB,CAC5CL,aAAa,EACbC,WAAW,EACXE,OAAO,EACPD,gBAAgB,CAACC,OAAO,CAAC,CAC1B;MAED,OAAOL,oBAAW,CAChBM,cAAc,EACd,CAAC,IAAI,CAACH,WAAW,EAAEE,OAAO,CAAC,EAC3B,GAAG,IAAI,CAACG,kBAAkB,CAC3B;IACH,CAAC,CAAC;IA3BiB,kBAAa,GAAbN,aAAa;IAIb,gBAAW,GAAXC,WAAW;IACX,qBAAgB,GAAhBC,gBAAgB;IAAqC,kCACrEI,kBAMF;MANEA,kBAMF;IAAA;IAiBD,IAAI,CAACA,kBAAkB,GAAGA,kBAAkB;EAC9C;EAEAC,UAAU,CAACJ,OAAe;IACxB,OAAO,IAAI,CAACK,GAAG,CAACL,OAAO,CAAC;EAC1B;EAEAM,UAAU,CAACN,OAAe;IACxB,OAAO,IAAI,CAACO,GAAG,CAACP,OAAO,CAAC;EAC1B;;AAnDFQ","names":["AccountStore","common_1","constructor","eventListener","chainGetter","storeOptsCreator","chainId","accountSetBase","base_1","accountSetCreators","getAccount","get","hasAccount","has","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/account/store.ts"],"sourcesContent":["import {\n  ChainedFunctionifyTuple,\n  ChainGetter,\n  HasMapStore,\n  IObject,\n  mergeStores,\n} from \"../common\";\nimport { AccountSetBase, AccountSetBaseSuper, AccountSetOpts } from \"./base\";\nimport { DeepReadonly, UnionToIntersection } from \"utility-types\";\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport interface IAccountStore<T extends IObject = {}> {\n  getAccount(chainId: string): DeepReadonly<AccountSetBase & T>;\n}\n\nexport class AccountStore<\n  Injects extends Array<IObject>,\n  AccountSetReturn = AccountSetBase & UnionToIntersection<Injects[number]>\n> extends HasMapStore<AccountSetReturn> {\n  protected accountSetCreators: ChainedFunctionifyTuple<\n    AccountSetBaseSuper,\n    // chainGetter: ChainGetter,\n    // chainId: string,\n    [ChainGetter, string],\n    Injects\n  >;\n\n  constructor(\n    protected readonly eventListener: {\n      addEventListener: (type: string, fn: () => unknown) => void;\n      removeEventListener: (type: string, fn: () => unknown) => void;\n    },\n    protected readonly chainGetter: ChainGetter,\n    protected readonly storeOptsCreator: (chainId: string) => AccountSetOpts,\n    ...accountSetCreators: ChainedFunctionifyTuple<\n      AccountSetBaseSuper,\n      // chainGetter: ChainGetter,\n      // chainId: string,\n      [ChainGetter, string],\n      Injects\n    >\n  ) {\n    super((chainId: string) => {\n      const accountSetBase = new AccountSetBaseSuper(\n        eventListener,\n        chainGetter,\n        chainId,\n        storeOptsCreator(chainId)\n      );\n\n      return mergeStores(\n        accountSetBase,\n        [this.chainGetter, chainId],\n        ...this.accountSetCreators\n      );\n    });\n\n    this.accountSetCreators = accountSetCreators;\n  }\n\n  getAccount(chainId: string): AccountSetReturn {\n    return this.get(chainId);\n  }\n\n  hasAccount(chainId: string): boolean {\n    return this.has(chainId);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}