{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizePubkey = exports.uint64ToString = exports.uint64ToNumber = void 0;\nconst math_1 = require(\"@cosmjs/math\");\nconst pubkey_1 = require(\"../pubkey\");\n/**\n * Converts an integer expressed as number or string to a number.\n * Throws if input is not a valid uint64 or if the value exceeds MAX_SAFE_INTEGER.\n *\n * This is needed for supporting Comsos SDK 0.37/0.38/0.39 with one client.\n */\nfunction uint64ToNumber(input) {\n  const value = typeof input === \"number\" ? math_1.Uint64.fromNumber(input) : math_1.Uint64.fromString(input);\n  return value.toNumber();\n}\nexports.uint64ToNumber = uint64ToNumber;\n/**\n * Converts an integer expressed as number or string to a string.\n * Throws if input is not a valid uint64.\n *\n * This is needed for supporting Comsos SDK 0.37/0.38/0.39 with one client.\n */\nfunction uint64ToString(input) {\n  const value = typeof input === \"number\" ? math_1.Uint64.fromNumber(input) : math_1.Uint64.fromString(input);\n  return value.toString();\n}\nexports.uint64ToString = uint64ToString;\n/**\n * Normalizes a pubkey as in `BaseAccount.public_key` to allow supporting\n * Comsos SDK 0.37â€“0.39.\n *\n * Returns null when unset.\n */\nfunction normalizePubkey(input) {\n  if (!input) return null;\n  if (typeof input === \"string\") return pubkey_1.decodeBech32Pubkey(input);\n  return input;\n}\nexports.normalizePubkey = normalizePubkey;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;AAGA;;;;;;AAMA,SAAgBA,cAAc,CAACC,KAAsB;EACnD,MAAMC,KAAK,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGE,aAAM,CAACC,UAAU,CAACH,KAAK,CAAC,GAAGE,aAAM,CAACE,UAAU,CAACJ,KAAK,CAAC;EAC7F,OAAOC,KAAK,CAACI,QAAQ,EAAE;AACzB;AAHAC;AAKA;;;;;;AAMA,SAAgBC,cAAc,CAACP,KAAsB;EACnD,MAAMC,KAAK,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAAGE,aAAM,CAACC,UAAU,CAACH,KAAK,CAAC,GAAGE,aAAM,CAACE,UAAU,CAACJ,KAAK,CAAC;EAC7F,OAAOC,KAAK,CAACO,QAAQ,EAAE;AACzB;AAHAF;AAKA;;;;;;AAMA,SAAgBG,eAAe,CAACT,KAA6B;EAC3D,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EACvB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAOU,2BAAkB,CAACV,KAAK,CAAC;EAC/D,OAAOA,KAAK;AACd;AAJAM","names":["uint64ToNumber","input","value","math_1","fromNumber","fromString","toNumber","exports","uint64ToString","toString","normalizePubkey","pubkey_1"],"sources":["../../src/lcdapi/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}