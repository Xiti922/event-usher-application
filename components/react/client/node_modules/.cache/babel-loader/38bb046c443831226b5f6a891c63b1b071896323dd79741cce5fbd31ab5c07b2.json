{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InteractionStore = void 0;\nconst router_1 = require(\"@keplr-wallet/router\");\nconst background_1 = require(\"@keplr-wallet/background\");\nconst mobx_1 = require(\"mobx\");\nclass InteractionStore {\n  constructor(router, msgRequester) {\n    this.router = router;\n    this.msgRequester = msgRequester;\n    this.datas = new Map();\n    this.events = new Map();\n    mobx_1.makeObservable(this);\n    const service = new background_1.InteractionForegroundService(this);\n    background_1.interactionForegroundInit(router, service);\n  }\n  getDatas(type) {\n    var _a;\n    return (_a = mobx_1.toJS(this.datas.get(type))) !== null && _a !== void 0 ? _a : [];\n  }\n  getEvents(type) {\n    var _a;\n    return (_a = mobx_1.toJS(this.events.get(type))) !== null && _a !== void 0 ? _a : [];\n  }\n  onInteractionDataReceived(data) {\n    if (!this.datas.has(data.type)) {\n      this.datas.set(data.type, mobx_1.observable.array([], {\n        deep: false\n      }));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.datas.get(data.type).push(data);\n  }\n  onEventDataReceived(data) {\n    if (!this.events.has(data.type)) {\n      this.events.set(data.type, mobx_1.observable.array([], {\n        deep: false\n      }));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.events.get(data.type).push(data);\n  }\n  *approve(type, id, result) {\n    this.removeData(type, id);\n    yield this.msgRequester.sendMessage(router_1.BACKGROUND_PORT, new background_1.ApproveInteractionMsg(id, result));\n  }\n  /**\n   * Approve the interaction without removing the data on the store.\n   * Actually, this method is used for the sign interaction to wait the actual signing ends.\n   * You should make sure that remove the data manually.\n   * @param id\n   * @param result\n   */\n  *approveWithoutRemovingData(id, result) {\n    yield this.msgRequester.sendMessage(router_1.BACKGROUND_PORT, new background_1.ApproveInteractionMsg(id, result));\n  }\n  *reject(type, id) {\n    this.removeData(type, id);\n    yield this.msgRequester.sendMessage(router_1.BACKGROUND_PORT, new background_1.RejectInteractionMsg(id));\n  }\n  *rejectAll(type) {\n    const datas = this.getDatas(type);\n    for (const data of datas) {\n      yield this.reject(data.type, data.id);\n    }\n  }\n  removeData(type, id) {\n    if (this.datas.has(type)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const find = this.datas.get(type).find(data => {\n        return data.id === id;\n      });\n      if (find) {\n        this.datas.get(type).remove(find);\n      }\n    }\n  }\n  clearEvent(type) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    if (this.events.has(type) && this.events.get(type).length > 0) {\n      this.events.set(type, mobx_1.observable.array([], {\n        deep: false\n      }));\n    }\n  }\n}\n__decorate([mobx_1.observable.shallow], InteractionStore.prototype, \"datas\", void 0);\n__decorate([mobx_1.observable.shallow], InteractionStore.prototype, \"events\", void 0);\n__decorate([mobx_1.action], InteractionStore.prototype, \"onInteractionDataReceived\", null);\n__decorate([mobx_1.action], InteractionStore.prototype, \"onEventDataReceived\", null);\n__decorate([mobx_1.flow], InteractionStore.prototype, \"approve\", null);\n__decorate([mobx_1.flow], InteractionStore.prototype, \"approveWithoutRemovingData\", null);\n__decorate([mobx_1.flow], InteractionStore.prototype, \"reject\", null);\n__decorate([mobx_1.flow], InteractionStore.prototype, \"rejectAll\", null);\n__decorate([mobx_1.action], InteractionStore.prototype, \"removeData\", null);\n__decorate([mobx_1.action], InteractionStore.prototype, \"clearEvent\", null);\nexports.InteractionStore = InteractionStore;","map":{"version":3,"mappings":"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","names":["InteractionStore","constructor","router","msgRequester","Map","mobx_1","service","background_1","getDatas","type","datas","get","getEvents","events","onInteractionDataReceived","data","has","set","array","deep","push","onEventDataReceived","approve","id","result","removeData","sendMessage","router_1","approveWithoutRemovingData","reject","rejectAll","find","remove","clearEvent","length","__decorate","shallow","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/core/interaction/interaction.ts"],"sourcesContent":["import {\n  Router,\n  MessageRequester,\n  BACKGROUND_PORT,\n} from \"@keplr-wallet/router\";\nimport {\n  InteractionForegroundHandler,\n  interactionForegroundInit,\n  InteractionForegroundService,\n  InteractionWaitingData,\n  ApproveInteractionMsg,\n  RejectInteractionMsg,\n} from \"@keplr-wallet/background\";\nimport {\n  action,\n  observable,\n  IObservableArray,\n  makeObservable,\n  flow,\n  toJS,\n} from \"mobx\";\n\nexport class InteractionStore implements InteractionForegroundHandler {\n  @observable.shallow\n  protected datas: Map<string, InteractionWaitingData[]> = new Map();\n\n  @observable.shallow\n  protected events: Map<\n    string,\n    Omit<InteractionWaitingData, \"id\" | \"isInternal\">[]\n  > = new Map();\n\n  constructor(\n    protected readonly router: Router,\n    protected readonly msgRequester: MessageRequester\n  ) {\n    makeObservable(this);\n\n    const service = new InteractionForegroundService(this);\n    interactionForegroundInit(router, service);\n  }\n\n  getDatas<T = unknown>(type: string): InteractionWaitingData<T>[] {\n    return toJS(this.datas.get(type) as InteractionWaitingData<T>[]) ?? [];\n  }\n\n  getEvents<T = unknown>(\n    type: string\n  ): Omit<InteractionWaitingData<T>, \"id\" | \"isInternal\">[] {\n    return (\n      toJS(\n        this.events.get(type) as Omit<\n          InteractionWaitingData<T>,\n          \"id\" | \"isInternal\"\n        >[]\n      ) ?? []\n    );\n  }\n\n  @action\n  onInteractionDataReceived(data: InteractionWaitingData) {\n    if (!this.datas.has(data.type)) {\n      this.datas.set(\n        data.type,\n        observable.array([], {\n          deep: false,\n        })\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.datas.get(data.type)!.push(data);\n  }\n\n  @action\n  onEventDataReceived(data: Omit<InteractionWaitingData, \"id\" | \"isInternal\">) {\n    if (!this.events.has(data.type)) {\n      this.events.set(\n        data.type,\n        observable.array([], {\n          deep: false,\n        })\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.events.get(data.type)!.push(data);\n  }\n\n  @flow\n  *approve(type: string, id: string, result: unknown) {\n    this.removeData(type, id);\n    yield this.msgRequester.sendMessage(\n      BACKGROUND_PORT,\n      new ApproveInteractionMsg(id, result)\n    );\n  }\n\n  /**\n   * Approve the interaction without removing the data on the store.\n   * Actually, this method is used for the sign interaction to wait the actual signing ends.\n   * You should make sure that remove the data manually.\n   * @param id\n   * @param result\n   */\n  @flow\n  *approveWithoutRemovingData(id: string, result: unknown) {\n    yield this.msgRequester.sendMessage(\n      BACKGROUND_PORT,\n      new ApproveInteractionMsg(id, result)\n    );\n  }\n\n  @flow\n  *reject(type: string, id: string) {\n    this.removeData(type, id);\n    yield this.msgRequester.sendMessage(\n      BACKGROUND_PORT,\n      new RejectInteractionMsg(id)\n    );\n  }\n\n  @flow\n  *rejectAll(type: string) {\n    const datas = this.getDatas(type);\n    for (const data of datas) {\n      yield this.reject(data.type, data.id);\n    }\n  }\n\n  @action\n  removeData(type: string, id: string) {\n    if (this.datas.has(type)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const find = this.datas.get(type)!.find((data) => {\n        return data.id === id;\n      });\n      if (find) {\n        (this.datas.get(\n          type\n        ) as IObservableArray<InteractionWaitingData>).remove(find);\n      }\n    }\n  }\n\n  @action\n  clearEvent(type: string) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    if (this.events.has(type) && this.events.get(type)!.length > 0) {\n      this.events.set(\n        type,\n        observable.array([], {\n          deep: false,\n        })\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}