{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQueryCw20ContractInfo = exports.ObservableQueryCw20ContactInfoInner = void 0;\nconst chain_query_1 = require(\"../chain-query\");\nconst mobx_1 = require(\"mobx\");\nconst contract_query_1 = require(\"./contract-query\");\nclass ObservableQueryCw20ContactInfoInner extends contract_query_1.ObservableCosmwasmContractChainQuery {\n  constructor(kvStore, chainId, chainGetter, contractAddress) {\n    super(kvStore, chainId, chainGetter, contractAddress, {\n      token_info: {}\n    });\n    this.contractAddress = contractAddress;\n  }\n  get tokenInfo() {\n    if (!this.response || !this.response.data) {\n      return undefined;\n    }\n    return this.response.data;\n  }\n}\n__decorate([mobx_1.computed], ObservableQueryCw20ContactInfoInner.prototype, \"tokenInfo\", null);\nexports.ObservableQueryCw20ContactInfoInner = ObservableQueryCw20ContactInfoInner;\nclass ObservableQueryCw20ContractInfo extends chain_query_1.ObservableChainQueryMap {\n  constructor(kvStore, chainId, chainGetter) {\n    super(kvStore, chainId, chainGetter, contractAddress => {\n      return new ObservableQueryCw20ContactInfoInner(this.kvStore, this.chainId, this.chainGetter, contractAddress);\n    });\n    this.kvStore = kvStore;\n    this.chainId = chainId;\n    this.chainGetter = chainGetter;\n  }\n  getQueryContract(contractAddress) {\n    return this.get(contractAddress);\n  }\n}\nexports.ObservableQueryCw20ContractInfo = ObservableQueryCw20ContractInfo;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAEA;AAEA;AACA;AAEA,MAAaA,mCAAoC,SAAQC,qDAA2D;EAClHC,YACEC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,EACLC,eAAuB;IAE1C,KAAK,CAACH,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,eAAe,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAE,CAAC;IAFtD,oBAAe,GAAfD,eAAe;EAGpC;EAGA,IAAIE,SAAS;IACX,IAAI,CAAC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACA,QAAQ,CAACC,IAAI,EAAE;MACzC,OAAOC,SAAS;;IAGlB,OAAO,IAAI,CAACF,QAAQ,CAACC,IAAI;EAC3B;;AANAE,YADCC,eAAQ,oEAOR;AAjBHC;AAoBA,MAAaC,+BAAgC,SAAQC,qCAA8C;EACjGd,YACqBC,OAAgB,EAChBC,OAAe,EACfC,WAAwB;IAE3C,KAAK,CAACF,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAGC,eAAuB,IAAI;MAC/D,OAAO,IAAIN,mCAAmC,CAC5C,IAAI,CAACG,OAAO,EACZ,IAAI,CAACC,OAAO,EACZ,IAAI,CAACC,WAAW,EAChBC,eAAe,CAChB;IACH,CAAC,CAAC;IAXiB,YAAO,GAAPH,OAAO;IACP,YAAO,GAAPC,OAAO;IACP,gBAAW,GAAXC,WAAW;EAUhC;EAEAY,gBAAgB,CACdX,eAAuB;IAEvB,OAAO,IAAI,CAACY,GAAG,CAACZ,eAAe,CAAwC;EACzE;;AApBFQ","names":["ObservableQueryCw20ContactInfoInner","contract_query_1","constructor","kvStore","chainId","chainGetter","contractAddress","token_info","tokenInfo","response","data","undefined","__decorate","mobx_1","exports","ObservableQueryCw20ContractInfo","chain_query_1","getQueryContract","get"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmwasm/cw20-contract-info.ts"],"sourcesContent":["import { Cw20ContractTokenInfo } from \"./types\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport { ObservableChainQueryMap } from \"../chain-query\";\nimport { ChainGetter } from \"../../common\";\nimport { computed } from \"mobx\";\nimport { ObservableCosmwasmContractChainQuery } from \"./contract-query\";\n\nexport class ObservableQueryCw20ContactInfoInner extends ObservableCosmwasmContractChainQuery<Cw20ContractTokenInfo> {\n  constructor(\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter,\n    protected readonly contractAddress: string\n  ) {\n    super(kvStore, chainId, chainGetter, contractAddress, { token_info: {} });\n  }\n\n  @computed\n  get tokenInfo(): Cw20ContractTokenInfo | undefined {\n    if (!this.response || !this.response.data) {\n      return undefined;\n    }\n\n    return this.response.data;\n  }\n}\n\nexport class ObservableQueryCw20ContractInfo extends ObservableChainQueryMap<Cw20ContractTokenInfo> {\n  constructor(\n    protected readonly kvStore: KVStore,\n    protected readonly chainId: string,\n    protected readonly chainGetter: ChainGetter\n  ) {\n    super(kvStore, chainId, chainGetter, (contractAddress: string) => {\n      return new ObservableQueryCw20ContactInfoInner(\n        this.kvStore,\n        this.chainId,\n        this.chainGetter,\n        contractAddress\n      );\n    });\n  }\n\n  getQueryContract(\n    contractAddress: string\n  ): ObservableQueryCw20ContactInfoInner {\n    return this.get(contractAddress) as ObservableQueryCw20ContactInfoInner;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}