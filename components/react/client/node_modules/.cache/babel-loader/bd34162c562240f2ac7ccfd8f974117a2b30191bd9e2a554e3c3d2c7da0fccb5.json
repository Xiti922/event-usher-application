{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChainSuggestStore = void 0;\nconst background_1 = require(\"@keplr-wallet/background\");\nconst mobx_1 = require(\"mobx\");\nclass ChainSuggestStore {\n  constructor(interactionStore) {\n    this.interactionStore = interactionStore;\n    this._isLoading = false;\n    mobx_1.makeObservable(this);\n  }\n  get waitingSuggestedChainInfo() {\n    const datas = this.interactionStore.getDatas(background_1.SuggestChainInfoMsg.type());\n    if (datas.length > 0) {\n      return datas[0];\n    }\n  }\n  *approve() {\n    this._isLoading = true;\n    try {\n      const data = this.waitingSuggestedChainInfo;\n      if (data) {\n        yield this.interactionStore.approve(data.type, data.id, {});\n      }\n    } finally {\n      this._isLoading = false;\n    }\n  }\n  *reject() {\n    this._isLoading = true;\n    try {\n      const data = this.waitingSuggestedChainInfo;\n      if (data) {\n        yield this.interactionStore.reject(data.type, data.id);\n      }\n    } finally {\n      this._isLoading = false;\n    }\n  }\n  *rejectAll() {\n    this._isLoading = true;\n    try {\n      yield this.interactionStore.rejectAll(background_1.SuggestChainInfoMsg.type());\n    } finally {\n      this._isLoading = false;\n    }\n  }\n  get isLoading() {\n    return this._isLoading;\n  }\n}\n__decorate([mobx_1.observable], ChainSuggestStore.prototype, \"_isLoading\", void 0);\n__decorate([mobx_1.flow], ChainSuggestStore.prototype, \"approve\", null);\n__decorate([mobx_1.flow], ChainSuggestStore.prototype, \"reject\", null);\n__decorate([mobx_1.flow], ChainSuggestStore.prototype, \"rejectAll\", null);\nexports.ChainSuggestStore = ChainSuggestStore;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAEA;AACA;AAEA,MAAaA,iBAAiB;EAI5BC,YAA+BC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAFrC,eAAU,GAAY,KAAK;IAGnCC,qBAAc,CAAC,IAAI,CAAC;EACtB;EAEA,IAAIC,yBAAyB;IAC3B,MAAMC,KAAK,GAAG,IAAI,CAACH,gBAAgB,CAACI,QAAQ,CAE1CC,gCAAmB,CAACC,IAAI,EAAE,CAAC;IAE7B,IAAIH,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;MACpB,OAAOJ,KAAK,CAAC,CAAC,CAAC;;EAEnB;EAGA,CAACK,OAAO;IACN,IAAI,CAACC,UAAU,GAAG,IAAI;IAEtB,IAAI;MACF,MAAMC,IAAI,GAAG,IAAI,CAACR,yBAAyB;MAC3C,IAAIQ,IAAI,EAAE;QACR,MAAM,IAAI,CAACV,gBAAgB,CAACQ,OAAO,CAACE,IAAI,CAACJ,IAAI,EAAEI,IAAI,CAACC,EAAE,EAAE,EAAE,CAAC;;KAE9D,SAAS;MACR,IAAI,CAACF,UAAU,GAAG,KAAK;;EAE3B;EAGA,CAACG,MAAM;IACL,IAAI,CAACH,UAAU,GAAG,IAAI;IAEtB,IAAI;MACF,MAAMC,IAAI,GAAG,IAAI,CAACR,yBAAyB;MAC3C,IAAIQ,IAAI,EAAE;QACR,MAAM,IAAI,CAACV,gBAAgB,CAACY,MAAM,CAACF,IAAI,CAACJ,IAAI,EAAEI,IAAI,CAACC,EAAE,CAAC;;KAEzD,SAAS;MACR,IAAI,CAACF,UAAU,GAAG,KAAK;;EAE3B;EAGA,CAACI,SAAS;IACR,IAAI,CAACJ,UAAU,GAAG,IAAI;IACtB,IAAI;MACF,MAAM,IAAI,CAACT,gBAAgB,CAACa,SAAS,CAACR,gCAAmB,CAACC,IAAI,EAAE,CAAC;KAClE,SAAS;MACR,IAAI,CAACG,UAAU,GAAG,KAAK;;EAE3B;EAEA,IAAIK,SAAS;IACX,OAAO,IAAI,CAACL,UAAU;EACxB;;AAxDAM,YADCd,iBAAU,qDAC2B;AAiBtCc,YADCd,WAAI,gDAYJ;AAGDc,YADCd,WAAI,+CAYJ;AAGDc,YADCd,WAAI,kDAQJ;AAtDHe","names":["ChainSuggestStore","constructor","interactionStore","mobx_1","waitingSuggestedChainInfo","datas","getDatas","background_1","type","length","approve","_isLoading","data","id","reject","rejectAll","isLoading","__decorate","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/core/interaction/chain-suggest.ts"],"sourcesContent":["import { InteractionStore } from \"./interaction\";\nimport { ChainInfo } from \"@keplr-wallet/types\";\nimport { SuggestChainInfoMsg } from \"@keplr-wallet/background\";\nimport { flow, makeObservable, observable } from \"mobx\";\n\nexport class ChainSuggestStore {\n  @observable\n  protected _isLoading: boolean = false;\n\n  constructor(protected readonly interactionStore: InteractionStore) {\n    makeObservable(this);\n  }\n\n  get waitingSuggestedChainInfo() {\n    const datas = this.interactionStore.getDatas<\n      ChainInfo & { origin: string }\n    >(SuggestChainInfoMsg.type());\n\n    if (datas.length > 0) {\n      return datas[0];\n    }\n  }\n\n  @flow\n  *approve() {\n    this._isLoading = true;\n\n    try {\n      const data = this.waitingSuggestedChainInfo;\n      if (data) {\n        yield this.interactionStore.approve(data.type, data.id, {});\n      }\n    } finally {\n      this._isLoading = false;\n    }\n  }\n\n  @flow\n  *reject() {\n    this._isLoading = true;\n\n    try {\n      const data = this.waitingSuggestedChainInfo;\n      if (data) {\n        yield this.interactionStore.reject(data.type, data.id);\n      }\n    } finally {\n      this._isLoading = false;\n    }\n  }\n\n  @flow\n  *rejectAll() {\n    this._isLoading = true;\n    try {\n      yield this.interactionStore.rejectAll(SuggestChainInfoMsg.type());\n    } finally {\n      this._isLoading = false;\n    }\n  }\n\n  get isLoading(): boolean {\n    return this._isLoading;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}