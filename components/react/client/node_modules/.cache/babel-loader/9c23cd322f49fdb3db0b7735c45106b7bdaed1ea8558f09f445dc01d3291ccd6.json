{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CosmwasmQueriesImpl = exports.CosmwasmQueries = void 0;\nconst cw20_contract_info_1 = require(\"./cw20-contract-info\");\nconst cw20_balance_1 = require(\"./cw20-balance\");\nexports.CosmwasmQueries = {\n  use() {\n    return (queriesSetBase, kvStore, chainId, chainGetter) => {\n      return {\n        cosmwasm: new CosmwasmQueriesImpl(queriesSetBase, kvStore, chainId, chainGetter)\n      };\n    };\n  }\n};\nclass CosmwasmQueriesImpl {\n  constructor(base, kvStore, chainId, chainGetter) {\n    base.queryBalances.addBalanceRegistry(new cw20_balance_1.ObservableQueryCw20BalanceRegistry(kvStore));\n    this.querycw20ContractInfo = new cw20_contract_info_1.ObservableQueryCw20ContractInfo(kvStore, chainId, chainGetter);\n  }\n}\nexports.CosmwasmQueriesImpl = CosmwasmQueriesImpl;","map":{"version":3,"mappings":";;;;;;AAGA;AAEA;AAMaA,uBAAe,GAAG;EAC7BC,GAAG;IAMD,OAAO,CACLC,cAA8B,EAC9BC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,KACtB;MACF,OAAO;QACLC,QAAQ,EAAE,IAAIC,mBAAmB,CAC/BL,cAAc,EACdC,OAAO,EACPC,OAAO,EACPC,WAAW;OAEd;IACH,CAAC;EACH;CACD;AAED,MAAaE,mBAAmB;EAG9BC,YACEC,IAAoB,EACpBN,OAAgB,EAChBC,OAAe,EACfC,WAAwB;IAExBI,IAAI,CAACC,aAAa,CAACC,kBAAkB,CACnC,IAAIC,iDAAkC,CAACT,OAAO,CAAC,CAChD;IAED,IAAI,CAACU,qBAAqB,GAAG,IAAIC,oDAA+B,CAC9DX,OAAO,EACPC,OAAO,EACPC,WAAW,CACZ;EACH;;AAlBFL","names":["exports","use","queriesSetBase","kvStore","chainId","chainGetter","cosmwasm","CosmwasmQueriesImpl","constructor","base","queryBalances","addBalanceRegistry","cw20_balance_1","querycw20ContractInfo","cw20_contract_info_1"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmwasm/queries.ts"],"sourcesContent":["import { QueriesSetBase } from \"../queries\";\nimport { ChainGetter } from \"../../common\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport { ObservableQueryCw20ContractInfo } from \"./cw20-contract-info\";\nimport { DeepReadonly } from \"utility-types\";\nimport { ObservableQueryCw20BalanceRegistry } from \"./cw20-balance\";\n\nexport interface CosmwasmQueries {\n  cosmwasm: CosmwasmQueriesImpl;\n}\n\nexport const CosmwasmQueries = {\n  use(): (\n    queriesSetBase: QueriesSetBase,\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter\n  ) => CosmwasmQueries {\n    return (\n      queriesSetBase: QueriesSetBase,\n      kvStore: KVStore,\n      chainId: string,\n      chainGetter: ChainGetter\n    ) => {\n      return {\n        cosmwasm: new CosmwasmQueriesImpl(\n          queriesSetBase,\n          kvStore,\n          chainId,\n          chainGetter\n        ),\n      };\n    };\n  },\n};\n\nexport class CosmwasmQueriesImpl {\n  public readonly querycw20ContractInfo: DeepReadonly<ObservableQueryCw20ContractInfo>;\n\n  constructor(\n    base: QueriesSetBase,\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter\n  ) {\n    base.queryBalances.addBalanceRegistry(\n      new ObservableQueryCw20BalanceRegistry(kvStore)\n    );\n\n    this.querycw20ContractInfo = new ObservableQueryCw20ContractInfo(\n      kvStore,\n      chainId,\n      chainGetter\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}