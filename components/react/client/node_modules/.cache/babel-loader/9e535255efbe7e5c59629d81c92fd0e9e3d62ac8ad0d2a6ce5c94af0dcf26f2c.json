{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHandler = void 0;\nconst router_1 = require(\"@keplr-wallet/router\");\nconst messages_1 = require(\"./messages\");\nconst getHandler = service => {\n  return (env, msg) => {\n    switch (msg.constructor) {\n      case messages_1.PushInteractionDataMsg:\n        return handlePushInteractionDataMsg(service)(env, msg);\n      case messages_1.PushEventDataMsg:\n        return handlePushEventDataMsg(service)(env, msg);\n      default:\n        throw new router_1.KeplrError(\"interaction\", 110, \"Unknown msg type\");\n    }\n  };\n};\nexports.getHandler = getHandler;\nconst handlePushInteractionDataMsg = service => {\n  return (_, msg) => {\n    return service.pushData(msg.data);\n  };\n};\nconst handlePushEventDataMsg = service => {\n  return (_, msg) => {\n    return service.pushEvent(msg.data);\n  };\n};","map":{"version":3,"mappings":";;;;;;AAAA;AAOA;AAGO,MAAMA,UAAU,GACrBC,OAAqC,IACnC;EACF,OAAO,CAACC,GAAQ,EAAEC,GAAqB,KAAI;IACzC,QAAQA,GAAG,CAACC,WAAW;MACrB,KAAKC,iCAAsB;QACzB,OAAOC,4BAA4B,CAACL,OAAO,CAAC,CAC1CC,GAAG,EACHC,GAA6B,CAC9B;MACH,KAAKE,2BAAgB;QACnB,OAAOE,sBAAsB,CAACN,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAuB,CAAC;MACtE;QACE,MAAM,IAAIK,mBAAU,CAAC,aAAa,EAAE,GAAG,EAAE,kBAAkB,CAAC;IAAC;EAEnE,CAAC;AACH,CAAC;AAhBYC,kBAAU;AAkBvB,MAAMH,4BAA4B,GAEcL,OAAO,IAAI;EACzD,OAAO,CAACS,CAAC,EAAEP,GAAG,KAAI;IAChB,OAAOF,OAAO,CAACU,QAAQ,CAACR,GAAG,CAACS,IAAI,CAAC;EACnC,CAAC;AACH,CAAC;AAED,MAAML,sBAAsB,GAEcN,OAAO,IAAI;EACnD,OAAO,CAACS,CAAC,EAAEP,GAAG,KAAI;IAChB,OAAOF,OAAO,CAACY,SAAS,CAACV,GAAG,CAACS,IAAI,CAAC;EACpC,CAAC;AACH,CAAC","names":["getHandler","service","env","msg","constructor","messages_1","handlePushInteractionDataMsg","handlePushEventDataMsg","router_1","exports","_","pushData","data","pushEvent"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/interaction/foreground/handler.ts"],"sourcesContent":["import {\n  Env,\n  Handler,\n  InternalHandler,\n  KeplrError,\n  Message,\n} from \"@keplr-wallet/router\";\nimport { PushEventDataMsg, PushInteractionDataMsg } from \"./messages\";\nimport { InteractionForegroundService } from \"./service\";\n\nexport const getHandler: (service: InteractionForegroundService) => Handler = (\n  service: InteractionForegroundService\n) => {\n  return (env: Env, msg: Message<unknown>) => {\n    switch (msg.constructor) {\n      case PushInteractionDataMsg:\n        return handlePushInteractionDataMsg(service)(\n          env,\n          msg as PushInteractionDataMsg\n        );\n      case PushEventDataMsg:\n        return handlePushEventDataMsg(service)(env, msg as PushEventDataMsg);\n      default:\n        throw new KeplrError(\"interaction\", 110, \"Unknown msg type\");\n    }\n  };\n};\n\nconst handlePushInteractionDataMsg: (\n  service: InteractionForegroundService\n) => InternalHandler<PushInteractionDataMsg> = (service) => {\n  return (_, msg) => {\n    return service.pushData(msg.data);\n  };\n};\n\nconst handlePushEventDataMsg: (\n  service: InteractionForegroundService\n) => InternalHandler<PushEventDataMsg> = (service) => {\n  return (_, msg) => {\n    return service.pushEvent(msg.data);\n  };\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}