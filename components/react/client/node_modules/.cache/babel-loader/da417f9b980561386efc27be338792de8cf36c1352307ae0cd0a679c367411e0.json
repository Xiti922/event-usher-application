{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableChainQueryMap = exports.ObservableChainQuery = void 0;\nconst common_1 = require(\"../common\");\nconst axios_1 = __importDefault(require(\"axios\"));\nconst mobx_1 = require(\"mobx\");\nconst common_2 = require(\"../common\");\nclass ObservableChainQuery extends common_1.ObservableQuery {\n  constructor(kvStore, chainId, chainGetter, url) {\n    const chainInfo = chainGetter.getChain(chainId);\n    const instance = axios_1.default.create(Object.assign({\n      baseURL: chainInfo.rest\n    }, chainInfo.restConfig));\n    super(kvStore, instance, url);\n    this._chainId = chainId;\n    this.chainGetter = chainGetter;\n  }\n  get instance() {\n    const chainInfo = this.chainGetter.getChain(this.chainId);\n    return axios_1.default.create(Object.assign({\n      baseURL: chainInfo.rest\n    }, chainInfo.restConfig));\n  }\n  get chainId() {\n    return this._chainId;\n  }\n}\n__decorate([mobx_1.override], ObservableChainQuery.prototype, \"instance\", null);\nexports.ObservableChainQuery = ObservableChainQuery;\nclass ObservableChainQueryMap extends common_2.HasMapStore {\n  constructor(kvStore, chainId, chainGetter, creater) {\n    super(creater);\n    this.kvStore = kvStore;\n    this.chainId = chainId;\n    this.chainGetter = chainGetter;\n  }\n}\nexports.ObservableChainQueryMap = ObservableChainQueryMap;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA,MAAaA,oBAGX,SAAQC,wBAAqB;EAK7BC,YACEC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,EACxBC,GAAW;IAEX,MAAMC,SAAS,GAAGF,WAAW,CAACG,QAAQ,CAACJ,OAAO,CAAC;IAE/C,MAAMK,QAAQ,GAAGC,eAAK,CAACC,MAAM,eACxB;MACDC,OAAO,EAAEL,SAAS,CAACM;KACpB,EACEN,SAAS,CAACO,UAAU,EACvB;IAEF,KAAK,CAACX,OAAO,EAAEM,QAAQ,EAAEH,GAAG,CAAC;IAE7B,IAAI,CAACS,QAAQ,GAAGX,OAAO;IACvB,IAAI,CAACC,WAAW,GAAGA,WAAW;EAChC;EAGA,IAAcI,QAAQ;IACpB,MAAMF,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,CAAC,IAAI,CAACJ,OAAO,CAAC;IAEzD,OAAOM,eAAK,CAACC,MAAM,eACd;MACDC,OAAO,EAAEL,SAAS,CAACM;KACpB,EACEN,SAAS,CAACO,UAAU,EACvB;EACJ;EAEA,IAAIV,OAAO;IACT,OAAO,IAAI,CAACW,QAAQ;EACtB;;AAbAC,YADCC,eAAQ,oDAUR;AAvCHC;AA8CA,MAAaC,uBAGX,SAAQC,oBAAuC;EAC/ClB,YACqBC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,EAC3CgB,OAAoD;IAEpD,KAAK,CAACA,OAAO,CAAC;IALK,YAAO,GAAPlB,OAAO;IACP,YAAO,GAAPC,OAAO;IACP,gBAAW,GAAXC,WAAW;EAIhC;;AAXFa","names":["ObservableChainQuery","common_1","constructor","kvStore","chainId","chainGetter","url","chainInfo","getChain","instance","axios_1","create","baseURL","rest","restConfig","_chainId","__decorate","mobx_1","exports","ObservableChainQueryMap","common_2","creater"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/chain-query.ts"],"sourcesContent":["import { ObservableQuery } from \"../common\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport Axios, { AxiosInstance } from \"axios\";\nimport { override } from \"mobx\";\nimport { ChainGetter } from \"../common\";\nimport { HasMapStore } from \"../common\";\n\nexport class ObservableChainQuery<\n  T = unknown,\n  E = unknown\n> extends ObservableQuery<T, E> {\n  // Chain Id should not be changed after creation.\n  protected readonly _chainId: string;\n  protected readonly chainGetter: ChainGetter;\n\n  constructor(\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter,\n    url: string\n  ) {\n    const chainInfo = chainGetter.getChain(chainId);\n\n    const instance = Axios.create({\n      ...{\n        baseURL: chainInfo.rest,\n      },\n      ...chainInfo.restConfig,\n    });\n\n    super(kvStore, instance, url);\n\n    this._chainId = chainId;\n    this.chainGetter = chainGetter;\n  }\n\n  @override\n  protected get instance(): AxiosInstance {\n    const chainInfo = this.chainGetter.getChain(this.chainId);\n\n    return Axios.create({\n      ...{\n        baseURL: chainInfo.rest,\n      },\n      ...chainInfo.restConfig,\n    });\n  }\n\n  get chainId(): string {\n    return this._chainId;\n  }\n}\n\nexport class ObservableChainQueryMap<\n  T = unknown,\n  E = unknown\n> extends HasMapStore<ObservableChainQuery<T, E>> {\n  constructor(\n    protected readonly kvStore: KVStore,\n    protected readonly chainId: string,\n    protected readonly chainGetter: ChainGetter,\n    creater: (key: string) => ObservableChainQuery<T, E>\n  ) {\n    super(creater);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}