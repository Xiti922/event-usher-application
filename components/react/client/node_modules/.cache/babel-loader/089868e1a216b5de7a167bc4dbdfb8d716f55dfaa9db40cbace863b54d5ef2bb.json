{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupMintExtension = void 0;\nconst utils_1 = require(\"@cosmjs/utils\");\nconst query_1 = require(\"cosmjs-types/cosmos/mint/v1beta1/query\");\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupMintExtension(base) {\n  const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    mint: {\n      params: async () => {\n        const {\n          params\n        } = await queryService.Params({});\n        (0, utils_1.assert)(params);\n        return {\n          blocksPerYear: params.blocksPerYear,\n          goalBonded: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.goalBonded),\n          inflationMin: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMin),\n          inflationMax: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMax),\n          inflationRateChange: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationRateChange),\n          mintDenom: params.mintDenom\n        };\n      },\n      inflation: async () => {\n        const {\n          inflation\n        } = await queryService.Inflation({});\n        return (0, queryclient_1.decodeCosmosSdkDecFromProto)(inflation);\n      },\n      annualProvisions: async () => {\n        const {\n          annualProvisions\n        } = await queryService.AnnualProvisions({});\n        return (0, queryclient_1.decodeCosmosSdkDecFromProto)(annualProvisions);\n      }\n    }\n  };\n}\nexports.setupMintExtension = setupMintExtension;","map":{"version":3,"mappings":";;;;;;AACA;AAEA;AAEA;AAqBA,SAAgBA,kBAAkB,CAACC,IAAiB;EAClD,MAAMC,GAAG,GAAG,yCAAuB,EAACD,IAAI,CAAC;EACzC;EACA;EACA,MAAME,YAAY,GAAG,IAAIC,uBAAe,CAACF,GAAG,CAAC;EAE7C,OAAO;IACLG,IAAI,EAAE;MACJC,MAAM,EAAE,YAAgC;QACtC,MAAM;UAAEA;QAAM,CAAE,GAAG,MAAMH,YAAY,CAACI,MAAM,CAAC,EAAE,CAAC;QAChD,kBAAM,EAACD,MAAM,CAAC;QAEd,OAAO;UACLE,aAAa,EAAEF,MAAM,CAACE,aAAa;UACnCC,UAAU,EAAE,6CAA2B,EAACH,MAAM,CAACG,UAAU,CAAC;UAC1DC,YAAY,EAAE,6CAA2B,EAACJ,MAAM,CAACI,YAAY,CAAC;UAC9DC,YAAY,EAAE,6CAA2B,EAACL,MAAM,CAACK,YAAY,CAAC;UAC9DC,mBAAmB,EAAE,6CAA2B,EAACN,MAAM,CAACM,mBAAmB,CAAC;UAC5EC,SAAS,EAAEP,MAAM,CAACO;SACnB;MACH,CAAC;MACDC,SAAS,EAAE,YAAW;QACpB,MAAM;UAAEA;QAAS,CAAE,GAAG,MAAMX,YAAY,CAACY,SAAS,CAAC,EAAE,CAAC;QACtD,OAAO,6CAA2B,EAACD,SAAS,CAAC;MAC/C,CAAC;MACDE,gBAAgB,EAAE,YAAW;QAC3B,MAAM;UAAEA;QAAgB,CAAE,GAAG,MAAMb,YAAY,CAACc,gBAAgB,CAAC,EAAE,CAAC;QACpE,OAAO,6CAA2B,EAACD,gBAAgB,CAAC;MACtD;;GAEH;AACH;AA/BAE","names":["setupMintExtension","base","rpc","queryService","query_1","mint","params","Params","blocksPerYear","goalBonded","inflationMin","inflationMax","inflationRateChange","mintDenom","inflation","Inflation","annualProvisions","AnnualProvisions","exports"],"sources":["../../../src/modules/mint/queries.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}