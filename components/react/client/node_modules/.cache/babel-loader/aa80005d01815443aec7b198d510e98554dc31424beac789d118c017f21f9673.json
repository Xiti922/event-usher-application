{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQuerySifchainLiquidityAPY = void 0;\nconst common_1 = require(\"../../../common\");\nconst axios_1 = __importDefault(require(\"axios\"));\nconst mobx_1 = require(\"mobx\");\nclass ObservableQuerySifchainLiquidityAPY extends common_1.ObservableQuery {\n  constructor(kvStore, chainId) {\n    const instance = axios_1.default.create({\n      baseURL: \"https://data.sifchain.finance/\"\n    });\n    super(kvStore, instance, `beta/validator/stakingRewards`);\n    this.chainId = chainId;\n    mobx_1.makeObservable(this);\n  }\n  canFetch() {\n    return this.chainId.startsWith(\"sifchain\");\n  }\n  get liquidityAPY() {\n    if (this.response) {\n      return Number(this.response.data.rate) * 100;\n    }\n    return 0;\n  }\n}\n__decorate([mobx_1.computed], ObservableQuerySifchainLiquidityAPY.prototype, \"liquidityAPY\", null);\nexports.ObservableQuerySifchainLiquidityAPY = ObservableQuerySifchainLiquidityAPY;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAIA,MAAaA,mCAAoC,SAAQC,wBAA2C;EAGlGC,YAAYC,OAAgB,EAAEC,OAAe;IAC3C,MAAMC,QAAQ,GAAGC,eAAK,CAACC,MAAM,CAAC;MAC5BC,OAAO,EAAE;KACV,CAAC;IAEF,KAAK,CAACL,OAAO,EAAEE,QAAQ,EAAE,+BAA+B,CAAC;IAEzD,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtBK,qBAAc,CAAC,IAAI,CAAC;EACtB;EAEUC,QAAQ;IAChB,OAAO,IAAI,CAACN,OAAO,CAACO,UAAU,CAAC,UAAU,CAAC;EAC5C;EAGA,IAAIC,YAAY;IACd,IAAI,IAAI,CAACC,QAAQ,EAAE;MACjB,OAAOC,MAAM,CAAC,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC,GAAG,GAAG;;IAG9C,OAAO,CAAC;EACV;;AANAC,YADCR,eAAQ,uEAOR;AAzBHS","names":["ObservableQuerySifchainLiquidityAPY","common_1","constructor","kvStore","chainId","instance","axios_1","create","baseURL","mobx_1","canFetch","startsWith","liquidityAPY","response","Number","data","rate","__decorate","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmos/supply/sifchain.ts"],"sourcesContent":["import { ObservableQuery } from \"../../../common\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport Axios from \"axios\";\nimport { computed, makeObservable } from \"mobx\";\n\nexport type SifchainLiquidityAPYResult = { rate: number };\n\nexport class ObservableQuerySifchainLiquidityAPY extends ObservableQuery<SifchainLiquidityAPYResult> {\n  protected readonly chainId: string;\n\n  constructor(kvStore: KVStore, chainId: string) {\n    const instance = Axios.create({\n      baseURL: \"https://data.sifchain.finance/\",\n    });\n\n    super(kvStore, instance, `beta/validator/stakingRewards`);\n\n    this.chainId = chainId;\n    makeObservable(this);\n  }\n\n  protected canFetch(): boolean {\n    return this.chainId.startsWith(\"sifchain\");\n  }\n\n  @computed\n  get liquidityAPY(): number {\n    if (this.response) {\n      return Number(this.response.data.rate) * 100;\n    }\n\n    return 0;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}