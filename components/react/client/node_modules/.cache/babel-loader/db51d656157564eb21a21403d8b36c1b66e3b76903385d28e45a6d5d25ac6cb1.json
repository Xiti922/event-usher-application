{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQueryOsmosisEpochs = exports.ObservableQueryOsmosisEpochsInner = void 0;\nconst chain_query_1 = require(\"../../../chain-query\");\nconst mobx_1 = require(\"mobx\");\nclass ObservableQueryOsmosisEpochsInner {\n  constructor(identifier, queryEpochs) {\n    this.identifier = identifier;\n    this.queryEpochs = queryEpochs;\n  }\n  get epoch() {\n    var _a;\n    return (_a = this.queryEpochs.response) === null || _a === void 0 ? void 0 : _a.data.epochs.find(epoch => epoch.identifier === this.identifier);\n  }\n  get duration() {\n    if (!this.epoch) {\n      return 0;\n    }\n    // Actually, the date type of golang protobuf is returned by the unit of seconds.\n    return parseInt(this.epoch.duration.replace(\"s\", \"\"));\n  }\n  get startTime() {\n    if (!this.epoch) {\n      return new Date(0);\n    }\n    return new Date(this.epoch.current_epoch_start_time);\n  }\n  get endTime() {\n    const startTime = this.startTime;\n    if (!this.duration) {\n      return startTime;\n    }\n    return new Date(startTime.getTime() + this.duration * 1000);\n  }\n}\n__decorate([mobx_1.computed], ObservableQueryOsmosisEpochsInner.prototype, \"epoch\", null);\n__decorate([mobx_1.computed], ObservableQueryOsmosisEpochsInner.prototype, \"duration\", null);\n__decorate([mobx_1.computed], ObservableQueryOsmosisEpochsInner.prototype, \"startTime\", null);\n__decorate([mobx_1.computed], ObservableQueryOsmosisEpochsInner.prototype, \"endTime\", null);\nexports.ObservableQueryOsmosisEpochsInner = ObservableQueryOsmosisEpochsInner;\nclass ObservableQueryOsmosisEpochs extends chain_query_1.ObservableChainQuery {\n  constructor(kvStore, chainId, chainGetter) {\n    super(kvStore, chainId, chainGetter, \"/osmosis/epochs/v1beta1/epochs\");\n    this.map = new Map();\n  }\n  getEpoch(identifier) {\n    if (!this.map.has(identifier)) {\n      const inner = new ObservableQueryOsmosisEpochsInner(identifier, this);\n      this.map.set(identifier, inner);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.map.get(identifier);\n  }\n}\n__decorate([mobx_1.observable.shallow], ObservableQueryOsmosisEpochs.prototype, \"map\", void 0);\nexports.ObservableQueryOsmosisEpochs = ObservableQueryOsmosisEpochs;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAEA;AAEA;AAEA,MAAaA,iCAAiC;EAC5CC,YACqBC,UAAkB,EAClBC,WAAyC;IADzC,eAAU,GAAVD,UAAU;IACV,gBAAW,GAAXC,WAAW;EAC7B;EAGH,IAAIC,KAAK;;IACP,aAAO,IAAI,CAACD,WAAW,CAACE,QAAQ,0CAAEC,IAAI,CAACC,MAAM,CAACC,IAAI,CAC/CJ,KAAK,IAAKA,KAAK,CAACF,UAAU,KAAK,IAAI,CAACA,UAAU;EAEnD;EAGA,IAAIO,QAAQ;IACV,IAAI,CAAC,IAAI,CAACL,KAAK,EAAE;MACf,OAAO,CAAC;;IAGV;IACA,OAAOM,QAAQ,CAAC,IAAI,CAACN,KAAK,CAACK,QAAQ,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;EACvD;EAGA,IAAIC,SAAS;IACX,IAAI,CAAC,IAAI,CAACR,KAAK,EAAE;MACf,OAAO,IAAIS,IAAI,CAAC,CAAC,CAAC;;IAGpB,OAAO,IAAIA,IAAI,CAAC,IAAI,CAACT,KAAK,CAACU,wBAAwB,CAAC;EACtD;EAGA,IAAIC,OAAO;IACT,MAAMH,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAE;MAClB,OAAOG,SAAS;;IAGlB,OAAO,IAAIC,IAAI,CAACD,SAAS,CAACI,OAAO,EAAE,GAAG,IAAI,CAACP,QAAQ,GAAG,IAAI,CAAC;EAC7D;;AAjCAQ,YADCC,eAAQ,8DAKR;AAGDD,YADCC,eAAQ,iEAQR;AAGDD,YADCC,eAAQ,kEAOR;AAGDD,YADCC,eAAQ,gEAQR;AAxCHC;AA2CA,MAAaC,4BAA6B,SAAQC,kCAA4B;EAI5EpB,YAAYqB,OAAgB,EAAEC,OAAe,EAAEC,WAAwB;IACrE,KAAK,CAACF,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAE,gCAAgC,CAAC;IAH9D,QAAG,GAAmD,IAAIC,GAAG,EAAE;EAIzE;EAEAC,QAAQ,CAACxB,UAAkB;IACzB,IAAI,CAAC,IAAI,CAACyB,GAAG,CAACC,GAAG,CAAC1B,UAAU,CAAC,EAAE;MAC7B,MAAM2B,KAAK,GAAG,IAAI7B,iCAAiC,CAACE,UAAU,EAAE,IAAI,CAAC;MACrE,IAAI,CAACyB,GAAG,CAACG,GAAG,CAAC5B,UAAU,EAAE2B,KAAK,CAAC;;IAGjC;IACA,OAAO,IAAI,CAACF,GAAG,CAACI,GAAG,CAAC7B,UAAU,CAAE;EAClC;;AAdAe,YADCC,iBAAU,CAACc,OAAO,yDACuD;AAF5Eb","names":["ObservableQueryOsmosisEpochsInner","constructor","identifier","queryEpochs","epoch","response","data","epochs","find","duration","parseInt","replace","startTime","Date","current_epoch_start_time","endTime","getTime","__decorate","mobx_1","exports","ObservableQueryOsmosisEpochs","chain_query_1","kvStore","chainId","chainGetter","Map","getEpoch","map","has","inner","set","get","shallow"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmos/supply/osmosis/epochs.ts"],"sourcesContent":["import { KVStore } from \"@keplr-wallet/common\";\nimport { ChainGetter } from \"../../../../common\";\nimport { ObservableChainQuery } from \"../../../chain-query\";\nimport { Epochs } from \"./types\";\nimport { computed, observable } from \"mobx\";\n\nexport class ObservableQueryOsmosisEpochsInner {\n  constructor(\n    protected readonly identifier: string,\n    protected readonly queryEpochs: ObservableQueryOsmosisEpochs\n  ) {}\n\n  @computed\n  get epoch(): Epochs[\"epochs\"][0] | undefined {\n    return this.queryEpochs.response?.data.epochs.find(\n      (epoch) => epoch.identifier === this.identifier\n    );\n  }\n\n  @computed\n  get duration(): number {\n    if (!this.epoch) {\n      return 0;\n    }\n\n    // Actually, the date type of golang protobuf is returned by the unit of seconds.\n    return parseInt(this.epoch.duration.replace(\"s\", \"\"));\n  }\n\n  @computed\n  get startTime(): Date {\n    if (!this.epoch) {\n      return new Date(0);\n    }\n\n    return new Date(this.epoch.current_epoch_start_time);\n  }\n\n  @computed\n  get endTime(): Date {\n    const startTime = this.startTime;\n    if (!this.duration) {\n      return startTime;\n    }\n\n    return new Date(startTime.getTime() + this.duration * 1000);\n  }\n}\n\nexport class ObservableQueryOsmosisEpochs extends ObservableChainQuery<Epochs> {\n  @observable.shallow\n  protected map: Map<string, ObservableQueryOsmosisEpochsInner> = new Map();\n\n  constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter) {\n    super(kvStore, chainId, chainGetter, \"/osmosis/epochs/v1beta1/epochs\");\n  }\n\n  getEpoch(identifier: string) {\n    if (!this.map.has(identifier)) {\n      const inner = new ObservableQueryOsmosisEpochsInner(identifier, this);\n      this.map.set(identifier, inner);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.map.get(identifier)!;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}