{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseCoins = exports.coins = exports.coin = void 0;\nconst math_1 = require(\"@cosmjs/math\");\n/** Creates a coin */\nfunction coin(amount, denom) {\n  return {\n    amount: new math_1.Uint53(amount).toString(),\n    denom: denom\n  };\n}\nexports.coin = coin;\n/** Creates a list of coins with one element */\nfunction coins(amount, denom) {\n  return [coin(amount, denom)];\n}\nexports.coins = coins;\n/**\n * Takes a coins list like \"819966000ucosm,700000000ustake\" and parses it\n */\nfunction parseCoins(input) {\n  return input.replace(/\\s/g, \"\").split(\",\").filter(Boolean).map(part => {\n    const match = part.match(/^([0-9]+)([a-zA-Z]+)/);\n    if (!match) throw new Error(\"Got an invalid coin string\");\n    return {\n      amount: math_1.Uint64.fromString(match[1]).toString(),\n      denom: match[2]\n    };\n  });\n}\nexports.parseCoins = parseCoins;","map":{"version":3,"mappings":";;;;;;AAAA;AAOA;AACA,SAAgBA,IAAI,CAACC,MAAc,EAAEC,KAAa;EAChD,OAAO;IAAED,MAAM,EAAE,IAAIE,aAAM,CAACF,MAAM,CAAC,CAACG,QAAQ,EAAE;IAAEF,KAAK,EAAEA;EAAK,CAAE;AAChE;AAFAG;AAIA;AACA,SAAgBC,KAAK,CAACL,MAAc,EAAEC,KAAa;EACjD,OAAO,CAACF,IAAI,CAACC,MAAM,EAAEC,KAAK,CAAC,CAAC;AAC9B;AAFAG;AAIA;;;AAGA,SAAgBE,UAAU,CAACC,KAAa;EACtC,OAAOA,KAAK,CACTC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAACC,OAAO,CAAC,CACfC,GAAG,CAAEC,IAAI,IAAI;IACZ,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAAC,sBAAsB,CAAC;IAChD,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IACzD,OAAO;MACLf,MAAM,EAAEE,aAAM,CAACc,UAAU,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,CAACX,QAAQ,EAAE;MAC9CF,KAAK,EAAEa,KAAK,CAAC,CAAC;KACf;EACH,CAAC,CAAC;AACN;AAbAV","names":["coin","amount","denom","math_1","toString","exports","coins","parseCoins","input","replace","split","filter","Boolean","map","part","match","Error","fromString"],"sources":["../src/coins.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}