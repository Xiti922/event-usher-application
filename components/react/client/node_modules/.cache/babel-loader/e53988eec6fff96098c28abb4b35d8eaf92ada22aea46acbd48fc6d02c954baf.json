{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../client/v1/client\");\nconst connection_1 = require(\"./connection\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseMsgConnectionOpenInit() {\n  return {\n    clientId: \"\",\n    counterparty: undefined,\n    version: undefined,\n    delayPeriod: long_1.default.UZERO,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenInit = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(32).uint64(message.delayPeriod);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      counterparty: isSet(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined,\n      version: isSet(object.version) ? connection_1.Version.fromJSON(object.version) : undefined,\n      delayPeriod: isSet(object.delayPeriod) ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseMsgConnectionOpenInit();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.signer = (_b = object.signer) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenInitResponse() {\n  return {};\n}\nexports.MsgConnectionOpenInitResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenInitResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTry() {\n  return {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    clientState: undefined,\n    counterparty: undefined,\n    delayPeriod: long_1.default.UZERO,\n    counterpartyVersions: [],\n    proofHeight: undefined,\n    proofInit: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenTry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.previousConnectionId !== \"\") {\n      writer.uint32(18).string(message.previousConnectionId);\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    for (const v of message.counterpartyVersions) {\n      connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(66).bytes(message.proofInit);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(74).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(82).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.previousConnectionId = reader.string();\n          break;\n        case 3:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 6:\n          message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofInit = reader.bytes();\n          break;\n        case 9:\n          message.proofClient = reader.bytes();\n          break;\n        case 10:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 11:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      previousConnectionId: isSet(object.previousConnectionId) ? String(object.previousConnectionId) : \"\",\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined,\n      counterparty: isSet(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined,\n      delayPeriod: isSet(object.delayPeriod) ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO,\n      counterpartyVersions: Array.isArray(object === null || object === void 0 ? void 0 : object.counterpartyVersions) ? object.counterpartyVersions.map(e => connection_1.Version.fromJSON(e)) : [],\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      proofInit: isSet(object.proofInit) ? bytesFromBase64(object.proofInit) : new Uint8Array(),\n      proofClient: isSet(object.proofClient) ? bytesFromBase64(object.proofClient) : new Uint8Array(),\n      proofConsensus: isSet(object.proofConsensus) ? bytesFromBase64(object.proofConsensus) : new Uint8Array(),\n      consensusHeight: isSet(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.previousConnectionId !== undefined && (obj.previousConnectionId = message.previousConnectionId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    if (message.counterpartyVersions) {\n      obj.counterpartyVersions = message.counterpartyVersions.map(e => e ? connection_1.Version.toJSON(e) : undefined);\n    } else {\n      obj.counterpartyVersions = [];\n    }\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofInit !== undefined && (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const message = createBaseMsgConnectionOpenTry();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.previousConnectionId = (_b = object.previousConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.counterpartyVersions = ((_c = object.counterpartyVersions) === null || _c === void 0 ? void 0 : _c.map(e => connection_1.Version.fromPartial(e))) || [];\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofInit = (_d = object.proofInit) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofClient = (_e = object.proofClient) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.proofConsensus = (_f = object.proofConsensus) !== null && _f !== void 0 ? _f : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_g = object.signer) !== null && _g !== void 0 ? _g : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTryResponse() {\n  return {};\n}\nexports.MsgConnectionOpenTryResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenTryResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAck() {\n  return {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    version: undefined,\n    clientState: undefined,\n    proofHeight: undefined,\n    proofTry: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenAck = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.counterpartyConnectionId !== \"\") {\n      writer.uint32(18).string(message.counterpartyConnectionId);\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(50).bytes(message.proofTry);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(58).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(66).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAck();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.counterpartyConnectionId = reader.string();\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.proofTry = reader.bytes();\n          break;\n        case 7:\n          message.proofClient = reader.bytes();\n          break;\n        case 8:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 9:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      counterpartyConnectionId: isSet(object.counterpartyConnectionId) ? String(object.counterpartyConnectionId) : \"\",\n      version: isSet(object.version) ? connection_1.Version.fromJSON(object.version) : undefined,\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined,\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      proofTry: isSet(object.proofTry) ? bytesFromBase64(object.proofTry) : new Uint8Array(),\n      proofClient: isSet(object.proofClient) ? bytesFromBase64(object.proofClient) : new Uint8Array(),\n      proofConsensus: isSet(object.proofConsensus) ? bytesFromBase64(object.proofConsensus) : new Uint8Array(),\n      consensusHeight: isSet(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.counterpartyConnectionId !== undefined && (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofTry !== undefined && (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    const message = createBaseMsgConnectionOpenAck();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterpartyConnectionId = (_b = object.counterpartyConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofTry = (_c = object.proofTry) !== null && _c !== void 0 ? _c : new Uint8Array();\n    message.proofClient = (_d = object.proofClient) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofConsensus = (_e = object.proofConsensus) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_f = object.signer) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAckResponse() {\n  return {};\n}\nexports.MsgConnectionOpenAckResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenAckResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirm() {\n  return {\n    connectionId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenConfirm = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(18).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.proofAck = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      proofAck: isSet(object.proofAck) ? bytesFromBase64(object.proofAck) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.proofAck !== undefined && (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseMsgConnectionOpenConfirm();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.proofAck = (_b = object.proofAck) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_c = object.signer) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirmResponse() {\n  return {};\n}\nexports.MsgConnectionOpenConfirmResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n    this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n    this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n    this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n  }\n  ConnectionOpenInit(request) {\n    const data = exports.MsgConnectionOpenInit.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n    return promise.then(data => exports.MsgConnectionOpenInitResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenTry(request) {\n    const data = exports.MsgConnectionOpenTry.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n    return promise.then(data => exports.MsgConnectionOpenTryResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenAck(request) {\n    const data = exports.MsgConnectionOpenAck.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n    return promise.then(data => exports.MsgConnectionOpenAckResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenConfirm(request) {\n    const data = exports.MsgConnectionOpenConfirm.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n    return promise.then(data => exports.MsgConnectionOpenConfirmResponse.decode(new minimal_1.default.Reader(data)));\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"mappings":"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","names":["exports","createBaseMsgConnectionOpenInit","clientId","counterparty","undefined","version","delayPeriod","long_1","UZERO","signer","encode","message","writer","minimal_1","Writer","create","uint32","string","connection_1","fork","ldelim","isZero","uint64","decode","input","length","reader","Reader","end","len","pos","tag","skipType","fromJSON","object","isSet","String","fromValue","toJSON","obj","toString","fromPartial","createBaseMsgConnectionOpenInitResponse","_","createBaseMsgConnectionOpenTry","previousConnectionId","clientState","counterpartyVersions","proofHeight","proofInit","Uint8Array","proofClient","proofConsensus","consensusHeight","any_1","v","client_1","bytes","push","Array","isArray","map","e","bytesFromBase64","base64FromBytes","createBaseMsgConnectionOpenTryResponse","createBaseMsgConnectionOpenAck","connectionId","counterpartyConnectionId","proofTry","createBaseMsgConnectionOpenAckResponse","createBaseMsgConnectionOpenConfirm","proofAck","createBaseMsgConnectionOpenConfirmResponse","MsgClientImpl","constructor","rpc","ConnectionOpenInit","bind","ConnectionOpenTry","ConnectionOpenAck","ConnectionOpenConfirm","request","data","finish","promise","then","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../../../src/ibc/core/connection/v1/tx.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}