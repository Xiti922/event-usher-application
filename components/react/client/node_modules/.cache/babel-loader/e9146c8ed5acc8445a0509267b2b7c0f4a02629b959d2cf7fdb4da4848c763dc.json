{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStakingAminoConverters = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = void 0;\nconst math_1 = require(\"@cosmjs/math\");\nconst proto_signing_1 = require(\"@cosmjs/proto-signing\");\nconst utils_1 = require(\"@cosmjs/utils\");\nfunction protoDecimalToJson(decimal) {\n  const parsed = math_1.Decimal.fromAtomics(decimal, 18);\n  const [whole, fractional] = parsed.toString().split(\".\");\n  return `${whole}.${fractional.padEnd(18, \"0\")}`;\n}\nfunction jsonDecimalToProto(decimal) {\n  const parsed = math_1.Decimal.fromUserInput(decimal, 18);\n  return parsed.atomics;\n}\nfunction isAminoMsgCreateValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgCreateValidator\";\n}\nexports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;\nfunction isAminoMsgEditValidator(msg) {\n  return msg.type === \"cosmos-sdk/MsgEditValidator\";\n}\nexports.isAminoMsgEditValidator = isAminoMsgEditValidator;\nfunction isAminoMsgDelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgDelegate\";\n}\nexports.isAminoMsgDelegate = isAminoMsgDelegate;\nfunction isAminoMsgBeginRedelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgBeginRedelegate\";\n}\nexports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;\nfunction isAminoMsgUndelegate(msg) {\n  return msg.type === \"cosmos-sdk/MsgUndelegate\";\n}\nexports.isAminoMsgUndelegate = isAminoMsgUndelegate;\nfunction createStakingAminoConverters(_prefix) {\n  return {\n    \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n      aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n      toAmino: _ref => {\n        let {\n          delegatorAddress,\n          validatorSrcAddress,\n          validatorDstAddress,\n          amount\n        } = _ref;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_src_address: validatorSrcAddress,\n          validator_dst_address: validatorDstAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          delegator_address,\n          validator_src_address,\n          validator_dst_address,\n          amount\n        } = _ref2;\n        return {\n          delegatorAddress: delegator_address,\n          validatorSrcAddress: validator_src_address,\n          validatorDstAddress: validator_dst_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n      aminoType: \"cosmos-sdk/MsgCreateValidator\",\n      toAmino: _ref3 => {\n        let {\n          description,\n          commission,\n          minSelfDelegation,\n          delegatorAddress,\n          validatorAddress,\n          pubkey,\n          value\n        } = _ref3;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        (0, utils_1.assertDefinedAndNotNull)(commission, \"missing commission\");\n        (0, utils_1.assertDefinedAndNotNull)(pubkey, \"missing pubkey\");\n        (0, utils_1.assertDefinedAndNotNull)(value, \"missing value\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission: {\n            rate: protoDecimalToJson(commission.rate),\n            max_rate: protoDecimalToJson(commission.maxRate),\n            max_change_rate: protoDecimalToJson(commission.maxChangeRate)\n          },\n          min_self_delegation: minSelfDelegation,\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          pubkey: (0, proto_signing_1.anyToSinglePubkey)(pubkey),\n          value: value\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          description,\n          commission,\n          min_self_delegation,\n          delegator_address,\n          validator_address,\n          pubkey,\n          value\n        } = _ref4;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commission: {\n            rate: jsonDecimalToProto(commission.rate),\n            maxRate: jsonDecimalToProto(commission.max_rate),\n            maxChangeRate: jsonDecimalToProto(commission.max_change_rate)\n          },\n          minSelfDelegation: min_self_delegation,\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          pubkey: (0, proto_signing_1.encodePubkey)(pubkey),\n          value: value\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgDelegate\": {\n      aminoType: \"cosmos-sdk/MsgDelegate\",\n      toAmino: _ref5 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref5;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref6 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref6;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n      aminoType: \"cosmos-sdk/MsgEditValidator\",\n      toAmino: _ref7 => {\n        let {\n          description,\n          commissionRate,\n          minSelfDelegation,\n          validatorAddress\n        } = _ref7;\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          // empty string in the protobuf document means \"do not change\"\n          commission_rate: commissionRate ? protoDecimalToJson(commissionRate) : undefined,\n          // empty string in the protobuf document means \"do not change\"\n          min_self_delegation: minSelfDelegation ? minSelfDelegation : undefined,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref8 => {\n        let {\n          description,\n          commission_rate,\n          min_self_delegation,\n          validator_address\n        } = _ref8;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          // empty string in the protobuf document means \"do not change\"\n          commissionRate: commission_rate ? jsonDecimalToProto(commission_rate) : \"\",\n          // empty string in the protobuf document means \"do not change\"\n          minSelfDelegation: min_self_delegation !== null && min_self_delegation !== void 0 ? min_self_delegation : \"\",\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n      aminoType: \"cosmos-sdk/MsgUndelegate\",\n      toAmino: _ref9 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref9;\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref10 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref10;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    }\n  };\n}\nexports.createStakingAminoConverters = createStakingAminoConverters;","map":{"version":3,"mappings":"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","names":["protoDecimalToJson","decimal","parsed","math_1","fromAtomics","whole","fractional","toString","split","padEnd","jsonDecimalToProto","fromUserInput","atomics","isAminoMsgCreateValidator","msg","type","exports","isAminoMsgEditValidator","isAminoMsgDelegate","isAminoMsgBeginRedelegate","isAminoMsgUndelegate","createStakingAminoConverters","_prefix","aminoType","toAmino","delegatorAddress","validatorSrcAddress","validatorDstAddress","amount","delegator_address","validator_src_address","validator_dst_address","fromAmino","description","commission","minSelfDelegation","validatorAddress","pubkey","value","moniker","identity","website","security_contact","securityContact","details","rate","max_rate","maxRate","max_change_rate","maxChangeRate","min_self_delegation","validator_address","commissionRate","commission_rate","undefined"],"sources":["../../../src/modules/staking/aminomessages.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}