import { ObservableQuery, QueryOptions } from "./query";
import { KVStore, MemoryKVStore } from "@keplr-wallet/common";
export declare class MockObservableQuery extends ObservableQuery<number> {
    constructor(kvStore: KVStore, port: number, options?: Partial<QueryOptions>, url?: string);
    changeURL(url: string): void;
}
export declare class MockOnStartObservableQuery extends ObservableQuery<number> {
    protected readonly onStartOptions: {
        readonly onStartDelay?: number;
        readonly onStartUrl?: string;
    };
    constructor(kvStore: KVStore, port: number, options?: Partial<QueryOptions>, url?: string, onStartOptions?: {
        readonly onStartDelay?: number;
        readonly onStartUrl?: string;
    });
    protected onStart(): Promise<void> | undefined;
    changeURL(url: string): void;
}
export declare class DelayMemoryKVStore extends MemoryKVStore {
    readonly delay: number;
    constructor(prefix: string, delay: number);
    get<T = unknown>(key: string): Promise<T | undefined>;
    set<T = unknown>(key: string, data: T | null): Promise<void>;
}
