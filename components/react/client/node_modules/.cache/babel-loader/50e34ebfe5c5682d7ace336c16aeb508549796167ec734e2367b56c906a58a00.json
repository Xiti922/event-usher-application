{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQuerySecretContractCodeHash = exports.ObservableQuerySecretContractCodeHashInner = void 0;\nconst chain_query_1 = require(\"../chain-query\");\nclass ObservableQuerySecretContractCodeHashInner extends chain_query_1.ObservableChainQuery {\n  constructor(kvStore, chainId, chainGetter, contractAddress) {\n    super(kvStore, chainId, chainGetter, `/wasm/contract/${contractAddress}/code-hash`);\n    this.contractAddress = contractAddress;\n  }\n  canFetch() {\n    return this.contractAddress.length > 0;\n  }\n}\nexports.ObservableQuerySecretContractCodeHashInner = ObservableQuerySecretContractCodeHashInner;\nclass ObservableQuerySecretContractCodeHash extends chain_query_1.ObservableChainQueryMap {\n  constructor(kvStore, chainId, chainGetter) {\n    super(kvStore, chainId, chainGetter, contractAddress => {\n      return new ObservableQuerySecretContractCodeHashInner(this.kvStore, this.chainId, this.chainGetter, contractAddress);\n    });\n    this.kvStore = kvStore;\n    this.chainId = chainId;\n    this.chainGetter = chainGetter;\n  }\n  getQueryContract(contractAddress) {\n    return this.get(contractAddress);\n  }\n}\nexports.ObservableQuerySecretContractCodeHash = ObservableQuerySecretContractCodeHash;","map":{"version":3,"mappings":";;;;;;AAEA;AAGA,MAAaA,0CAA2C,SAAQC,kCAA4C;EAC1GC,YACEC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,EACLC,eAAuB;IAE1C,KAAK,CACHH,OAAO,EACPC,OAAO,EACPC,WAAW,EACX,kBAAkBC,eAAe,YAAY,CAC9C;IAPkB,oBAAe,GAAfA,eAAe;EAQpC;EAEUC,QAAQ;IAChB,OAAO,IAAI,CAACD,eAAe,CAACE,MAAM,GAAG,CAAC;EACxC;;AAjBFC;AAoBA,MAAaC,qCAAsC,SAAQT,qCAA+C;EACxGC,YACqBC,OAAgB,EAChBC,OAAe,EACfC,WAAwB;IAE3C,KAAK,CAACF,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAGC,eAAuB,IAAI;MAC/D,OAAO,IAAIN,0CAA0C,CACnD,IAAI,CAACG,OAAO,EACZ,IAAI,CAACC,OAAO,EACZ,IAAI,CAACC,WAAW,EAChBC,eAAe,CAChB;IACH,CAAC,CAAC;IAXiB,YAAO,GAAPH,OAAO;IACP,YAAO,GAAPC,OAAO;IACP,gBAAW,GAAXC,WAAW;EAUhC;EAEAM,gBAAgB,CACdL,eAAuB;IAEvB,OAAO,IAAI,CAACM,GAAG,CACbN,eAAe,CAC8B;EACjD;;AAtBFG","names":["ObservableQuerySecretContractCodeHashInner","chain_query_1","constructor","kvStore","chainId","chainGetter","contractAddress","canFetch","length","exports","ObservableQuerySecretContractCodeHash","getQueryContract","get"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/secret-wasm/contract-hash.ts"],"sourcesContent":["import { SecretContractCodeHash } from \"./types\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport { ObservableChainQuery, ObservableChainQueryMap } from \"../chain-query\";\nimport { ChainGetter } from \"../../common\";\n\nexport class ObservableQuerySecretContractCodeHashInner extends ObservableChainQuery<SecretContractCodeHash> {\n  constructor(\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter,\n    protected readonly contractAddress: string\n  ) {\n    super(\n      kvStore,\n      chainId,\n      chainGetter,\n      `/wasm/contract/${contractAddress}/code-hash`\n    );\n  }\n\n  protected canFetch(): boolean {\n    return this.contractAddress.length > 0;\n  }\n}\n\nexport class ObservableQuerySecretContractCodeHash extends ObservableChainQueryMap<SecretContractCodeHash> {\n  constructor(\n    protected readonly kvStore: KVStore,\n    protected readonly chainId: string,\n    protected readonly chainGetter: ChainGetter\n  ) {\n    super(kvStore, chainId, chainGetter, (contractAddress: string) => {\n      return new ObservableQuerySecretContractCodeHashInner(\n        this.kvStore,\n        this.chainId,\n        this.chainGetter,\n        contractAddress\n      );\n    });\n  }\n\n  getQueryContract(\n    contractAddress: string\n  ): ObservableQuerySecretContractCodeHashInner {\n    return this.get(\n      contractAddress\n    ) as ObservableQuerySecretContractCodeHashInner;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}