{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemovePermissionOrigin = exports.AddPermissionOrigin = exports.GetOriginPermittedChainsMsg = exports.GetPermissionOriginsMsg = exports.EnableAccessMsg = void 0;\nconst router_1 = require(\"@keplr-wallet/router\");\nconst constants_1 = require(\"./constants\");\nclass EnableAccessMsg extends router_1.Message {\n  constructor(chainIds) {\n    super();\n    this.chainIds = chainIds;\n  }\n  static type() {\n    return \"enable-access\";\n  }\n  validateBasic() {\n    if (!this.chainIds || this.chainIds.length === 0) {\n      throw new router_1.KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n  }\n  route() {\n    return constants_1.ROUTE;\n  }\n  approveExternal() {\n    return true;\n  }\n  type() {\n    return EnableAccessMsg.type();\n  }\n}\nexports.EnableAccessMsg = EnableAccessMsg;\nclass GetPermissionOriginsMsg extends router_1.Message {\n  constructor(chainId, permissionType) {\n    super();\n    this.chainId = chainId;\n    this.permissionType = permissionType;\n  }\n  static type() {\n    return \"get-permission-origins\";\n  }\n  validateBasic() {\n    if (!this.chainId) {\n      throw new router_1.KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n    if (!this.permissionType) {\n      throw new router_1.KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n  }\n  route() {\n    return constants_1.ROUTE;\n  }\n  type() {\n    return GetPermissionOriginsMsg.type();\n  }\n}\nexports.GetPermissionOriginsMsg = GetPermissionOriginsMsg;\nclass GetOriginPermittedChainsMsg extends router_1.Message {\n  constructor(permissionOrigin, permissionType) {\n    super();\n    this.permissionOrigin = permissionOrigin;\n    this.permissionType = permissionType;\n  }\n  static type() {\n    return \"get-origin-permitted-chains\";\n  }\n  validateBasic() {\n    if (!this.permissionOrigin) {\n      throw new router_1.KeplrError(\"permission\", 101, \"origin not set\");\n    }\n    if (!this.permissionType) {\n      throw new router_1.KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n  }\n  route() {\n    return constants_1.ROUTE;\n  }\n  type() {\n    return GetOriginPermittedChainsMsg.type();\n  }\n}\nexports.GetOriginPermittedChainsMsg = GetOriginPermittedChainsMsg;\nclass AddPermissionOrigin extends router_1.Message {\n  constructor(chainId, permissionType, permissionOrigin) {\n    super();\n    this.chainId = chainId;\n    this.permissionType = permissionType;\n    this.permissionOrigin = permissionOrigin;\n  }\n  static type() {\n    return \"add-permission-origin\";\n  }\n  validateBasic() {\n    if (!this.chainId) {\n      throw new router_1.KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n    if (!this.permissionType) {\n      throw new router_1.KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n    if (!this.permissionOrigin) {\n      throw new router_1.KeplrError(\"permission\", 111, \"empty permission origin\");\n    }\n  }\n  route() {\n    return constants_1.ROUTE;\n  }\n  type() {\n    return AddPermissionOrigin.type();\n  }\n}\nexports.AddPermissionOrigin = AddPermissionOrigin;\nclass RemovePermissionOrigin extends router_1.Message {\n  constructor(chainId, permissionType, permissionOrigin) {\n    super();\n    this.chainId = chainId;\n    this.permissionType = permissionType;\n    this.permissionOrigin = permissionOrigin;\n  }\n  static type() {\n    return \"remove-permission-origin\";\n  }\n  validateBasic() {\n    if (!this.chainId) {\n      throw new router_1.KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n    if (!this.permissionType) {\n      throw new router_1.KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n    if (!this.permissionOrigin) {\n      throw new router_1.KeplrError(\"permission\", 111, \"empty permission origin\");\n    }\n  }\n  route() {\n    return constants_1.ROUTE;\n  }\n  type() {\n    return RemovePermissionOrigin.type();\n  }\n}\nexports.RemovePermissionOrigin = RemovePermissionOrigin;","map":{"version":3,"mappings":"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","names":["EnableAccessMsg","router_1","constructor","chainIds","type","validateBasic","length","route","constants_1","approveExternal","exports","GetPermissionOriginsMsg","chainId","permissionType","GetOriginPermittedChainsMsg","permissionOrigin","AddPermissionOrigin","RemovePermissionOrigin"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/permission/messages.ts"],"sourcesContent":["import { KeplrError, Message } from \"@keplr-wallet/router\";\nimport { ROUTE } from \"./constants\";\n\nexport class EnableAccessMsg extends Message<void> {\n  public static type() {\n    return \"enable-access\";\n  }\n\n  constructor(public readonly chainIds: string[]) {\n    super();\n  }\n\n  validateBasic(): void {\n    if (!this.chainIds || this.chainIds.length === 0) {\n      throw new KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n  }\n\n  route(): string {\n    return ROUTE;\n  }\n\n  approveExternal(): boolean {\n    return true;\n  }\n\n  type(): string {\n    return EnableAccessMsg.type();\n  }\n}\n\nexport class GetPermissionOriginsMsg extends Message<string[]> {\n  public static type() {\n    return \"get-permission-origins\";\n  }\n\n  constructor(\n    public readonly chainId: string,\n    public readonly permissionType: string\n  ) {\n    super();\n  }\n\n  validateBasic(): void {\n    if (!this.chainId) {\n      throw new KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n\n    if (!this.permissionType) {\n      throw new KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n  }\n\n  route(): string {\n    return ROUTE;\n  }\n\n  type(): string {\n    return GetPermissionOriginsMsg.type();\n  }\n}\n\nexport class GetOriginPermittedChainsMsg extends Message<string[]> {\n  public static type() {\n    return \"get-origin-permitted-chains\";\n  }\n\n  constructor(\n    public readonly permissionOrigin: string,\n    public readonly permissionType: string\n  ) {\n    super();\n  }\n\n  validateBasic(): void {\n    if (!this.permissionOrigin) {\n      throw new KeplrError(\"permission\", 101, \"origin not set\");\n    }\n\n    if (!this.permissionType) {\n      throw new KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n  }\n\n  route(): string {\n    return ROUTE;\n  }\n\n  type(): string {\n    return GetOriginPermittedChainsMsg.type();\n  }\n}\n\nexport class AddPermissionOrigin extends Message<void> {\n  public static type() {\n    return \"add-permission-origin\";\n  }\n\n  constructor(\n    public readonly chainId: string,\n    public readonly permissionType: string,\n    public readonly permissionOrigin: string\n  ) {\n    super();\n  }\n\n  validateBasic(): void {\n    if (!this.chainId) {\n      throw new KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n\n    if (!this.permissionType) {\n      throw new KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n\n    if (!this.permissionOrigin) {\n      throw new KeplrError(\"permission\", 111, \"empty permission origin\");\n    }\n  }\n\n  route(): string {\n    return ROUTE;\n  }\n\n  type(): string {\n    return AddPermissionOrigin.type();\n  }\n}\n\nexport class RemovePermissionOrigin extends Message<void> {\n  public static type() {\n    return \"remove-permission-origin\";\n  }\n\n  constructor(\n    public readonly chainId: string,\n    public readonly permissionType: string,\n    public readonly permissionOrigin: string\n  ) {\n    super();\n  }\n\n  validateBasic(): void {\n    if (!this.chainId) {\n      throw new KeplrError(\"permission\", 100, \"chain id not set\");\n    }\n\n    if (!this.permissionType) {\n      throw new KeplrError(\"permission\", 110, \"empty permission type\");\n    }\n\n    if (!this.permissionOrigin) {\n      throw new KeplrError(\"permission\", 111, \"empty permission origin\");\n    }\n  }\n\n  route(): string {\n    return ROUTE;\n  }\n\n  type(): string {\n    return RemovePermissionOrigin.type();\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}