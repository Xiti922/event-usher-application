{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHandler = void 0;\nconst router_1 = require(\"@keplr-wallet/router\");\nconst messages_1 = require(\"./messages\");\nconst getHandler = service => {\n  return (env, msg) => {\n    switch (msg.constructor) {\n      case messages_1.GetTokensMsg:\n        return handleGetTokensMsg(service)(env, msg);\n      case messages_1.SuggestTokenMsg:\n        return handleSuggestTokenMsg(service)(env, msg);\n      case messages_1.AddTokenMsg:\n        return handleAddTokenMsg(service)(env, msg);\n      case messages_1.RemoveTokenMsg:\n        return handleRemoveTokenMsg(service)(env, msg);\n      case messages_1.GetSecret20ViewingKey:\n        return handleGetSecret20ViewingKey(service)(env, msg);\n      default:\n        throw new router_1.KeplrError(\"tokens\", 120, \"Unknown msg type\");\n    }\n  };\n};\nexports.getHandler = getHandler;\nconst handleGetTokensMsg = service => {\n  return (_, msg) => __awaiter(void 0, void 0, void 0, function* () {\n    return yield service.getTokens(msg.chainId);\n  });\n};\nconst handleSuggestTokenMsg = service => {\n  return (env, msg) => __awaiter(void 0, void 0, void 0, function* () {\n    yield service.permissionService.checkOrGrantBasicAccessPermission(env, msg.chainId, msg.origin);\n    yield service.suggestToken(env, msg.chainId, msg.contractAddress, msg.viewingKey);\n  });\n};\nconst handleAddTokenMsg = service => {\n  return (_, msg) => __awaiter(void 0, void 0, void 0, function* () {\n    yield service.addToken(msg.chainId, msg.currency);\n  });\n};\nconst handleRemoveTokenMsg = service => {\n  return (_, msg) => __awaiter(void 0, void 0, void 0, function* () {\n    yield service.removeToken(msg.chainId, msg.currency);\n  });\n};\nconst handleGetSecret20ViewingKey = service => {\n  return (env, msg) => __awaiter(void 0, void 0, void 0, function* () {\n    yield service.permissionService.checkOrGrantBasicAccessPermission(env, msg.chainId, msg.origin);\n    /*\n    await service.checkOrGrantSecret20ViewingKeyPermission(\n      env,\n      msg.chainId,\n      msg.contractAddress,\n      msg.origin\n    );\n     */\n    return yield service.getSecret20ViewingKey(msg.chainId, msg.contractAddress);\n  });\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAQA;AAQO,MAAMA,UAAU,GAAyCC,OAAO,IAAI;EACzE,OAAO,CAACC,GAAQ,EAAEC,GAAqB,KAAI;IACzC,QAAQA,GAAG,CAACC,WAAW;MACrB,KAAKC,uBAAY;QACf,OAAOC,kBAAkB,CAACL,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAmB,CAAC;MAC9D,KAAKE,0BAAe;QAClB,OAAOE,qBAAqB,CAACN,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAsB,CAAC;MACpE,KAAKE,sBAAW;QACd,OAAOG,iBAAiB,CAACP,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAkB,CAAC;MAC5D,KAAKE,yBAAc;QACjB,OAAOI,oBAAoB,CAACR,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAqB,CAAC;MAClE,KAAKE,gCAAqB;QACxB,OAAOK,2BAA2B,CAACT,OAAO,CAAC,CACzCC,GAAG,EACHC,GAA4B,CAC7B;MACH;QACE,MAAM,IAAIQ,mBAAU,CAAC,QAAQ,EAAE,GAAG,EAAE,kBAAkB,CAAC;IAAC;EAE9D,CAAC;AACH,CAAC;AApBYC,kBAAU;AAsBvB,MAAMN,kBAAkB,GAEcL,OAAO,IAAI;EAC/C,OAAO,CAAOY,CAAC,EAAEV,GAAG,KAAIW;IACtB,OAAO,MAAMb,OAAO,CAACc,SAAS,CAACZ,GAAG,CAACa,OAAO,CAAC;EAC7C,CAAC;AACH,CAAC;AAED,MAAMT,qBAAqB,GAEcN,OAAO,IAAI;EAClD,OAAO,CAAOC,GAAG,EAAEC,GAAG,KAAIW;IACxB,MAAMb,OAAO,CAACgB,iBAAiB,CAACC,iCAAiC,CAC/DhB,GAAG,EACHC,GAAG,CAACa,OAAO,EACXb,GAAG,CAACgB,MAAM,CACX;IAED,MAAMlB,OAAO,CAACmB,YAAY,CACxBlB,GAAG,EACHC,GAAG,CAACa,OAAO,EACXb,GAAG,CAACkB,eAAe,EACnBlB,GAAG,CAACmB,UAAU,CACf;EACH,CAAC;AACH,CAAC;AAED,MAAMd,iBAAiB,GAEcP,OAAO,IAAI;EAC9C,OAAO,CAAOY,CAAC,EAAEV,GAAG,KAAIW;IACtB,MAAMb,OAAO,CAACsB,QAAQ,CAACpB,GAAG,CAACa,OAAO,EAAEb,GAAG,CAACqB,QAAQ,CAAC;EACnD,CAAC;AACH,CAAC;AAED,MAAMf,oBAAoB,GAEcR,OAAO,IAAI;EACjD,OAAO,CAAOY,CAAC,EAAEV,GAAG,KAAIW;IACtB,MAAMb,OAAO,CAACwB,WAAW,CAACtB,GAAG,CAACa,OAAO,EAAEb,GAAG,CAACqB,QAAQ,CAAC;EACtD,CAAC;AACH,CAAC;AAED,MAAMd,2BAA2B,GAEcT,OAAO,IAAI;EACxD,OAAO,CAAOC,GAAG,EAAEC,GAAG,KAAIW;IACxB,MAAMb,OAAO,CAACgB,iBAAiB,CAACC,iCAAiC,CAC/DhB,GAAG,EACHC,GAAG,CAACa,OAAO,EACXb,GAAG,CAACgB,MAAM,CACX;IAED;;;;;;;;IASA,OAAO,MAAMlB,OAAO,CAACyB,qBAAqB,CACxCvB,GAAG,CAACa,OAAO,EACXb,GAAG,CAACkB,eAAe,CACpB;EACH,CAAC;AACH,CAAC","names":["getHandler","service","env","msg","constructor","messages_1","handleGetTokensMsg","handleSuggestTokenMsg","handleAddTokenMsg","handleRemoveTokenMsg","handleGetSecret20ViewingKey","router_1","exports","_","__awaiter","getTokens","chainId","permissionService","checkOrGrantBasicAccessPermission","origin","suggestToken","contractAddress","viewingKey","addToken","currency","removeToken","getSecret20ViewingKey"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/tokens/handler.ts"],"sourcesContent":["import {\n  Env,\n  Handler,\n  InternalHandler,\n  KeplrError,\n  Message,\n} from \"@keplr-wallet/router\";\nimport { TokensService } from \"./service\";\nimport {\n  AddTokenMsg,\n  GetSecret20ViewingKey,\n  GetTokensMsg,\n  RemoveTokenMsg,\n  SuggestTokenMsg,\n} from \"./messages\";\n\nexport const getHandler: (service: TokensService) => Handler = (service) => {\n  return (env: Env, msg: Message<unknown>) => {\n    switch (msg.constructor) {\n      case GetTokensMsg:\n        return handleGetTokensMsg(service)(env, msg as GetTokensMsg);\n      case SuggestTokenMsg:\n        return handleSuggestTokenMsg(service)(env, msg as SuggestTokenMsg);\n      case AddTokenMsg:\n        return handleAddTokenMsg(service)(env, msg as AddTokenMsg);\n      case RemoveTokenMsg:\n        return handleRemoveTokenMsg(service)(env, msg as RemoveTokenMsg);\n      case GetSecret20ViewingKey:\n        return handleGetSecret20ViewingKey(service)(\n          env,\n          msg as GetSecret20ViewingKey\n        );\n      default:\n        throw new KeplrError(\"tokens\", 120, \"Unknown msg type\");\n    }\n  };\n};\n\nconst handleGetTokensMsg: (\n  service: TokensService\n) => InternalHandler<GetTokensMsg> = (service) => {\n  return async (_, msg) => {\n    return await service.getTokens(msg.chainId);\n  };\n};\n\nconst handleSuggestTokenMsg: (\n  service: TokensService\n) => InternalHandler<SuggestTokenMsg> = (service) => {\n  return async (env, msg) => {\n    await service.permissionService.checkOrGrantBasicAccessPermission(\n      env,\n      msg.chainId,\n      msg.origin\n    );\n\n    await service.suggestToken(\n      env,\n      msg.chainId,\n      msg.contractAddress,\n      msg.viewingKey\n    );\n  };\n};\n\nconst handleAddTokenMsg: (\n  service: TokensService\n) => InternalHandler<AddTokenMsg> = (service) => {\n  return async (_, msg) => {\n    await service.addToken(msg.chainId, msg.currency);\n  };\n};\n\nconst handleRemoveTokenMsg: (\n  service: TokensService\n) => InternalHandler<RemoveTokenMsg> = (service) => {\n  return async (_, msg) => {\n    await service.removeToken(msg.chainId, msg.currency);\n  };\n};\n\nconst handleGetSecret20ViewingKey: (\n  service: TokensService\n) => InternalHandler<GetSecret20ViewingKey> = (service) => {\n  return async (env, msg) => {\n    await service.permissionService.checkOrGrantBasicAccessPermission(\n      env,\n      msg.chainId,\n      msg.origin\n    );\n\n    /*\n    await service.checkOrGrantSecret20ViewingKeyPermission(\n      env,\n      msg.chainId,\n      msg.contractAddress,\n      msg.origin\n    );\n     */\n\n    return await service.getSecret20ViewingKey(\n      msg.chainId,\n      msg.contractAddress\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}