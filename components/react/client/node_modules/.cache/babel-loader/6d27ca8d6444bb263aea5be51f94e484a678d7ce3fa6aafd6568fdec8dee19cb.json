{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQueryStakingParams = void 0;\nconst chain_query_1 = require(\"../../chain-query\");\nconst mobx_1 = require(\"mobx\");\nclass ObservableQueryStakingParams extends chain_query_1.ObservableChainQuery {\n  constructor(kvStore, chainId, chainGetter) {\n    super(kvStore, chainId, chainGetter, \"/cosmos/staking/v1beta1/params\");\n    mobx_1.makeObservable(this);\n  }\n  get unbondingTimeSec() {\n    if (!this.response) {\n      return 0;\n    }\n    return parseInt(this.response.data.params.unbonding_time.replace(\"s\", \"\"));\n  }\n  get maxValidators() {\n    var _a, _b;\n    return (_b = (_a = this.response) === null || _a === void 0 ? void 0 : _a.data.params.max_validators) !== null && _b !== void 0 ? _b : 0;\n  }\n  get maxEntries() {\n    var _a, _b;\n    return (_b = (_a = this.response) === null || _a === void 0 ? void 0 : _a.data.params.max_entries) !== null && _b !== void 0 ? _b : 0;\n  }\n  get historicalEntries() {\n    var _a, _b;\n    return (_b = (_a = this.response) === null || _a === void 0 ? void 0 : _a.data.params.historical_entries) !== null && _b !== void 0 ? _b : 0;\n  }\n  get bondDenom() {\n    var _a, _b;\n    return (_b = (_a = this.response) === null || _a === void 0 ? void 0 : _a.data.params.bond_denom) !== null && _b !== void 0 ? _b : \"\";\n  }\n}\n__decorate([mobx_1.computed], ObservableQueryStakingParams.prototype, \"unbondingTimeSec\", null);\nexports.ObservableQueryStakingParams = ObservableQueryStakingParams;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;AAIA;AAEA,MAAaA,4BAA6B,SAAQC,kCAAmC;EACnFC,YAAYC,OAAgB,EAAEC,OAAe,EAAEC,WAAwB;IACrE,KAAK,CAACF,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAE,gCAAgC,CAAC;IAEtEC,qBAAc,CAAC,IAAI,CAAC;EACtB;EAGA,IAAIC,gBAAgB;IAClB,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAClB,OAAO,CAAC;;IAGV,OAAOC,QAAQ,CAAC,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;EAC5E;EAEA,IAAIC,aAAa;;IACf,mBAAO,IAAI,CAACN,QAAQ,0CAAEE,IAAI,CAACC,MAAM,CAACI,cAAc,mCAAI,CAAC;EACvD;EAEA,IAAIC,UAAU;;IACZ,mBAAO,IAAI,CAACR,QAAQ,0CAAEE,IAAI,CAACC,MAAM,CAACM,WAAW,mCAAI,CAAC;EACpD;EAEA,IAAIC,iBAAiB;;IACnB,mBAAO,IAAI,CAACV,QAAQ,0CAAEE,IAAI,CAACC,MAAM,CAACQ,kBAAkB,mCAAI,CAAC;EAC3D;EAEA,IAAIC,SAAS;;IACX,mBAAO,IAAI,CAACZ,QAAQ,0CAAEE,IAAI,CAACC,MAAM,CAACU,UAAU,mCAAI,EAAE;EACpD;;AAtBAC,YADChB,eAAQ,oEAOR;AAdHiB","names":["ObservableQueryStakingParams","chain_query_1","constructor","kvStore","chainId","chainGetter","mobx_1","unbondingTimeSec","response","parseInt","data","params","unbonding_time","replace","maxValidators","max_validators","maxEntries","max_entries","historicalEntries","historical_entries","bondDenom","bond_denom","__decorate","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmos/staking/params.ts"],"sourcesContent":["import { ObservableChainQuery } from \"../../chain-query\";\nimport { StakingParams } from \"./types\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport { ChainGetter } from \"../../../common\";\nimport { computed, makeObservable } from \"mobx\";\n\nexport class ObservableQueryStakingParams extends ObservableChainQuery<StakingParams> {\n  constructor(kvStore: KVStore, chainId: string, chainGetter: ChainGetter) {\n    super(kvStore, chainId, chainGetter, \"/cosmos/staking/v1beta1/params\");\n\n    makeObservable(this);\n  }\n\n  @computed\n  get unbondingTimeSec(): number {\n    if (!this.response) {\n      return 0;\n    }\n\n    return parseInt(this.response.data.params.unbonding_time.replace(\"s\", \"\"));\n  }\n\n  get maxValidators(): number {\n    return this.response?.data.params.max_validators ?? 0;\n  }\n\n  get maxEntries(): number {\n    return this.response?.data.params.max_entries ?? 0;\n  }\n\n  get historicalEntries(): number {\n    return this.response?.data.params.historical_entries ?? 0;\n  }\n\n  get bondDenom(): string {\n    return this.response?.data.params.bond_denom ?? \"\";\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}