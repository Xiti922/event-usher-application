{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst aes_1 = require(\"./polyfill/aes\");\nconst aes_ctr_1 = require(\"./polyfill/aes_ctr\");\n/**\n * Pure JavaScript cryptography implementations\n *\n * WARNING: Not constant time! May leak keys or have other security issues.\n */\nclass PolyfillCryptoProvider {\n  constructor() {\n    // This class doesn't do anything, it just signals that polyfill impls should be used\n  }\n  importBlockCipherKey(keyData) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new aes_1.default(keyData);\n    });\n  }\n  importCTRKey(keyData) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new aes_ctr_1.default(new aes_1.default(keyData));\n    });\n  }\n}\nexports.PolyfillCryptoProvider = PolyfillCryptoProvider;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","aes_1","require","aes_ctr_1","PolyfillCryptoProvider","constructor","importBlockCipherKey","keyData","default","importCTRKey"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/miscreant/release/providers/polyfill.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aes_1 = require(\"./polyfill/aes\");\nconst aes_ctr_1 = require(\"./polyfill/aes_ctr\");\n/**\n * Pure JavaScript cryptography implementations\n *\n * WARNING: Not constant time! May leak keys or have other security issues.\n */\nclass PolyfillCryptoProvider {\n    constructor() {\n        // This class doesn't do anything, it just signals that polyfill impls should be used\n    }\n    importBlockCipherKey(keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new aes_1.default(keyData);\n        });\n    }\n    importCTRKey(keyData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new aes_ctr_1.default(new aes_1.default(keyData));\n        });\n    }\n}\nexports.PolyfillCryptoProvider = PolyfillCryptoProvider;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,OAAO,KAAKD,CAAC,KAAKA,CAAC,GAAGE,OAAO,CAAC,EAAE,UAAUC,OAAO,EAAEC,MAAM,EAAE;IACvD,SAASC,SAAS,CAACC,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAACO,IAAI,CAACF,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQ,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAAC,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAI,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC,GAAG,IAAIN,CAAC,CAAC,UAAUG,OAAO,EAAE;QAAEA,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC;MAAE,CAAC,CAAC,CAACO,IAAI,CAACR,SAAS,EAAEK,QAAQ,CAAC;IAAE;IAC9IH,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACa,KAAK,CAAChB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAES,IAAI,EAAE,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACDO,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEX,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMY,KAAK,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACvC,MAAMC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA,MAAME,sBAAsB,CAAC;EACzBC,WAAW,GAAG;IACV;EAAA;EAEJC,oBAAoB,CAACC,OAAO,EAAE;IAC1B,OAAO3B,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,OAAO,IAAIqB,KAAK,CAACO,OAAO,CAACD,OAAO,CAAC;IACrC,CAAC,CAAC;EACN;EACAE,YAAY,CAACF,OAAO,EAAE;IAClB,OAAO3B,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,OAAO,IAAIuB,SAAS,CAACK,OAAO,CAAC,IAAIP,KAAK,CAACO,OAAO,CAACD,OAAO,CAAC,CAAC;IAC5D,CAAC,CAAC;EACN;AACJ;AACAP,OAAO,CAACI,sBAAsB,GAAGA,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}