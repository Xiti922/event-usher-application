{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexedDBKVStore = void 0;\nclass IndexedDBKVStore {\n  constructor(_prefix) {\n    this._prefix = _prefix;\n  }\n  get(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const tx = (yield this.getDB()).transaction([this.prefix()], \"readonly\");\n      const store = tx.objectStore(this.prefix());\n      return new Promise((resolve, reject) => {\n        const request = store.get(key);\n        request.onerror = event => {\n          event.stopPropagation();\n          reject(event.target);\n        };\n        request.onsuccess = () => {\n          if (!request.result) {\n            resolve(undefined);\n          } else {\n            resolve(request.result.data);\n          }\n        };\n      });\n    });\n  }\n  set(key, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (data === null) {\n        const tx = (yield this.getDB()).transaction([this.prefix()], \"readwrite\");\n        const store = tx.objectStore(this.prefix());\n        return new Promise((resolve, reject) => {\n          const request = store.delete(key);\n          request.onerror = event => {\n            event.stopPropagation();\n            reject(event.target);\n          };\n          request.onsuccess = () => {\n            resolve();\n          };\n        });\n      } else {\n        const tx = (yield this.getDB()).transaction([this.prefix()], \"readwrite\");\n        const store = tx.objectStore(this.prefix());\n        return new Promise((resolve, reject) => {\n          const request = store.put({\n            key,\n            data\n          });\n          request.onerror = event => {\n            event.stopPropagation();\n            reject(event.target);\n          };\n          request.onsuccess = () => {\n            resolve();\n          };\n        });\n      }\n    });\n  }\n  prefix() {\n    return this._prefix;\n  }\n  getDB() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.cachedDB) {\n        return this.cachedDB;\n      }\n      return new Promise((resolve, reject) => {\n        const request = window.indexedDB.open(this.prefix());\n        request.onerror = event => {\n          event.stopPropagation();\n          reject(event.target);\n        };\n        request.onupgradeneeded = event => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          const db = event.target.result;\n          db.createObjectStore(this.prefix(), {\n            keyPath: \"key\"\n          });\n        };\n        request.onsuccess = () => {\n          this.cachedDB = request.result;\n          resolve(request.result);\n        };\n      });\n    });\n  }\n}\nexports.IndexedDBKVStore = IndexedDBKVStore;","map":{"version":3,"mappings":"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","names":["IndexedDBKVStore","constructor","_prefix","get","key","tx","getDB","transaction","prefix","store","objectStore","Promise","resolve","reject","request","onerror","event","stopPropagation","target","onsuccess","result","undefined","data","set","delete","put","cachedDB","window","indexedDB","open","onupgradeneeded","db","createObjectStore","keyPath","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/node_modules/@keplr-wallet/common/src/kv-store/indexed-db.ts"],"sourcesContent":["import { KVStore } from \"./interface\";\n\nexport class IndexedDBKVStore implements KVStore {\n  protected cachedDB?: IDBDatabase;\n\n  constructor(protected readonly _prefix: string) {}\n\n  async get<T = unknown>(key: string): Promise<T | undefined> {\n    const tx = (await this.getDB()).transaction([this.prefix()], \"readonly\");\n    const store = tx.objectStore(this.prefix());\n\n    return new Promise((resolve, reject) => {\n      const request = store.get(key);\n      request.onerror = (event) => {\n        event.stopPropagation();\n\n        reject(event.target);\n      };\n      request.onsuccess = () => {\n        if (!request.result) {\n          resolve(undefined);\n        } else {\n          resolve(request.result.data);\n        }\n      };\n    });\n  }\n\n  async set<T = unknown>(key: string, data: T | null): Promise<void> {\n    if (data === null) {\n      const tx = (await this.getDB()).transaction([this.prefix()], \"readwrite\");\n      const store = tx.objectStore(this.prefix());\n\n      return new Promise((resolve, reject) => {\n        const request = store.delete(key);\n        request.onerror = (event) => {\n          event.stopPropagation();\n\n          reject(event.target);\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      });\n    } else {\n      const tx = (await this.getDB()).transaction([this.prefix()], \"readwrite\");\n      const store = tx.objectStore(this.prefix());\n\n      return new Promise((resolve, reject) => {\n        const request = store.put({\n          key,\n          data,\n        });\n        request.onerror = (event) => {\n          event.stopPropagation();\n\n          reject(event.target);\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      });\n    }\n  }\n\n  prefix(): string {\n    return this._prefix;\n  }\n\n  protected async getDB(): Promise<IDBDatabase> {\n    if (this.cachedDB) {\n      return this.cachedDB;\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open(this.prefix());\n      request.onerror = (event) => {\n        event.stopPropagation();\n        reject(event.target);\n      };\n\n      request.onupgradeneeded = (event) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const db = event.target.result;\n\n        db.createObjectStore(this.prefix(), { keyPath: \"key\" });\n      };\n\n      request.onsuccess = () => {\n        this.cachedDB = request.result;\n        resolve(request.result);\n      };\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}