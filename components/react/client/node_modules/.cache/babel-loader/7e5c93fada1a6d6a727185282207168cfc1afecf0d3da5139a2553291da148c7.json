{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseDomainUntilSecondLevel = void 0;\nfunction parseDomainUntilSecondLevel(param) {\n  let domain = param;\n  if (domain.match(/^[a-zA-Z0-9-]+:\\/\\/.+$/)) {\n    domain = domain.replace(/^[a-zA-Z0-9-]+:\\/\\//, \"\");\n  }\n  const slash = domain.indexOf(\"/\");\n  if (slash >= 0) {\n    domain = domain.slice(0, slash);\n  }\n  const qMark = domain.indexOf(\"?\");\n  if (qMark >= 0) {\n    domain = domain.slice(0, qMark);\n  }\n  const split = domain.split(\".\").map(str => str.trim()).filter(str => str.length > 0);\n  if (split.length < 2) {\n    throw new Error(`Invalid domain: ${param}`);\n  }\n  return split[split.length - 2] + \".\" + split[split.length - 1];\n}\nexports.parseDomainUntilSecondLevel = parseDomainUntilSecondLevel;","map":{"version":3,"mappings":";;;;;;AAAA,SAAgBA,2BAA2B,CAACC,KAAa;EACvD,IAAIC,MAAM,GAAGD,KAAK;EAElB,IAAIC,MAAM,CAACC,KAAK,CAAC,wBAAwB,CAAC,EAAE;IAC1CD,MAAM,GAAGA,MAAM,CAACE,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC;;EAGpD,MAAMC,KAAK,GAAGH,MAAM,CAACI,OAAO,CAAC,GAAG,CAAC;EACjC,IAAID,KAAK,IAAI,CAAC,EAAE;IACdH,MAAM,GAAGA,MAAM,CAACK,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC;;EAEjC,MAAMG,KAAK,GAAGN,MAAM,CAACI,OAAO,CAAC,GAAG,CAAC;EACjC,IAAIE,KAAK,IAAI,CAAC,EAAE;IACdN,MAAM,GAAGA,MAAM,CAACK,KAAK,CAAC,CAAC,EAAEC,KAAK,CAAC;;EAGjC,MAAMC,KAAK,GAAGP,MAAM,CACjBO,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACxBC,MAAM,CAAEF,GAAG,IAAKA,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC;EAElC,IAAIL,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,mBAAmBd,KAAK,EAAE,CAAC;;EAG7C,OAAOQ,KAAK,CAACA,KAAK,CAACK,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGL,KAAK,CAACA,KAAK,CAACK,MAAM,GAAG,CAAC,CAAC;AAChE;AA1BAE","names":["parseDomainUntilSecondLevel","param","domain","match","replace","slash","indexOf","slice","qMark","split","map","str","trim","filter","length","Error","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/phishing-list/utils.ts"],"sourcesContent":["export function parseDomainUntilSecondLevel(param: string): string {\n  let domain = param;\n\n  if (domain.match(/^[a-zA-Z0-9-]+:\\/\\/.+$/)) {\n    domain = domain.replace(/^[a-zA-Z0-9-]+:\\/\\//, \"\");\n  }\n\n  const slash = domain.indexOf(\"/\");\n  if (slash >= 0) {\n    domain = domain.slice(0, slash);\n  }\n  const qMark = domain.indexOf(\"?\");\n  if (qMark >= 0) {\n    domain = domain.slice(0, qMark);\n  }\n\n  const split = domain\n    .split(\".\")\n    .map((str) => str.trim())\n    .filter((str) => str.length > 0);\n\n  if (split.length < 2) {\n    throw new Error(`Invalid domain: ${param}`);\n  }\n\n  return split[split.length - 2] + \".\" + split[split.length - 1];\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}