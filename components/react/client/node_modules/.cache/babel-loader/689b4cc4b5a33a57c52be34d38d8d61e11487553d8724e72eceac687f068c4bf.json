{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMultisigThresholdPubkey = exports.compareArrays = void 0;\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst math_1 = require(\"@cosmjs/math\");\nconst addresses_1 = require(\"./addresses\");\n/**\n * Compare arrays lexicographically.\n *\n * Returns value < 0 if `a < b`.\n * Returns value > 0 if `a > b`.\n * Returns 0 if `a === b`.\n */\nfunction compareArrays(a, b) {\n  const aHex = (0, encoding_1.toHex)(a);\n  const bHex = (0, encoding_1.toHex)(b);\n  return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;\n}\nexports.compareArrays = compareArrays;\nfunction createMultisigThresholdPubkey(pubkeys, threshold) {\n  let nosort = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const uintThreshold = new math_1.Uint53(threshold);\n  if (uintThreshold.toNumber() > pubkeys.length) {\n    throw new Error(`Threshold k = ${uintThreshold.toNumber()} exceeds number of keys n = ${pubkeys.length}`);\n  }\n  const outPubkeys = nosort ? pubkeys : Array.from(pubkeys).sort((lhs, rhs) => {\n    // https://github.com/cosmos/cosmos-sdk/blob/v0.42.2/client/keys/add.go#L172-L174\n    const addressLhs = (0, addresses_1.pubkeyToRawAddress)(lhs);\n    const addressRhs = (0, addresses_1.pubkeyToRawAddress)(rhs);\n    return compareArrays(addressLhs, addressRhs);\n  });\n  return {\n    type: \"tendermint/PubKeyMultisigThreshold\",\n    value: {\n      threshold: uintThreshold.toString(),\n      pubkeys: outPubkeys\n    }\n  };\n}\nexports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAEA;AAGA;;;;;;;AAOA,SAAgBA,aAAa,CAACC,CAAa,EAAEC,CAAa;EACxD,MAAMC,IAAI,GAAG,oBAAK,EAACF,CAAC,CAAC;EACrB,MAAMG,IAAI,GAAG,oBAAK,EAACF,CAAC,CAAC;EACrB,OAAOC,IAAI,KAAKC,IAAI,GAAG,CAAC,GAAGD,IAAI,GAAGC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;AACjD;AAJAC;AAMA,SAAgBC,6BAA6B,CAC3CC,OAAgC,EAChCC,SAAiB,EACH;EAAA,IAAdC,MAAM,uEAAG,KAAK;EAEd,MAAMC,aAAa,GAAG,IAAIC,aAAM,CAACH,SAAS,CAAC;EAC3C,IAAIE,aAAa,CAACE,QAAQ,EAAE,GAAGL,OAAO,CAACM,MAAM,EAAE;IAC7C,MAAM,IAAIC,KAAK,CAAC,iBAAiBJ,aAAa,CAACE,QAAQ,EAAE,+BAA+BL,OAAO,CAACM,MAAM,EAAE,CAAC;;EAG3G,MAAME,UAAU,GAAGN,MAAM,GACrBF,OAAO,GACPS,KAAK,CAACC,IAAI,CAACV,OAAO,CAAC,CAACW,IAAI,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAI;IACpC;IACA,MAAMC,UAAU,GAAG,kCAAkB,EAACF,GAAG,CAAC;IAC1C,MAAMG,UAAU,GAAG,kCAAkB,EAACF,GAAG,CAAC;IAC1C,OAAOpB,aAAa,CAACqB,UAAU,EAAEC,UAAU,CAAC;EAC9C,CAAC,CAAC;EACN,OAAO;IACLC,IAAI,EAAE,oCAAoC;IAC1CC,KAAK,EAAE;MACLhB,SAAS,EAAEE,aAAa,CAACe,QAAQ,EAAE;MACnClB,OAAO,EAAEQ;;GAEZ;AACH;AAzBAV","names":["compareArrays","a","b","aHex","bHex","exports","createMultisigThresholdPubkey","pubkeys","threshold","nosort","uintThreshold","math_1","toNumber","length","Error","outPubkeys","Array","from","sort","lhs","rhs","addressLhs","addressRhs","type","value","toString"],"sources":["../src/multisig.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}