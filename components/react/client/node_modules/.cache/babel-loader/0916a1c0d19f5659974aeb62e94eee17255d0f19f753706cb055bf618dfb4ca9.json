{"ast":null,"code":"\"use strict\";\n\n/**\n * random.js\n */\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar util = __importStar(require(\"js-crypto-env\"));\n/**\n * Secure random string generator based on getRandomBytes,\n * which is composed of uppercase or lowercase alphanumeric characters;\n * @param {Number} len - Length of string.\n * @return {String} - Generated random ASCII string.\n */\nexports.getRandomString = function (len) {\n  var array = exports.getRandomBytes(len);\n  var types = exports.getRandomBytes(len); // indicating alphanumeric, upper, lower\n  var finalString = '';\n  // Ascii code\n  // 1-0: 0x30 -- 0x39, 10 chars\n  // A-Z: 0x41 -- 0x5a,\n  // a-z: 0x61 -- 0x7a\n  for (var i = 0; i < len; i++) {\n    types[i] = types[i] % 3;\n    array[i] = types[i] === 0 ? array[i] % 10 + 0x30 : array[i] % 26 + (types[i] === 1 ? 0x41 : 0x61);\n    finalString += String.fromCharCode(array[i]);\n  }\n  return finalString;\n};\n/**\n * Secure random 'ASCII' string generator based on getRandomBytes;\n * @param {Number} len - Length of ASCII string.\n * @return {String} - Generated random ASCII string.\n */\nexports.getRandomAsciiString = function (len) {\n  var array = exports.getRandomBytes(len);\n  var finalString = '';\n  // Ascii code excluding control characters are in 0x20 -- 0x7e\n  for (var i = 0; i < len; i++) {\n    array[i] = array[i] % 0x5e + 0x20;\n    finalString += String.fromCharCode(array[i]);\n  }\n  return finalString;\n};\n/**\n * Secure random string generator based on getRandomBytes,\n * which is composed of givin character candidates;\n * @param {Number} len - Length of string.\n * @param {String} candidates - Candidates string to sample randomly.\n * @return {String} - Generated random string.\n */\nexports.getRandomSampledString = function (len, candidates) {\n  var candidateLen = candidates.length;\n  if (candidateLen === 0) return '';\n  var array = exports.getRandomBytes(len);\n  var finalString = '';\n  for (var i = 0; i < len; i++) {\n    finalString += candidates[array[i] % candidateLen];\n  }\n  return finalString;\n};\n/**\n * Secure random generator that returns a byte array filled with cryptographically secure random bytes\n * @param {Number} len - Byte length of random sequence.\n * @return {Uint8Array} - Generated random sequence.\n * @throws {Error} - Throws if UnsupportedEnvironment.\n */\nexports.getRandomBytes = function (len) {\n  var webCrypto = util.getRootWebCryptoAll(); // web crypto api or ms crypto\n  var nodeCrypto = util.getNodeCrypto(); // implementation on node.js\n  if (typeof webCrypto !== 'undefined' && typeof webCrypto.getRandomValues === 'function') {\n    var array = new Uint8Array(len);\n    webCrypto.getRandomValues(array); // for modern browsers or legacy ie 11\n    return array;\n  } else if (typeof nodeCrypto !== 'undefined') {\n    // for node\n    return new Uint8Array(nodeCrypto.randomBytes(len));\n  } else {\n    throw new Error('UnsupportedEnvironment');\n  }\n};","map":{"version":3,"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","util","require","getRandomString","len","array","getRandomBytes","types","finalString","i","String","fromCharCode","getRandomAsciiString","getRandomSampledString","candidates","candidateLen","length","webCrypto","getRootWebCryptoAll","nodeCrypto","getNodeCrypto","getRandomValues","Uint8Array","randomBytes","Error"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/js-crypto-random/dist/random.js"],"sourcesContent":["\"use strict\";\n/**\n * random.js\n */\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __importStar(require(\"js-crypto-env\"));\n/**\n * Secure random string generator based on getRandomBytes,\n * which is composed of uppercase or lowercase alphanumeric characters;\n * @param {Number} len - Length of string.\n * @return {String} - Generated random ASCII string.\n */\nexports.getRandomString = function (len) {\n    var array = exports.getRandomBytes(len);\n    var types = exports.getRandomBytes(len); // indicating alphanumeric, upper, lower\n    var finalString = '';\n    // Ascii code\n    // 1-0: 0x30 -- 0x39, 10 chars\n    // A-Z: 0x41 -- 0x5a,\n    // a-z: 0x61 -- 0x7a\n    for (var i = 0; i < len; i++) {\n        types[i] = (types[i] % 3);\n        array[i] = (types[i] === 0) ?\n            (array[i] % 10) + 0x30 :\n            (array[i] % 26) + ((types[i] === 1) ? 0x41 : 0x61);\n        finalString += String.fromCharCode(array[i]);\n    }\n    return finalString;\n};\n/**\n * Secure random 'ASCII' string generator based on getRandomBytes;\n * @param {Number} len - Length of ASCII string.\n * @return {String} - Generated random ASCII string.\n */\nexports.getRandomAsciiString = function (len) {\n    var array = exports.getRandomBytes(len);\n    var finalString = '';\n    // Ascii code excluding control characters are in 0x20 -- 0x7e\n    for (var i = 0; i < len; i++) {\n        array[i] = (array[i] % 0x5e) + 0x20;\n        finalString += String.fromCharCode(array[i]);\n    }\n    return finalString;\n};\n/**\n * Secure random string generator based on getRandomBytes,\n * which is composed of givin character candidates;\n * @param {Number} len - Length of string.\n * @param {String} candidates - Candidates string to sample randomly.\n * @return {String} - Generated random string.\n */\nexports.getRandomSampledString = function (len, candidates) {\n    var candidateLen = candidates.length;\n    if (candidateLen === 0)\n        return '';\n    var array = exports.getRandomBytes(len);\n    var finalString = '';\n    for (var i = 0; i < len; i++) {\n        finalString += candidates[array[i] % candidateLen];\n    }\n    return finalString;\n};\n/**\n * Secure random generator that returns a byte array filled with cryptographically secure random bytes\n * @param {Number} len - Byte length of random sequence.\n * @return {Uint8Array} - Generated random sequence.\n * @throws {Error} - Throws if UnsupportedEnvironment.\n */\nexports.getRandomBytes = function (len) {\n    var webCrypto = util.getRootWebCryptoAll(); // web crypto api or ms crypto\n    var nodeCrypto = util.getNodeCrypto(); // implementation on node.js\n    if (typeof webCrypto !== 'undefined' && typeof webCrypto.getRandomValues === 'function') {\n        var array = new Uint8Array(len);\n        webCrypto.getRandomValues(array); // for modern browsers or legacy ie 11\n        return array;\n    }\n    else if (typeof nodeCrypto !== 'undefined') { // for node\n        return new Uint8Array(nodeCrypto.randomBytes(len));\n    }\n    else {\n        throw new Error('UnsupportedEnvironment');\n    }\n};\n//# sourceMappingURL=random.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}