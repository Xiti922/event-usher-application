{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHandler = void 0;\nconst messages_1 = require(\"./messages\");\nconst getHandler = service => {\n  return (env, msg) => {\n    switch (msg.constructor) {\n      case messages_1.SetPersistentMemoryMsg:\n        return handleSetPersistentMemoryMsg(service)(env, msg);\n      case messages_1.GetPersistentMemoryMsg:\n        return service.get();\n      default:\n        throw new Error(\"Unknown msg type\");\n    }\n  };\n};\nexports.getHandler = getHandler;\nconst handleSetPersistentMemoryMsg = service => (_, msg) => {\n  service.set(msg.data);\n  return {\n    success: true\n  };\n};","map":{"version":3,"mappings":";;;;;;AACA;AAGO,MAAMA,UAAU,GACrBC,OAAO,IACL;EACF,OAAO,CAACC,GAAQ,EAAEC,GAAqB,KAAI;IACzC,QAAQA,GAAG,CAACC,WAAW;MACrB,KAAKC,iCAAsB;QACzB,OAAOC,4BAA4B,CAACL,OAAO,CAAC,CAC1CC,GAAG,EACHC,GAA6B,CAC9B;MACH,KAAKE,iCAAsB;QACzB,OAAOJ,OAAO,CAACM,GAAG,EAAE;MACtB;QACE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IAAC;EAE1C,CAAC;AACH,CAAC;AAhBYC,kBAAU;AAkBvB,MAAMH,4BAA4B,GAGhCL,OAAgC,IAC7B,CAACS,CAAC,EAAEP,GAAG,KAAI;EACdF,OAAO,CAACU,GAAG,CAACR,GAAG,CAACS,IAAI,CAAC;EACrB,OAAO;IACLC,OAAO,EAAE;GACV;AACH,CAAC","names":["getHandler","service","env","msg","constructor","messages_1","handleSetPersistentMemoryMsg","get","Error","exports","_","set","data","success"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/src/persistent-memory/handler.ts"],"sourcesContent":["import { Env, Handler, InternalHandler, Message } from \"@keplr-wallet/router\";\nimport { SetPersistentMemoryMsg, GetPersistentMemoryMsg } from \"./messages\";\nimport { PersistentMemoryService } from \"./service\";\n\nexport const getHandler: (service: PersistentMemoryService) => Handler = (\n  service\n) => {\n  return (env: Env, msg: Message<unknown>) => {\n    switch (msg.constructor) {\n      case SetPersistentMemoryMsg:\n        return handleSetPersistentMemoryMsg(service)(\n          env,\n          msg as SetPersistentMemoryMsg\n        );\n      case GetPersistentMemoryMsg:\n        return service.get();\n      default:\n        throw new Error(\"Unknown msg type\");\n    }\n  };\n};\n\nconst handleSetPersistentMemoryMsg: (\n  service: PersistentMemoryService\n) => InternalHandler<SetPersistentMemoryMsg> = (\n  service: PersistentMemoryService\n) => (_, msg) => {\n  service.set(msg.data);\n  return {\n    success: true,\n  };\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}