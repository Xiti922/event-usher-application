{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQuerySupplyTotal = exports.ObservableChainQuerySupplyTotal = void 0;\nconst chain_query_1 = require(\"../../chain-query\");\nclass ObservableChainQuerySupplyTotal extends chain_query_1.ObservableChainQuery {\n  constructor(kvStore, chainId, chainGetter, denom) {\n    super(kvStore, chainId, chainGetter, `/cosmos/bank/v1beta1/supply/${denom}`);\n  }\n}\nexports.ObservableChainQuerySupplyTotal = ObservableChainQuerySupplyTotal;\nclass ObservableQuerySupplyTotal extends chain_query_1.ObservableChainQueryMap {\n  constructor(kvStore, chainId, chainGetter) {\n    super(kvStore, chainId, chainGetter, denom => {\n      return new ObservableChainQuerySupplyTotal(this.kvStore, this.chainId, this.chainGetter, denom);\n    });\n    this.kvStore = kvStore;\n    this.chainId = chainId;\n    this.chainGetter = chainGetter;\n  }\n  getQueryDenom(denom) {\n    return this.get(denom);\n  }\n  getQueryStakeDenom() {\n    const chainInfo = this.chainGetter.getChain(this.chainId);\n    return this.get(chainInfo.stakeCurrency.coinMinimalDenom);\n  }\n}\nexports.ObservableQuerySupplyTotal = ObservableQuerySupplyTotal;","map":{"version":3,"mappings":";;;;;;AAEA;AAMA,MAAaA,+BAAgC,SAAQC,kCAAiC;EACpFC,YACEC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,EACxBC,KAAa;IAEb,KAAK,CACHH,OAAO,EACPC,OAAO,EACPC,WAAW,EACX,+BAA+BC,KAAK,EAAE,CACvC;EACH;;AAbFC;AAgBA,MAAaC,0BAA2B,SAAQP,qCAAoC;EAClFC,YACqBC,OAAgB,EAChBC,OAAe,EACfC,WAAwB;IAE3C,KAAK,CAACF,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAGC,KAAa,IAAI;MACrD,OAAO,IAAIN,+BAA+B,CACxC,IAAI,CAACG,OAAO,EACZ,IAAI,CAACC,OAAO,EACZ,IAAI,CAACC,WAAW,EAChBC,KAAK,CACN;IACH,CAAC,CAAC;IAXiB,YAAO,GAAPH,OAAO;IACP,YAAO,GAAPC,OAAO;IACP,gBAAW,GAAXC,WAAW;EAUhC;EAEAI,aAAa,CAACH,KAAa;IACzB,OAAO,IAAI,CAACI,GAAG,CAACJ,KAAK,CAAC;EACxB;EAEAK,kBAAkB;IAChB,MAAMC,SAAS,GAAG,IAAI,CAACP,WAAW,CAACQ,QAAQ,CAAC,IAAI,CAACT,OAAO,CAAC;IACzD,OAAO,IAAI,CAACM,GAAG,CAACE,SAAS,CAACE,aAAa,CAACC,gBAAgB,CAAC;EAC3D;;AAvBFR","names":["ObservableChainQuerySupplyTotal","chain_query_1","constructor","kvStore","chainId","chainGetter","denom","exports","ObservableQuerySupplyTotal","getQueryDenom","get","getQueryStakeDenom","chainInfo","getChain","stakeCurrency","coinMinimalDenom"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/cosmos/supply/supply.ts"],"sourcesContent":["import { SupplyTotal } from \"./types\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport {\n  ObservableChainQuery,\n  ObservableChainQueryMap,\n} from \"../../chain-query\";\nimport { ChainGetter } from \"../../../common\";\n\nexport class ObservableChainQuerySupplyTotal extends ObservableChainQuery<SupplyTotal> {\n  constructor(\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter,\n    denom: string\n  ) {\n    super(\n      kvStore,\n      chainId,\n      chainGetter,\n      `/cosmos/bank/v1beta1/supply/${denom}`\n    );\n  }\n}\n\nexport class ObservableQuerySupplyTotal extends ObservableChainQueryMap<SupplyTotal> {\n  constructor(\n    protected readonly kvStore: KVStore,\n    protected readonly chainId: string,\n    protected readonly chainGetter: ChainGetter\n  ) {\n    super(kvStore, chainId, chainGetter, (denom: string) => {\n      return new ObservableChainQuerySupplyTotal(\n        this.kvStore,\n        this.chainId,\n        this.chainGetter,\n        denom\n      );\n    });\n  }\n\n  getQueryDenom(denom: string): ObservableChainQuerySupplyTotal {\n    return this.get(denom);\n  }\n\n  getQueryStakeDenom(): ObservableChainQuerySupplyTotal {\n    const chainInfo = this.chainGetter.getChain(this.chainId);\n    return this.get(chainInfo.stakeCurrency.coinMinimalDenom);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}