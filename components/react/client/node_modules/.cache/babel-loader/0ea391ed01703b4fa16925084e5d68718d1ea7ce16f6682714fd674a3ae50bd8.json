{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignInteractionStore = void 0;\nconst mobx_1 = require(\"mobx\");\nconst cosmos_1 = require(\"@keplr-wallet/cosmos\");\nclass SignInteractionStore {\n  constructor(interactionStore) {\n    this.interactionStore = interactionStore;\n    this._isLoading = false;\n    mobx_1.makeObservable(this);\n    mobx_1.autorun(() => {\n      // Reject all interactions that is not first one.\n      // This interaction can have only one interaction at once.\n      const datas = this.waitingDatas.slice();\n      if (datas.length > 1) {\n        for (let i = 1; i < datas.length; i++) {\n          this.rejectWithId(datas[i].id);\n        }\n      }\n    });\n  }\n  get waitingDatas() {\n    return this.interactionStore.getDatas(\"request-sign\");\n  }\n  get waitingData() {\n    const datas = this.waitingDatas;\n    if (datas.length === 0) {\n      return undefined;\n    }\n    const data = datas[0];\n    const wrapper = data.data.mode === \"amino\" ? cosmos_1.SignDocWrapper.fromAminoSignDoc(data.data.signDoc) : cosmos_1.SignDocWrapper.fromDirectSignDocBytes(data.data.signDocBytes);\n    return {\n      id: data.id,\n      type: data.type,\n      isInternal: data.isInternal,\n      data: {\n        chainId: data.data.chainId,\n        msgOrigin: data.data.msgOrigin,\n        signer: data.data.signer,\n        signDocWrapper: wrapper,\n        signOptions: data.data.signOptions,\n        isADR36WithString: \"isADR36WithString\" in data.data ? data.data.isADR36WithString : undefined,\n        ethSignType: \"ethSignType\" in data.data ? data.data.ethSignType : undefined\n      }\n    };\n  }\n  isEnded() {\n    return this.interactionStore.getEvents(\"request-sign-end\").length > 0;\n  }\n  clearEnded() {\n    this.interactionStore.clearEvent(\"request-sign-end\");\n  }\n  waitEnd() {\n    if (this.isEnded()) {\n      return Promise.resolve();\n    }\n    return new Promise(resolve => {\n      const disposer = mobx_1.autorun(() => {\n        if (this.isEnded()) {\n          resolve();\n          this.clearEnded();\n          disposer();\n        }\n      });\n    });\n  }\n  *approveAndWaitEnd(newSignDocWrapper) {\n    if (this.waitingDatas.length === 0) {\n      return;\n    }\n    this._isLoading = true;\n    const id = this.waitingDatas[0].id;\n    try {\n      const newSignDoc = newSignDocWrapper.mode === \"amino\" ? newSignDocWrapper.aminoSignDoc : newSignDocWrapper.protoSignDoc.toBytes();\n      yield this.interactionStore.approveWithoutRemovingData(id, newSignDoc);\n    } finally {\n      yield this.waitEnd();\n      this.interactionStore.removeData(\"request-sign\", id);\n      this._isLoading = false;\n    }\n  }\n  *reject() {\n    if (this.waitingDatas.length === 0) {\n      return;\n    }\n    this._isLoading = true;\n    try {\n      yield this.interactionStore.reject(\"request-sign\", this.waitingDatas[0].id);\n    } finally {\n      this._isLoading = false;\n    }\n  }\n  *rejectAll() {\n    this._isLoading = true;\n    try {\n      yield this.interactionStore.rejectAll(\"request-sign\");\n    } finally {\n      this._isLoading = false;\n    }\n  }\n  *rejectWithId(id) {\n    yield this.interactionStore.reject(\"request-sign\", id);\n  }\n  get isLoading() {\n    return this._isLoading;\n  }\n}\n__decorate([mobx_1.observable], SignInteractionStore.prototype, \"_isLoading\", void 0);\n__decorate([mobx_1.computed], SignInteractionStore.prototype, \"waitingData\", null);\n__decorate([mobx_1.flow], SignInteractionStore.prototype, \"approveAndWaitEnd\", null);\n__decorate([mobx_1.flow], SignInteractionStore.prototype, \"reject\", null);\n__decorate([mobx_1.flow], SignInteractionStore.prototype, \"rejectAll\", null);\n__decorate([mobx_1.flow], SignInteractionStore.prototype, \"rejectWithId\", null);\nexports.SignInteractionStore = SignInteractionStore;","map":{"version":3,"mappings":"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","names":["SignInteractionStore","constructor","interactionStore","mobx_1","datas","waitingDatas","slice","length","i","rejectWithId","id","getDatas","waitingData","undefined","data","wrapper","mode","cosmos_1","fromAminoSignDoc","signDoc","fromDirectSignDocBytes","signDocBytes","type","isInternal","chainId","msgOrigin","signer","signDocWrapper","signOptions","isADR36WithString","ethSignType","isEnded","getEvents","clearEnded","clearEvent","waitEnd","Promise","resolve","disposer","approveAndWaitEnd","newSignDocWrapper","_isLoading","newSignDoc","aminoSignDoc","protoSignDoc","toBytes","approveWithoutRemovingData","removeData","reject","rejectAll","isLoading","__decorate","exports"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/core/interaction/sign.ts"],"sourcesContent":["import { InteractionStore } from \"./interaction\";\nimport { autorun, computed, flow, makeObservable, observable } from \"mobx\";\nimport { StdSignDoc } from \"@cosmjs/launchpad\";\nimport { InteractionWaitingData } from \"@keplr-wallet/background\";\nimport { SignDocWrapper } from \"@keplr-wallet/cosmos\";\nimport { EthSignType, KeplrSignOptions } from \"@keplr-wallet/types\";\n\nexport class SignInteractionStore {\n  @observable\n  protected _isLoading: boolean = false;\n\n  constructor(protected readonly interactionStore: InteractionStore) {\n    makeObservable(this);\n\n    autorun(() => {\n      // Reject all interactions that is not first one.\n      // This interaction can have only one interaction at once.\n      const datas = this.waitingDatas.slice();\n      if (datas.length > 1) {\n        for (let i = 1; i < datas.length; i++) {\n          this.rejectWithId(datas[i].id);\n        }\n      }\n    });\n  }\n\n  protected get waitingDatas() {\n    return this.interactionStore.getDatas<\n      | {\n          msgOrigin: string;\n          chainId: string;\n          mode: \"amino\";\n          signer: string;\n          signDoc: StdSignDoc;\n          signOptions: KeplrSignOptions;\n          isADR36SignDoc: boolean;\n          isADR36WithString?: boolean;\n          ethSignType?: EthSignType;\n        }\n      | {\n          msgOrigin: string;\n          chainId: string;\n          mode: \"direct\";\n          signer: string;\n          signDocBytes: Uint8Array;\n          signOptions: KeplrSignOptions;\n        }\n    >(\"request-sign\");\n  }\n\n  @computed\n  get waitingData():\n    | InteractionWaitingData<{\n        chainId: string;\n        msgOrigin: string;\n        signer: string;\n        signDocWrapper: SignDocWrapper;\n        signOptions: KeplrSignOptions;\n        isADR36WithString?: boolean;\n        ethSignType?: EthSignType;\n      }>\n    | undefined {\n    const datas = this.waitingDatas;\n\n    if (datas.length === 0) {\n      return undefined;\n    }\n\n    const data = datas[0];\n    const wrapper =\n      data.data.mode === \"amino\"\n        ? SignDocWrapper.fromAminoSignDoc(data.data.signDoc)\n        : SignDocWrapper.fromDirectSignDocBytes(data.data.signDocBytes);\n\n    return {\n      id: data.id,\n      type: data.type,\n      isInternal: data.isInternal,\n      data: {\n        chainId: data.data.chainId,\n        msgOrigin: data.data.msgOrigin,\n        signer: data.data.signer,\n        signDocWrapper: wrapper,\n        signOptions: data.data.signOptions,\n        isADR36WithString:\n          \"isADR36WithString\" in data.data\n            ? data.data.isADR36WithString\n            : undefined,\n        ethSignType:\n          \"ethSignType\" in data.data ? data.data.ethSignType : undefined,\n      },\n    };\n  }\n\n  protected isEnded(): boolean {\n    return this.interactionStore.getEvents<void>(\"request-sign-end\").length > 0;\n  }\n\n  protected clearEnded() {\n    this.interactionStore.clearEvent(\"request-sign-end\");\n  }\n\n  protected waitEnd(): Promise<void> {\n    if (this.isEnded()) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve) => {\n      const disposer = autorun(() => {\n        if (this.isEnded()) {\n          resolve();\n          this.clearEnded();\n          disposer();\n        }\n      });\n    });\n  }\n\n  @flow\n  *approveAndWaitEnd(newSignDocWrapper: SignDocWrapper) {\n    if (this.waitingDatas.length === 0) {\n      return;\n    }\n\n    this._isLoading = true;\n    const id = this.waitingDatas[0].id;\n    try {\n      const newSignDoc =\n        newSignDocWrapper.mode === \"amino\"\n          ? newSignDocWrapper.aminoSignDoc\n          : newSignDocWrapper.protoSignDoc.toBytes();\n\n      yield this.interactionStore.approveWithoutRemovingData(id, newSignDoc);\n    } finally {\n      yield this.waitEnd();\n      this.interactionStore.removeData(\"request-sign\", id);\n\n      this._isLoading = false;\n    }\n  }\n\n  @flow\n  *reject() {\n    if (this.waitingDatas.length === 0) {\n      return;\n    }\n\n    this._isLoading = true;\n    try {\n      yield this.interactionStore.reject(\n        \"request-sign\",\n        this.waitingDatas[0].id\n      );\n    } finally {\n      this._isLoading = false;\n    }\n  }\n\n  @flow\n  *rejectAll() {\n    this._isLoading = true;\n    try {\n      yield this.interactionStore.rejectAll(\"request-sign\");\n    } finally {\n      this._isLoading = false;\n    }\n  }\n\n  @flow\n  protected *rejectWithId(id: string) {\n    yield this.interactionStore.reject(\"request-sign\", id);\n  }\n\n  get isLoading(): boolean {\n    return this._isLoading;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}