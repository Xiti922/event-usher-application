{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObservableQuerySecret20ContractInfo = exports.ObservableQuerySecret20ContactInfoInner = void 0;\nconst chain_query_1 = require(\"../chain-query\");\nconst mobx_1 = require(\"mobx\");\nconst contract_query_1 = require(\"./contract-query\");\nclass ObservableQuerySecret20ContactInfoInner extends contract_query_1.ObservableSecretContractChainQuery {\n  constructor(kvStore, chainId, chainGetter, apiGetter, contractAddress, querySecretContractCodeHash) {\n    // Don't need to set the url initially because it can't request without encyption.\n    super(kvStore, chainId, chainGetter, apiGetter, contractAddress, {\n      token_info: {}\n    }, querySecretContractCodeHash);\n    this.apiGetter = apiGetter;\n    this.contractAddress = contractAddress;\n    this.querySecretContractCodeHash = querySecretContractCodeHash;\n    mobx_1.makeObservable(this);\n  }\n  get error() {\n    return super.error || this.querySecretContractCodeHash.getQueryContract(this.contractAddress).error;\n  }\n  get tokenInfo() {\n    if (!this.response) {\n      return undefined;\n    }\n    return this.response.data.token_info;\n  }\n}\n__decorate([mobx_1.computed], ObservableQuerySecret20ContactInfoInner.prototype, \"tokenInfo\", null);\nexports.ObservableQuerySecret20ContactInfoInner = ObservableQuerySecret20ContactInfoInner;\nclass ObservableQuerySecret20ContractInfo extends chain_query_1.ObservableChainQueryMap {\n  constructor(kvStore, chainId, chainGetter, apiGetter, querySecretContractCodeHash) {\n    super(kvStore, chainId, chainGetter, contractAddress => {\n      return new ObservableQuerySecret20ContactInfoInner(this.kvStore, this.chainId, this.chainGetter, this.apiGetter, contractAddress, querySecretContractCodeHash);\n    });\n    this.kvStore = kvStore;\n    this.chainId = chainId;\n    this.chainGetter = chainGetter;\n    this.apiGetter = apiGetter;\n    this.querySecretContractCodeHash = querySecretContractCodeHash;\n  }\n  getQueryContract(contractAddress) {\n    return this.get(contractAddress);\n  }\n}\nexports.ObservableQuerySecret20ContractInfo = ObservableQuerySecret20ContractInfo;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAEA;AAGA;AACA;AAGA,MAAaA,uCAAwC,SAAQC,mDAA6D;EAGxHC,YACEC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,EACLC,SAA2C,EAC3CC,eAAuB,EACvBC,2BAAkE;IAErF;IACA,KAAK,CACHL,OAAO,EACPC,OAAO,EACPC,WAAW,EACXC,SAAS,EACTC,eAAe,EACf;MAAEE,UAAU,EAAE;IAAE,CAAE,EAClBD,2BAA2B,CAC5B;IAbkB,cAAS,GAATF,SAAS;IACT,oBAAe,GAAfC,eAAe;IACf,gCAA2B,GAA3BC,2BAA2B;IAY9CE,qBAAc,CAAC,IAAI,CAAC;EACtB;EAEA,IAAIC,KAAK;IACP,OACE,KAAK,CAACA,KAAK,IACX,IAAI,CAACH,2BAA2B,CAACI,gBAAgB,CAAC,IAAI,CAACL,eAAe,CAAC,CACpEI,KAAK;EAEZ;EAGA,IAAIE,SAAS;IACX,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAClB,OAAOC,SAAS;;IAGlB,OAAO,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACP,UAAU;EACtC;;AANAQ,YADCP,eAAQ,wEAOR;AAvCHQ;AA0CA,MAAaC,mCAAoC,SAAQC,qCAAkD;EACzGlB,YACqBC,OAAgB,EAChBC,OAAe,EACfC,WAAwB,EACxBC,SAA2C,EAC3CE,2BAAkE;IAErF,KAAK,CAACL,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAGE,eAAuB,IAAI;MAC/D,OAAO,IAAIP,uCAAuC,CAChD,IAAI,CAACG,OAAO,EACZ,IAAI,CAACC,OAAO,EACZ,IAAI,CAACC,WAAW,EAChB,IAAI,CAACC,SAAS,EACdC,eAAe,EACfC,2BAA2B,CAC5B;IACH,CAAC,CAAC;IAfiB,YAAO,GAAPL,OAAO;IACP,YAAO,GAAPC,OAAO;IACP,gBAAW,GAAXC,WAAW;IACX,cAAS,GAATC,SAAS;IACT,gCAA2B,GAA3BE,2BAA2B;EAYhD;EAEAI,gBAAgB,CACdL,eAAuB;IAEvB,OAAO,IAAI,CAACc,GAAG,CAACd,eAAe,CAA4C;EAC7E;;AAxBFW","names":["ObservableQuerySecret20ContactInfoInner","contract_query_1","constructor","kvStore","chainId","chainGetter","apiGetter","contractAddress","querySecretContractCodeHash","token_info","mobx_1","error","getQueryContract","tokenInfo","response","undefined","data","__decorate","exports","ObservableQuerySecret20ContractInfo","chain_query_1","get"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/stores/src/query/secret-wasm/secret20-contract-info.ts"],"sourcesContent":["import { Secret20ContractTokenInfo } from \"./types\";\nimport { KVStore } from \"@keplr-wallet/common\";\nimport { ObservableChainQueryMap } from \"../chain-query\";\nimport { ChainGetter, QueryError } from \"../../common\";\nimport { ObservableQuerySecretContractCodeHash } from \"./contract-hash\";\nimport { computed, makeObservable } from \"mobx\";\nimport { ObservableSecretContractChainQuery } from \"./contract-query\";\nimport { Keplr } from \"@keplr-wallet/types\";\n\nexport class ObservableQuerySecret20ContactInfoInner extends ObservableSecretContractChainQuery<Secret20ContractTokenInfo> {\n  protected nonce?: Uint8Array;\n\n  constructor(\n    kvStore: KVStore,\n    chainId: string,\n    chainGetter: ChainGetter,\n    protected readonly apiGetter: () => Promise<Keplr | undefined>,\n    protected readonly contractAddress: string,\n    protected readonly querySecretContractCodeHash: ObservableQuerySecretContractCodeHash\n  ) {\n    // Don't need to set the url initially because it can't request without encyption.\n    super(\n      kvStore,\n      chainId,\n      chainGetter,\n      apiGetter,\n      contractAddress,\n      { token_info: {} },\n      querySecretContractCodeHash\n    );\n    makeObservable(this);\n  }\n\n  get error(): Readonly<QueryError<unknown>> | undefined {\n    return (\n      super.error ||\n      this.querySecretContractCodeHash.getQueryContract(this.contractAddress)\n        .error\n    );\n  }\n\n  @computed\n  get tokenInfo(): Secret20ContractTokenInfo[\"token_info\"] | undefined {\n    if (!this.response) {\n      return undefined;\n    }\n\n    return this.response.data.token_info;\n  }\n}\n\nexport class ObservableQuerySecret20ContractInfo extends ObservableChainQueryMap<Secret20ContractTokenInfo> {\n  constructor(\n    protected readonly kvStore: KVStore,\n    protected readonly chainId: string,\n    protected readonly chainGetter: ChainGetter,\n    protected readonly apiGetter: () => Promise<Keplr | undefined>,\n    protected readonly querySecretContractCodeHash: ObservableQuerySecretContractCodeHash\n  ) {\n    super(kvStore, chainId, chainGetter, (contractAddress: string) => {\n      return new ObservableQuerySecret20ContactInfoInner(\n        this.kvStore,\n        this.chainId,\n        this.chainGetter,\n        this.apiGetter,\n        contractAddress,\n        querySecretContractCodeHash\n      );\n    });\n  }\n\n  getQueryContract(\n    contractAddress: string\n  ): ObservableQuerySecret20ContactInfoInner {\n    return this.get(contractAddress) as ObservableQuerySecret20ContactInfoInner;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}