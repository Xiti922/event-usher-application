{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unescapeHTML = exports.escapeHTML = void 0;\n/**\n * Escapes <,>,& in string.\n * Golang's json marshaller escapes <,>,& by default.\n * However, because JS doesn't do that by default, to match the sign doc with cosmos-sdk,\n * we should escape <,>,& in string manually.\n * @param str\n */\nfunction escapeHTML(str) {\n  return str.replace(/</g, \"\\\\u003c\").replace(/>/g, \"\\\\u003e\").replace(/&/g, \"\\\\u0026\");\n}\nexports.escapeHTML = escapeHTML;\n/**\n * Unescapes \\u003c/(<),\\u003e(>),\\u0026(&) in string.\n * Golang's json marshaller escapes <,>,& by default, whilst for most of the users, such escape characters are unfamiliar.\n * This function can be used to show the escaped characters with more familiar characters.\n * @param str\n */\nfunction unescapeHTML(str) {\n  return str.replace(/\\\\u003c/g, \"<\").replace(/\\\\u003e/g, \">\").replace(/\\\\u0026/g, \"&\");\n}\nexports.unescapeHTML = unescapeHTML;","map":{"version":3,"mappings":";;;;;;AAAA;;;;;;;AAOA,SAAgBA,UAAU,CAACC,GAAW;EACpC,OAAOA,GAAG,CACPC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CACxBA,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CACxBA,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC;AAC7B;AALAC;AAOA;;;;;;AAMA,SAAgBC,YAAY,CAACH,GAAW;EACtC,OAAOA,GAAG,CACPC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CACxBA,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CACxBA,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;AAC7B;AALAC","names":["escapeHTML","str","replace","exports","unescapeHTML"],"sources":["/Users/seanwavy/Development/legends/event-usher-application/components/react/client/node_modules/@keplr-wallet/background/node_modules/@keplr-wallet/common/src/escape/index.ts"],"sourcesContent":["/**\n * Escapes <,>,& in string.\n * Golang's json marshaller escapes <,>,& by default.\n * However, because JS doesn't do that by default, to match the sign doc with cosmos-sdk,\n * we should escape <,>,& in string manually.\n * @param str\n */\nexport function escapeHTML(str: string): string {\n  return str\n    .replace(/</g, \"\\\\u003c\")\n    .replace(/>/g, \"\\\\u003e\")\n    .replace(/&/g, \"\\\\u0026\");\n}\n\n/**\n * Unescapes \\u003c/(<),\\u003e(>),\\u0026(&) in string.\n * Golang's json marshaller escapes <,>,& by default, whilst for most of the users, such escape characters are unfamiliar.\n * This function can be used to show the escaped characters with more familiar characters.\n * @param str\n */\nexport function unescapeHTML(str: string): string {\n  return str\n    .replace(/\\\\u003c/g, \"<\")\n    .replace(/\\\\u003e/g, \">\")\n    .replace(/\\\\u0026/g, \"&\");\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}